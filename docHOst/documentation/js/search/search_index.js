var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/ActiveComponentService.html",[0,1.307,1,2.339]],["body/injectables/ActiveComponentService.html",[0,2.164,1,4.336,2,2.692,3,0.143,4,0.126,5,0.126,6,5.1,7,0.217,8,4.067,9,3.874,10,7.361,11,4.944,12,0.158,13,4.067,14,4.82,15,6.424,16,3.701,17,3.874,18,7.07,19,0.491,20,0.313,21,0.453,22,7.61,23,1.661,24,7.61,25,1.24,26,7.07,27,7.07,28,0.689,29,0.984,30,5.829,31,3.874,32,1.196,33,0.012,34,0.198,35,0.896,36,7.07,37,3.874,38,0.753,39,0.837,40,1.692,41,1.28,42,7.07,43,5.829,44,3.026,45,1.543,46,5.829,47,0.428,48,0.333,49,1.784,50,2.802,51,2.802,52,0.143,53,0.041,54,0.727,55,5.829,56,0.01,57,0.01]],["title/modules/AppModule.html",[58,2.339,59,3.121]],["body/modules/AppModule.html",[3,0.092,4,0.081,5,0.081,12,0.148,33,0.012,47,0.528,48,0.214,52,0.092,53,0.026,56,0.007,57,0.007,58,2.059,59,6.447,60,2.562,61,2.747,62,1.016,63,5.37,64,4.865,65,3.874,66,2.978,67,3.288,68,3.288,69,3.288,70,3.288,71,2.111,72,1.855,73,4.972,74,4.972,75,1.855,76,1.849,77,1.745,78,1.855,79,1.799,80,1.849,81,1.855,82,1.849,83,4.418,84,1.855,85,1.855,86,1.855,87,1.745,88,1.636,89,1.849,90,1.849,91,1.849,92,1.855,93,1.799,94,1.855,95,4.972,96,4.972,97,1.745,98,1.855,99,1.793,100,1.849,101,1.855,102,1.849,103,1.849,104,1.855,105,4.972,106,4.636,107,3.288,108,2.562,109,3.758,110,4.636,111,4.636,112,5.299,113,3.288,114,2.978,115,3.531,116,2.904,117,3.288,118,2.277,119,0.504,120,3.758,121,3.758,122,1.048,123,2.978,124,7.293,125,0.82,126,2.747,127,5.832,128,1.122,129,2.747,130,1.62,131,2.656,132,0.765,133,1.736,134,1.23,135,2.656,136,3.758,137,3.758,138,1.807,139,2.059,140,5.299,141,1.446,142,3.758,143,1.807,144,0.451,145,1.883,146,3.758,147,2.059,148,3.758,149,2.978,150,6.666,151,1.595,152,1.693,153,3.874,154,0.956,155,3.874,156,0.956,157,3.874,158,1.016,159,2.747,160,0.796,161,1.514,162,3.874,163,3.758,164,2.978,165,3.758,166,2.978,167,3.758,168,3.758,169,3.758,170,2.978,171,2.562,172,7.495,173,5.299,174,3.758,175,3.758,176,2.747,177,3.758,178,3.288,179,2.562,180,3.758,181,2.978,182,0.801,183,2.978,184,2.978,185,2.978,186,2.978,187,0.9,188,2.978,189,1.39,190,2.562,191,3.758,192,3.758,193,3.758,194,2.562,195,1.122,196,2.562,197,2.978,198,2.562,199,2.978,200,1.016,201,2.747,202,3.288,203,2.562,204,2.562,205,2.978,206,2.978,207,5.299,208,2.562,209,3.758,210,6.977,211,3.288,212,2.978,213,3.758,214,3.758,215,3.758,216,3.758,217,3.758]],["title/modules/AppRoutingModule.html",[58,2.339,105,2.911]],["body/modules/AppRoutingModule.html",[3,0.18,4,0.133,5,0.133,12,0.15,33,0.012,47,0.511,48,0.353,52,0.152,53,0.043,56,0.01,57,0.01,60,4.22,66,4.905,79,1.808,80,1.808,93,1.808,105,4.997,110,5.415,111,6.412,117,6.412,118,3.75,125,1.351,126,4.524,127,5.415,143,2.976,144,0.743,200,1.982,201,4.524,202,5.415,210,7.062,211,5.415,212,4.905,218,6.19,219,6.19,220,5.708,221,6.19,222,7.329,223,1.922,224,1.726,225,4.905,226,6.19,227,2.154,228,5.415,229,6.19,230,3.24,231,6.19]],["title/components/AuthenticationButtonComponent.html",[12,0.079,72,1.086]],["body/components/AuthenticationButtonComponent.html",[3,0.129,4,0.113,5,0.113,7,0.161,12,0.135,13,3.811,14,3.578,19,0.401,33,0.012,37,2.875,47,0.401,48,0.299,52,0.129,53,0.037,54,0.654,56,0.009,57,0.009,62,1.419,71,1.376,72,2.043,75,1.335,76,1.295,77,1.256,78,1.335,79,1.295,80,1.295,81,1.335,82,1.295,84,1.335,85,1.335,86,1.335,87,1.256,88,1.146,89,1.295,90,1.295,91,1.295,92,1.335,93,1.295,94,1.335,97,1.256,98,1.335,99,1.256,100,1.295,101,1.335,102,1.295,103,1.295,104,1.335,108,4.517,119,1.177,122,1.463,125,1.146,128,1.111,130,1.402,132,0.826,134,1.218,143,2.523,144,0.63,151,1.585,152,1.538,154,1.335,156,1.335,158,1.419,160,1.111,161,1.295,170,4.159,182,0.796,187,0.891,189,1.376,195,1.111,200,1.419,223,1.376,224,1.463,232,1.848,233,1.077,234,1.335,235,1.509,236,4.591,237,3.578,238,1.906,239,2.161,240,4.246,241,2.274,242,3.666,243,1.738,244,3.811,245,3.811,246,3.822,247,0.92,248,1.22,249,0.919,250,4.843,251,3.63,252,1.146,253,5.248,254,4.591,255,5.248,256,2.523,257,5.248,258,3.836,259,2.875,260,1.906,261,1.906,262,1.419,263,2.193,264,1.509,265,1.509,266,2.193,267,1.509,268,2.193,269,1.256,270,2.345,271,1.256,272,1.509,273,1.077,274,2.31,275,1.509,276,1.509,277,1.509,278,1.509,279,1.509,280,1.509,281,1.111,282,1.181,283,1.218,284,1.509,285,1.509,286,1.509,287,1.509,288,1.509]],["title/pipes/CapitalizeAndReplacePipe.html",[73,2.911,289,2.052]],["body/pipes/CapitalizeAndReplacePipe.html",[3,0.153,4,0.134,5,0.134,7,0.191,19,0.474,25,1.089,28,0.764,29,0.803,32,1.274,33,0.012,34,0.21,35,0.955,38,0.803,41,1.415,47,0.376,48,0.354,52,0.153,53,0.043,56,0.01,57,0.01,73,5.509,247,1.089,289,3.53,290,3.979,291,6.424,292,5.432,293,5.006,294,5.367,295,5.367,296,5.367,297,5.819,298,3.031,299,3.53,300,7.343,301,7.343,302,5.819,303,7.343,304,6.424,305,3.402,306,5.367,307,6.209,308,5.006,309,1.274,310,1.812,311,5.432,312,6.209,313,6.209,314,6.209]],["title/pipes/CapitalizePipe.html",[74,2.911,289,2.052]],["body/pipes/CapitalizePipe.html",[3,0.155,4,0.136,5,0.136,7,0.194,19,0.477,25,1.106,28,0.767,29,0.815,32,1.294,33,0.012,34,0.214,35,0.97,38,0.815,41,1.142,47,0.382,48,0.36,52,0.155,53,0.044,56,0.01,57,0.01,74,5.537,247,1.106,289,3.563,290,4.042,293,5.053,297,5.873,298,3.059,299,3.563,305,3.456,306,5.417,308,5.053,309,1.294,310,1.556,315,5.518,316,4.263,317,7.411,318,7.411,319,6.307,320,6.307,321,6.307,322,6.307,323,6.307]],["title/components/CartModalComponent.html",[12,0.079,75,1.086]],["body/components/CartModalComponent.html",[3,0.08,4,0.07,5,0.07,7,0.174,10,5.456,11,3.255,12,0.14,17,2.617,19,0.378,20,0.385,25,0.837,29,0.971,32,0.98,33,0.012,34,0.225,35,0.734,38,0.898,39,0.896,44,2.044,45,1.043,47,0.343,48,0.186,52,0.08,53,0.033,54,0.595,56,0.007,57,0.007,62,0.88,71,0.853,72,0.827,75,1.873,76,0.803,77,0.778,78,0.827,79,0.803,80,0.803,81,0.827,82,0.803,84,0.827,85,0.827,86,0.827,87,0.778,88,0.71,89,0.803,90,0.803,91,0.803,92,0.827,93,0.803,94,0.827,97,0.778,98,0.827,99,0.778,100,0.803,101,0.827,102,0.803,103,0.803,104,0.827,119,1.141,122,0.907,125,0.71,128,0.689,130,1.011,132,0.895,133,1.502,134,1.965,135,3.828,138,3.45,139,1.782,144,0.391,151,1.143,152,1.109,154,0.827,156,0.827,158,0.88,160,0.689,161,0.803,182,0.862,187,0.552,189,0.853,195,0.689,200,0.88,223,0.853,224,0.907,232,1.332,233,0.98,234,0.827,235,0.936,239,2.401,241,0.907,242,3.539,245,2.747,247,0.57,248,1.183,249,0.663,252,1.043,256,2.296,260,1.374,261,1.374,262,0.88,263,1.794,264,0.936,265,0.936,266,1.794,267,0.936,268,1.794,269,1.798,270,2.064,271,0.778,272,0.936,273,0.668,274,1.997,275,0.936,276,0.936,277,0.936,278,0.936,279,0.936,280,0.936,281,0.689,282,0.732,283,0.755,284,0.936,285,0.936,286,0.936,287,0.936,288,0.936,305,3.101,310,1.178,324,6.053,325,2.846,326,3.587,327,1.971,328,1.373,329,2.747,330,4.942,331,4.558,332,4.627,333,3.061,334,3.255,335,0.785,336,5.456,337,4.776,338,4.45,339,1.241,340,4.558,341,4.558,342,3.785,343,2.747,344,2.104,345,2.5,346,4.137,347,4.137,348,0.9,349,2.846,350,4.776,351,1.292,352,2.747,353,1.558,354,1.354,355,2.894,356,3.253,357,3.068,358,3.256,359,2.761,360,2.401,361,2.484,362,6.236,363,2.771,364,4.46,365,3.253,366,4.558,367,3.253,368,3.061,369,3.539,370,1.492,371,1.218,372,3.253,373,0.95,374,0.921,375,0.95,376,2.747,377,4.776,378,3.256,379,1.717,380,3.253,381,2.484,382,3.061,383,2.67,384,3.253,385,3.256,386,3.253,387,2.747,388,3.785,389,2.894,390,1.837,391,2.177,392,1.971,393,0.5,394,0.484,395,1.971,396,0.88,397,2.378,398,1.717,399,2.378,400,2.378,401,2.378,402,1.871,403,2.085,404,1.871,405,1.97,406,4.179,407,2.319,408,2.5,409,2.5,410,2.617,411,3.061,412,3.785,413,3.587,414,2.497,415,1.296,416,2.556,417,2.319,418,1.902,419,2.761,420,3.785,421,1.251,422,2.319,423,2.737,424,5.456,425,1.63,426,1.703,427,3.072,428,1.782,429,1.871,430,2.581,431,1.563,432,2.389,433,1.392,434,0.88,435,2.177,436,1.739,437,1.662,438,2.044,439,1.061,440,2.747,441,2.515,442,2.399,443,2.515,444,2.515,445,3.491,446,1.343,447,2.578,448,4.558,449,3.253,450,1.971,451,3.253,452,3.193,453,3.207,454,3.253,455,1.837,456,1.971,457,1.971,458,3.477,459,1.971,460,2.766,461,1.703,462,1.63,463,3.253,464,3.253,465,2.793,466,2.846,467,4.942,468,2.218,469,2.846,470,2.846,471,2.846,472,2.578,473,2.846,474,4.179,475,4.485,476,4.485,477,2.578,478,2.578,479,2.578,480,2.846,481,2.578,482,3.061,483,3.253,484,4.179,485,4.942,486,2.846,487,1.343,488,3.253,489,1.296,490,1.502,491,1.251,492,2.846,493,1.703,494,3.785]],["title/injectables/CartService.html",[0,1.307,138,2.052]],["body/injectables/CartService.html",[0,2.055,2,2.06,3,0.11,4,0.096,5,0.096,7,0.23,15,5.918,17,3.678,19,0.452,20,0.4,21,0.43,23,1.677,25,1.045,29,1.031,32,1.533,33,0.012,34,0.266,35,1.148,38,0.993,39,1.03,44,3.197,45,0.973,47,0.434,48,0.255,49,1.365,50,2.144,51,3.227,52,0.11,53,0.042,54,0.978,56,0.008,57,0.008,132,0.931,133,2.06,134,1.944,135,4.046,138,3.694,141,1.716,144,0.536,182,0.988,187,1.012,227,2.673,243,1.563,262,1.206,310,1.1,324,6.398,328,1.398,330,4.723,339,1.186,342,4.723,348,1.067,351,1.816,352,3.428,354,1.878,371,1.37,373,0.887,374,0.86,375,0.887,378,4.577,379,2.143,385,4.064,389,3.611,392,2.702,393,0.686,394,0.663,395,2.702,396,1.206,407,1.658,439,1.454,495,3.902,496,3.428,497,3.982,498,3.611,499,1.944,500,2.987,501,5.215,502,7.166,503,4.723,504,7.166,505,6.713,506,5.96,507,5.96,508,2.235,509,3.061,510,5.96,511,2.975,512,4.064,513,2.865,514,5.96,515,4.46,516,3.611,517,4.46,518,5.96,519,5.96,520,6.534,521,6.534,522,4.46,523,1.032,524,4.302,525,4.067,526,5.96,527,4.46,528,5.96,529,4.46,530,5.96,531,5.96,532,2.649,533,4.46,534,2.334,535,4.723,536,3.041,537,3.902,538,3.902,539,2.235,540,3.26,541,3.041,542,5.96,543,4.46,544,4.46,545,4.46,546,4.46,547,4.46,548,4.46,549,4.46,550,2.235,551,4.46,552,4.46,553,6.713,554,5.96,555,4.46,556,4.46,557,4.46,558,4.46,559,4.46,560,4.46,561,4.46,562,4.46,563,3.902,564,2.444,565,4.46,566,3.041,567,3.428,568,4.46,569,4.46,570,4.46,571,4.46,572,2.771,573,1.982,574,4.46,575,4.46]],["title/components/CheckoutPopupComponent.html",[12,0.079,77,1.022]],["body/components/CheckoutPopupComponent.html",[3,0.087,4,0.077,5,0.077,7,0.109,12,0.137,19,0.309,20,0.349,25,0.894,28,0.648,29,0.926,33,0.012,34,0.233,38,0.46,39,0.732,40,1.425,41,1.078,45,0.777,47,0.215,48,0.203,52,0.087,53,0.036,56,0.007,57,0.007,62,0.962,71,0.933,72,0.905,75,0.905,76,0.878,77,1.714,78,0.905,79,0.878,80,0.878,81,0.905,82,0.878,84,0.905,85,0.905,86,0.905,87,0.851,88,0.777,89,0.878,90,0.878,91,0.878,92,0.905,93,0.878,94,0.905,97,0.851,98,0.905,99,0.851,100,0.878,101,0.905,102,0.878,103,0.878,104,0.905,119,1.149,122,0.992,125,0.777,128,0.753,130,1.079,132,0.635,134,1.382,144,0.427,151,1.22,152,1.183,154,0.905,156,0.905,158,0.962,160,0.753,161,0.878,182,0.612,187,0.604,189,0.933,195,0.753,200,0.962,203,5.029,204,5.029,223,0.933,224,0.992,232,1.421,233,1.046,234,0.905,235,1.023,241,0.992,247,0.624,248,1.192,249,0.707,252,1.113,260,1.466,261,1.466,262,0.962,263,1.871,264,1.023,265,1.023,266,1.871,267,1.023,268,1.871,269,1.951,270,2.122,271,0.851,272,1.023,273,1.046,274,2.06,275,1.023,276,1.023,277,1.023,278,1.023,279,1.023,280,1.023,281,0.753,282,0.801,283,0.826,284,1.023,285,1.023,286,1.023,287,1.023,288,1.023,328,1.256,335,0.837,343,2.932,345,2.668,359,2.291,360,2.121,361,2.03,363,2.265,369,3.793,370,0.851,381,2.03,390,2.648,391,1.961,393,0.547,394,0.529,405,2.015,407,2.418,412,2.819,413,2.932,414,2.339,415,2.03,416,2.291,417,1.895,418,2.03,419,2.648,421,1.961,422,3.065,423,2.963,425,1.783,426,1.862,427,2.182,428,2.793,429,2.046,430,2.339,431,1.729,432,2.575,433,1.523,434,1.759,435,2.648,436,2.242,437,1.773,438,2.182,441,1.581,442,2.291,443,3.059,444,2.89,446,2.104,453,1.643,455,2.502,460,2.938,461,1.862,462,1.783,465,3.079,468,2.426,487,2.104,489,1.417,494,2.819,576,4.469,577,1.581,578,2.668,579,0.349,580,2.793,581,2.793,582,2.932,583,5.154,584,2.793,585,3.475,586,2.462,587,2.751,588,2.354,589,3.564,590,2.06,591,2.107,592,3.23,593,2.6,594,1.421,595,2.354,596,1.805,597,2.6,598,2.006,599,1.833,600,2.475,601,2.819,602,2.265,603,2.45,604,2.793,605,2.819,606,2.819,607,2.354,608,3.558,609,1.466,610,1.056,611,1.466,612,1.716,613,1.773,614,1.124,615,0.992,616,1.862,617,2.819,618,4.72,619,4.459,620,5.097,621,2.155,622,2.155,623,3.117,624,2.155,625,2.155,626,3.59,627,2.751,628,1.643,629,2.104,630,2.155,631,2.046,632,2.155,633,1.468,634,2.046,635,1.468,636,2.155,637,2.155,638,3.558,639,1.862,640,2.819,641,2.668,642,1.862,643,1.949,644,1.949,645,2.6,646,2.426,647,2.6,648,2.6,649,2.819,650,2.819,651,2.819,652,2.819,653,2.819,654,2.819,655,1.523,656,3.94,657,4.571,658,2.819,659,3.94,660,3.741,661,2.819,662,2.819,663,3.558,664,4.039,665,2.426,666,2.819,667,2.819,668,2.819,669,2.155]],["title/components/ConfirmationPopupComponent.html",[12,0.079,78,1.086]],["body/components/ConfirmationPopupComponent.html",[3,0.096,4,0.084,5,0.084,7,0.12,12,0.146,19,0.33,20,0.336,25,0.955,29,0.955,33,0.012,34,0.25,38,0.704,39,0.974,40,0.935,41,0.707,45,1.189,47,0.237,48,0.223,52,0.096,53,0.038,56,0.008,57,0.008,62,1.057,71,1.025,72,0.994,75,0.994,76,0.964,77,0.935,78,1.878,79,0.964,80,0.964,81,0.994,82,0.964,84,0.994,85,0.994,86,0.994,87,0.935,88,0.853,89,0.964,90,0.964,91,0.964,92,0.994,93,0.964,94,0.994,97,0.935,98,0.994,99,0.935,100,0.964,101,0.994,102,0.964,103,0.964,104,0.994,119,1.157,122,1.09,125,0.853,128,0.827,130,1.153,132,0.679,134,0.907,144,0.469,151,1.303,152,1.264,154,0.994,156,0.994,158,1.057,160,0.827,161,0.964,182,0.91,184,6.005,185,6.005,187,1.286,189,1.025,195,0.827,200,1.057,223,1.025,224,1.09,232,1.519,233,1.118,234,0.994,235,1.124,239,2.593,241,1.09,247,0.685,248,1.199,249,0.756,252,1.189,256,2.618,258,3.981,260,1.566,261,1.566,262,1.057,263,1.95,264,1.124,265,1.124,266,1.95,267,1.124,268,1.95,269,0.935,270,2.179,271,1.94,272,1.124,273,1.555,274,2.124,275,1.124,276,1.124,277,1.124,278,1.124,279,1.124,280,1.124,281,0.827,282,0.88,283,0.907,284,1.124,285,1.124,286,1.124,287,1.124,288,1.124,328,0.685,335,0.895,343,3.133,345,2.851,353,1.776,358,3.713,359,2.743,360,2.52,361,2.701,381,2.941,390,2.915,391,2.915,393,0.601,394,0.581,405,1.987,414,1.958,415,1.556,416,2.095,417,1.453,418,1.556,419,2.609,421,2.095,422,2.956,423,2.746,425,1.958,426,2.045,427,1.673,428,2.984,429,2.248,430,1.958,431,1.226,432,1.958,435,2.095,436,1.748,442,1.503,446,1.613,455,2.412,460,2.497,465,2.874,489,1.556,577,1.736,586,1.98,587,2.895,588,2.515,615,1.09,619,4.765,621,2.367,622,2.367,623,2.851,624,2.367,625,2.367,626,3.142,627,1.805,628,1.805,629,1.613,630,2.367,631,2.248,632,2.367,633,1.613,634,2.248,635,1.613,636,2.367,637,2.367,655,3.161,656,3.299,657,4.108,659,3.299,660,3.133,669,2.367,670,3.018,671,3.981,672,3.713,673,2.618,674,5.446,675,4.316,676,7.577,677,3.713,678,4.765,679,6.781,680,6.781,681,4.32,682,7.131,683,3.549,684,3.419,685,5.374,686,5.446,687,2.095,688,3.672,689,3.908,690,5.446,691,5.446,692,3.419,693,6.781,694,5.446,695,3.419,696,5.446,697,3.908,698,5.374,699,3.908,700,5.446,701,3.908,702,3.908,703,5.446,704,4.316,705,4.765,706,4.765,707,4.765,708,6.269,709,3.419,710,3.908,711,3.908,712,2.045]],["title/components/ContactUsComponent.html",[12,0.079,79,1.053]],["body/components/ContactUsComponent.html",[3,0.16,4,0.09,5,0.09,7,0.128,12,0.14,19,0.476,20,0.224,21,0.365,23,0.911,25,0.999,28,0.682,29,0.974,32,0.857,33,0.012,34,0.247,35,0.642,38,0.54,39,0.6,40,1.553,41,1.175,47,0.393,48,0.238,52,0.103,53,0.04,54,0.71,56,0.008,57,0.008,62,1.129,71,1.095,72,1.062,75,1.062,76,1.03,77,0.999,78,1.062,79,1.937,80,1.03,81,1.062,82,1.03,84,1.062,85,1.062,86,1.062,87,0.999,88,0.911,89,1.03,90,1.03,91,1.03,92,1.062,93,1.03,94,1.062,97,0.999,98,1.062,99,0.999,100,1.03,101,1.062,102,1.03,103,1.03,104,1.062,119,1.162,122,1.164,125,1.758,128,0.884,130,1.206,132,0.71,134,0.969,141,1.606,143,2.007,144,0.685,151,1.364,152,1.323,154,1.062,156,1.062,158,1.129,160,0.884,161,1.03,182,0.685,187,0.709,189,1.095,195,0.884,200,2.297,201,5.638,223,1.095,224,1.164,227,1.452,232,1.59,233,0.857,234,1.062,235,1.201,238,1.867,239,1.859,240,3.653,241,1.164,243,1.495,244,3.278,245,3.278,247,0.999,248,1.203,249,0.791,251,4,252,0.911,259,3.821,260,1.639,261,1.639,262,1.129,263,2.006,264,1.201,265,1.201,266,2.006,267,1.201,268,2.006,269,0.999,270,2.219,271,0.999,272,1.201,273,0.857,274,2.168,275,1.201,276,1.201,277,1.201,278,1.201,279,1.201,280,1.201,281,0.884,282,0.94,283,0.969,284,1.201,285,1.201,286,1.201,287,1.201,288,1.201,316,3.278,335,0.937,348,1.109,351,1.129,353,1.361,393,0.642,394,0.621,395,2.529,423,1.552,430,1.501,431,1.283,432,2.334,433,1.787,434,1.129,435,1.606,436,1.164,437,1.452,438,1.787,465,1.552,509,2.778,511,2.585,523,1.072,524,3.653,566,3.886,572,1.723,613,1.452,626,2.092,713,6.748,714,3.652,715,3.886,716,5.7,717,5.7,718,5.786,719,5.7,720,4.987,721,3.123,722,4.517,723,6.49,724,5.7,725,3.556,726,6.974,727,6.974,728,6.974,729,6.974,730,2.675,731,5.7,732,4.174,733,5.7,734,7.301,735,6.49,736,4.174,737,4.174,738,7.536,739,4.174,740,4.174,741,3.652,742,4.174,743,2.846,744,4.174,745,1.663,746,3.652,747,5.7,748,4.174,749,4.174,750,4.174,751,4.174,752,4.174,753,2.675,754,4.174,755,3.652,756,4.517,757,5.7,758,5.7,759,5.7,760,6.974,761,3.653,762,6.974,763,5.7,764,2.092,765,3.652,766,3.652]],["title/interfaces/CustomerMenuItem.html",[579,0.229,767,3.121]],["body/interfaces/CustomerMenuItem.html",[3,0.139,4,0.122,5,0.122,7,0.213,19,0.502,20,0.303,21,0.445,28,0.784,33,0.012,34,0.284,52,0.171,56,0.01,57,0.01,125,1.515,132,1.088,133,2.611,182,1.048,354,1.353,370,1.983,371,1.407,579,0.372,767,5.072,768,1.626,769,3.425,770,4.48,771,3.991,772,1.923,773,2.941,774,2.002,775,1.844,776,1.577,777,1.731,778,1.577,779,2.495,780,2.333]],["title/components/CustomerViewComponent.html",[12,0.079,80,1.053]],["body/components/CustomerViewComponent.html",[3,0.12,4,0.055,5,0.055,7,0.195,9,3.028,12,0.111,19,0.401,20,0.263,21,0.256,23,1.069,25,0.7,28,0.697,29,0.961,32,1.229,33,0.012,34,0.243,35,0.921,38,0.885,39,0.794,40,1.323,41,1,47,0.297,48,0.146,49,0.785,52,0.063,53,0.028,54,0.746,56,0.006,57,0.006,62,0.694,71,0.673,72,0.653,75,0.653,76,0.633,77,0.614,78,0.653,79,0.633,80,1.688,81,0.653,82,0.633,84,0.653,85,0.653,86,0.653,87,0.614,88,0.56,89,0.633,90,0.633,91,0.633,92,0.653,93,0.633,94,0.653,97,0.614,98,0.653,99,0.614,100,0.633,101,0.653,102,0.633,103,0.633,104,0.653,119,1.116,122,0.715,125,1.494,126,5.507,128,0.543,130,0.845,132,0.497,134,0.595,144,0.308,151,1.719,152,1.588,154,0.653,156,0.653,158,1.325,160,0.543,161,0.633,182,0.479,187,0.436,189,0.673,195,0.543,200,1.325,212,4.38,223,0.673,224,1.67,230,2.089,232,1.113,233,0.819,234,0.653,235,0.738,238,1.148,241,0.715,244,2.296,246,1.286,247,0.45,248,1.159,249,0.554,252,0.871,256,2.657,260,1.148,261,1.148,262,0.694,263,1.59,264,0.738,265,0.738,266,1.59,267,0.738,268,1.59,269,1.172,270,1.904,271,0.614,272,0.738,273,0.527,274,1.824,275,0.738,276,0.738,277,0.738,278,0.738,279,0.738,280,0.738,281,0.543,282,0.577,283,0.595,284,0.738,285,0.738,286,2.396,287,0.738,288,0.738,298,1.647,309,0.819,310,1.477,326,2.296,327,1.647,328,0.7,335,0.656,339,1.1,348,0.779,351,1.851,352,2.296,355,2.418,371,1.076,373,1.191,374,0.77,375,0.794,376,2.296,393,0.395,394,0.381,396,0.694,405,0.673,407,1.484,414,2.153,416,2.439,417,2.461,418,2.862,419,2.86,420,2.033,421,2.546,422,2.226,423,2.357,425,2,427,2.563,430,2.632,431,1.647,432,2.673,433,2.097,434,1.079,435,2.304,436,1.67,437,1.389,438,1.708,439,0.837,441,2.941,442,2.633,443,2.456,444,2.456,446,2.022,452,3.816,453,3.057,455,2.764,465,2.226,467,2.033,487,1.647,492,4.835,499,1.598,523,1.184,564,4.322,594,1.908,614,1.261,615,0.715,623,2.089,626,1.286,633,1.059,635,1.059,647,1.875,648,1.875,664,3.163,685,3.882,687,1.535,709,2.245,743,2.721,745,1.59,764,2.455,773,2.793,774,0.955,781,6.591,782,1.233,783,2.721,784,5.695,785,4.38,786,2.721,787,2.917,788,2.917,789,3.991,790,3.991,791,1.59,792,2.455,793,2,794,4.899,795,4.286,796,4.899,797,4.899,798,4.899,799,5.988,800,3.991,801,3.991,802,3.991,803,3.991,804,2.566,805,4.512,806,3.991,807,3.991,808,3.991,809,2.566,810,3.991,811,7.186,812,5.527,813,5.527,814,4.899,815,3.991,816,3.991,817,2.566,818,2.418,819,6.34,820,4.835,821,3.991,822,3.991,823,2.566,824,3.492,825,3.991,826,7.319,827,3.991,828,3.492,829,3.991,830,3.991,831,2.566,832,3.991,833,3.991,834,3.492,835,2.566,836,4.899,837,6.843,838,4.899,839,4.899,840,4.899,841,4.899,842,4.899,843,4.899,844,4.899,845,4.899,846,4.899,847,4.899,848,4.899,849,2.566,850,1.59,851,2.566,852,3.991,853,3.841,854,2.566,855,4.899,856,2.566,857,4.899,858,4.899,859,4.899,860,4.899,861,4.899,862,4.899,863,4.899,864,4.899,865,4.899,866,2.566,867,2.245,868,3.991,869,3.991,870,3.991,871,2.566,872,2.566,873,1.022,874,2.566,875,2.566,876,2.566,877,2.566,878,4.899,879,2.566,880,1.554,881,2.566,882,2.566,883,2.566,884,2.566,885,2.566,886,2.566,887,1.919,888,2.566,889,2.566,890,2.245,891,3.492,892,6.843,893,3.991,894,3.991,895,3.991,896,3.991,897,3.991,898,3.991,899,3.991,900,3.492,901,3.991,902,3.991,903,3.991,904,3.991,905,3.991,906,5.527,907,3.991,908,3.991,909,3.991,910,4.38,911,3.991,912,3.991,913,3.991,914,3.991,915,3.991,916,3.991,917,3.991,918,3.991,919,3.991,920,3.163,921,3.163,922,1.919,923,3.991,924,3.991,925,3.991,926,2.187,927,3.991,928,3.991,929,3.991,930,3.991,931,3.991,932,3.991,933,3.991,934,3.991,935,3.991,936,3.991,937,3.991,938,3.991,939,5.527,940,3.991,941,3.991,942,3.991,943,3.991,944,4.38,945,6.34,946,3.991,947,3.991,948,3.991,949,3.991,950,3.991,951,3.991,952,3.991,953,3.991,954,3.991,955,1.774,956,3.991,957,3.991,958,3.991,959,3.991,960,3.991,961,3.991,962,3.991,963,3.991,964,3.581,965,3.991,966,3.991,967,3.991,968,3.991,969,2.566,970,2.033,971,3.163,972,4.899,973,1.406,974,2.566,975,3.991,976,3.991,977,2.566,978,3.492,979,2.566,980,3.991,981,3.991,982,2.566,983,1.476,984,2.566,985,3.163,986,2.566,987,1.476,988,2.566,989,4.286,990,3.991,991,2.245,992,2.566,993,2.566,994,2.566,995,2.566,996,2.566,997,2.033,998,2.033,999,2.245,1000,2.566,1001,2.418,1002,2.566,1003,2.566,1004,3.991,1005,2.566,1006,1.476,1007,1.554,1008,2.566,1009,2.566,1010,2.566,1011,2.566,1012,2.566,1013,2.566,1014,2.245,1015,2.033,1016,2.566,1017,2.566,1018,2.566,1019,2.418,1020,2.566,1021,3.991]],["title/classes/Customers.html",[53,0.03,786,2.911]],["body/classes/Customers.html",[3,0.152,4,0.133,5,0.133,7,0.19,19,0.488,20,0.331,21,0.469,28,0.756,29,1.042,33,0.012,34,0.273,35,1.307,52,0.152,53,0.043,56,0.01,57,0.01,125,1.855,316,4.205,371,1.368,579,0.331,756,5.794,761,4.686,772,1.697,786,5.315,1022,3.378,1023,5.393,1024,4.884,1025,7.053,1026,7.053,1027,7.053,1028,6.164,1029,6.164,1030,6.164,1031,6.164]],["title/injectables/CustomersService.html",[0,1.307,1032,3.383]],["body/injectables/CustomersService.html",[0,2.148,2,2.659,3,0.142,4,0.124,5,0.124,7,0.216,19,0.349,20,0.309,21,0.45,23,1.652,25,1.23,29,0.978,32,1.181,33,0.012,34,0.195,35,0.885,38,0.907,40,1.377,41,1.042,44,3.458,47,0.477,48,0.329,49,1.762,50,2.767,51,2.767,52,0.142,53,0.04,54,0.717,56,0.01,57,0.01,58,3.845,125,1.793,141,2.215,145,2.885,147,3.154,238,2.018,310,1.42,348,1.203,353,2.288,357,3.241,396,1.557,508,2.885,509,3.272,511,3.313,513,3.788,523,1.212,564,3.845,745,2.795,786,4.784,1032,6.511,1033,5.036,1034,7.016,1035,5.56,1036,4.977,1037,5.129,1038,4.251,1039,6.139,1040,4.353,1041,7.879,1042,7.016,1043,4.036,1044,5.756,1045,5.129,1046,7.016,1047,4.497,1048,3.311]],["title/injectables/DataService.html",[0,1.307,1049,2.911]],["body/injectables/DataService.html",[0,1.922,2,1.81,3,0.096,4,0.084,5,0.084,7,0.168,16,3.553,19,0.432,20,0.21,21,0.403,23,1.191,25,0.957,29,1.015,32,1.288,33,0.012,34,0.272,35,0.965,38,1.015,39,1.062,40,1.306,41,0.988,44,3.497,45,1.191,47,0.448,48,0.224,49,1.199,50,1.883,51,3.018,52,0.096,53,0.038,54,0.846,56,0.008,57,0.01,128,1.637,130,1.684,132,0.68,141,1.507,143,1.883,144,0.655,160,1.437,179,5.423,182,0.655,227,1.898,239,2.711,241,1.522,243,1.431,251,4.05,259,3.72,262,1.06,309,0.804,310,1.675,316,3.138,328,0.957,339,1.47,348,1.079,351,1.698,357,2.52,358,3.72,373,1.42,374,1.21,375,1.249,379,2.86,393,0.602,394,0.582,395,2.374,414,1.962,496,3.138,497,3.898,498,3.305,499,1.779,500,2.734,501,4.773,508,1.963,509,2.944,511,2.843,512,3.72,513,2.623,523,1.256,524,5.197,534,2.051,535,4.324,536,2.671,537,3.428,538,3.428,539,1.963,540,2.864,541,2.671,687,2.975,725,4.05,745,2.173,761,3.497,774,1.306,850,2.944,873,3.129,926,2.99,987,2.253,1049,5.039,1050,5.814,1051,3.428,1052,2.734,1053,3.72,1054,2.99,1055,3.72,1056,6.278,1057,6.278,1058,5.456,1059,5.456,1060,6.789,1061,6.789,1062,5.939,1063,5.456,1064,2.623,1065,5.456,1066,3.918,1067,5.456,1068,3.918,1069,3.918,1070,5.355,1071,3.918,1072,3.918,1073,3.918,1074,3.868,1075,3.918,1076,3.428,1077,3.918,1078,3.428,1079,3.918,1080,3.918,1081,6.789,1082,3.918,1083,3.918,1084,5.456,1085,5.456,1086,5.456,1087,6.789,1088,6.789,1089,6.789,1090,5.456,1091,3.918,1092,2.671,1093,3.918,1094,3.918,1095,4.773,1096,5.456,1097,7.137,1098,5.456,1099,5.456,1100,5.456,1101,5.456,1102,5.456,1103,5.456,1104,5.456,1105,6.789,1106,5.492,1107,6.278,1108,3.918,1109,3.918,1110,3.918,1111,3.918,1112,3.918,1113,3.918,1114,3.918,1115,3.918,1116,6.278]],["title/interfaces/DataType.html",[579,0.229,1117,3.383]],["body/interfaces/DataType.html",[3,0.158,4,0.138,5,0.138,7,0.197,20,0.344,21,0.48,28,0.717,33,0.012,34,0.288,52,0.158,56,0.01,57,0.01,316,4.302,371,1.345,523,1.295,566,4.369,579,0.344,685,6.469,768,1.843,1050,4.684,1117,5.928,1118,5.606,1119,5.606,1120,6.408,1121,8.163,1122,8.163,1123,7.48]],["title/components/EditItemPopupComponent.html",[12,0.079,81,1.086]],["body/components/EditItemPopupComponent.html",[3,0.063,4,0.055,5,0.055,7,0.151,12,0.156,19,0.435,20,0.263,21,0.354,23,1.307,25,0.7,28,0.703,29,1.026,32,0.819,33,0.012,34,0.269,35,0.614,38,0.774,39,1.032,40,1.682,41,1.272,45,0.871,47,0.384,48,0.146,52,0.063,53,0.028,54,0.689,56,0.006,57,0.006,62,0.694,71,0.673,72,0.652,75,0.652,76,0.633,77,0.614,78,0.652,79,0.633,80,0.633,81,1.74,82,0.633,84,0.652,85,0.652,86,0.652,87,0.614,88,0.56,89,0.633,90,0.633,91,0.633,92,0.652,93,0.633,94,0.652,97,0.614,98,0.652,99,0.614,100,0.633,101,0.652,102,0.633,103,0.633,104,0.652,115,1.475,116,2.186,119,1.116,122,0.715,125,0.56,128,0.543,130,0.845,132,0.95,134,0.595,144,0.308,151,0.955,152,0.926,154,0.652,156,0.652,158,0.694,160,0.543,161,0.633,181,6.327,182,1.042,183,6.327,187,0.435,189,0.673,195,0.543,200,0.694,223,0.673,224,0.715,232,1.113,233,0.819,234,0.652,235,0.738,238,1.148,241,0.715,243,1.046,247,0.45,248,1.159,249,0.554,252,0.871,256,1.918,260,1.148,261,1.148,262,0.694,263,1.589,264,0.738,265,0.738,266,1.589,267,0.738,268,1.589,269,0.614,270,1.903,271,0.614,272,0.738,273,1.744,274,1.823,275,0.738,276,0.738,277,0.738,278,0.738,279,0.738,280,0.738,281,0.543,282,0.577,283,0.595,284,0.738,285,0.738,286,0.738,287,0.738,288,0.738,309,0.819,328,0.859,332,2.967,334,2.295,335,0.656,339,1.099,343,2.295,345,2.088,348,0.779,351,1.714,353,2.067,359,2.303,360,2.653,361,3.213,363,3.641,370,0.955,373,1.191,374,1.065,375,1.099,381,2.201,390,2.546,391,1.884,393,0.394,394,0.381,395,2.417,396,0.694,405,1.735,414,1.761,415,1.021,416,1.535,417,0.954,418,1.021,419,1.535,421,1.535,422,2.544,423,2.357,425,1.285,426,1.342,428,2.186,429,1.475,430,1.435,431,0.898,432,1.435,435,1.535,436,1.366,442,0.987,446,1.647,455,1.535,460,1.951,465,2.544,487,1.058,489,1.021,523,0.753,535,3.162,550,2,577,1.14,579,0.296,586,2.597,587,2.262,588,1.843,589,3.028,592,3.495,597,1.874,607,3.725,614,1.26,615,0.715,616,1.342,621,1.554,622,1.554,623,2.088,624,1.554,625,1.554,626,2.454,627,1.843,628,1.184,629,1.058,630,1.554,631,1.475,632,1.554,633,1.058,634,1.475,635,1.058,636,1.554,637,1.554,656,2.417,657,3.348,659,2.417,660,2.295,669,1.554,670,3.18,683,2.892,687,2.988,692,2.244,705,4.834,706,4.834,707,4.834,712,1.342,741,2.244,774,1.719,788,2.916,1054,2.186,1124,3.491,1125,3.068,1126,3.99,1127,3.99,1128,3.99,1129,5.237,1130,4.897,1131,4.897,1132,4.897,1133,4.897,1134,4.897,1135,4.897,1136,4.897,1137,4.897,1138,4.897,1139,5.526,1140,3.99,1141,5.526,1142,3.443,1143,6.842,1144,1.405,1145,1.845,1146,3.289,1147,3.581,1148,3.162,1149,6.339,1150,2.455,1151,2.564,1152,2.72,1153,3.99,1154,2.892,1155,3.162,1156,2.564,1157,2.564,1158,2.244,1159,2.564,1160,3.99,1161,3.99,1162,3.99,1163,4.834,1164,2.564,1165,3.99,1166,3.646,1167,3.162,1168,5.526,1169,2.564,1170,2.564,1171,3.99,1172,3.99,1173,2.557,1174,2.244,1175,2.244,1176,2.032,1177,2.244,1178,2.564,1179,2.564,1180,2.244,1181,2.564,1182,2.032,1183,2.032,1184,2.564,1185,3.99,1186,2.564,1187,3.646,1188,2.564,1189,4.897,1190,3.99,1191,2.564,1192,3.99,1193,2.564,1194,3.99,1195,2.564,1196,2.564,1197,2.564,1198,2.564,1199,2.564,1200,2.564,1201,3.99,1202,2.564,1203,3.99,1204,2.564,1205,2.564,1206,3.99,1207,2.564,1208,3.99,1209,2.564,1210,2.564,1211,2.564,1212,2.564,1213,2.564,1214,2.564,1215,2.564,1216,2.564,1217,2.564,1218,2.564,1219,2.564,1220,2.564,1221,3.99,1222,3.99,1223,3.99,1224,2.769,1225,3.99,1226,3.99,1227,1.644,1228,2.564,1229,2.032]],["title/components/EmployeeCreationsMenuComponent.html",[12,0.079,82,1.053]],["body/components/EmployeeCreationsMenuComponent.html",[3,0.081,4,0.071,5,0.071,7,0.148,12,0.106,19,0.423,20,0.177,21,0.309,23,0.719,25,0.845,28,0.693,29,0.863,32,0.99,33,0.012,34,0.263,35,0.742,38,0.623,39,0.693,40,1.154,41,0.873,45,1.053,47,0.345,48,0.188,52,0.081,53,0.023,54,0.601,56,0.007,57,0.007,62,0.891,71,0.864,72,0.838,75,0.838,76,0.813,77,0.789,78,0.838,79,0.813,80,0.813,81,0.838,82,1.823,84,0.838,85,0.838,86,0.838,87,0.789,88,0.719,89,0.813,90,0.813,91,0.813,92,0.838,93,0.813,94,0.838,97,0.789,98,0.838,99,0.789,100,0.813,101,0.838,102,0.813,103,0.813,104,0.838,119,1.142,122,1.345,125,0.719,128,0.698,130,1.021,132,1.068,134,1.324,151,1.669,152,1.715,154,1.451,156,1.451,158,0.891,160,1.662,161,2.068,162,5.099,182,1.014,187,0.559,189,0.864,195,0.698,200,0.891,223,0.864,224,0.919,232,1.345,233,0.676,234,0.838,235,0.948,239,1.573,241,0.919,243,1.265,247,0.578,248,1.183,249,0.669,252,0.719,260,1.387,261,1.387,262,0.891,263,1.805,264,0.948,265,0.948,266,1.805,267,0.948,268,1.805,269,0.789,270,2.073,271,0.789,272,0.948,273,0.676,274,2.007,275,0.948,276,0.948,277,0.948,278,0.948,279,0.948,280,0.948,281,0.698,282,0.742,283,1.324,284,0.948,285,0.948,286,0.948,287,0.948,288,0.948,298,1.36,309,0.99,328,1.412,335,0.792,339,1.249,344,1.793,348,0.998,354,1.154,357,3.222,370,1.502,371,0.559,373,1.329,374,0.93,375,0.959,379,1.734,398,1.734,405,1.83,409,2.524,410,2.642,414,1.734,415,1.921,416,2.684,417,2.12,418,2.5,419,2.9,420,2.612,421,1.855,422,2.483,423,2.333,427,2.986,430,2.657,431,1.697,432,2.932,433,2.686,434,1.697,435,2.414,436,1.75,437,1.984,438,2.064,439,1.075,440,1.896,441,3.202,442,2.843,443,2.789,444,2.789,446,1.36,450,3.802,452,3.624,453,2.227,455,2.772,456,1.997,457,2.921,458,2.524,459,2.921,460,2.779,461,2.524,462,2.858,465,2.594,487,1.36,489,1.921,490,1.522,491,1.855,523,0.507,532,2.789,534,3.652,567,1.896,579,0.336,591,1.009,596,0.789,627,2.227,628,1.522,629,1.36,633,1.36,635,1.36,639,2.524,641,2.524,642,1.725,643,1.806,644,1.806,764,1.652,772,0.765,773,2.051,774,1.669,775,1.075,776,0.919,777,1.009,778,0.919,779,1.734,780,1.36,880,1.997,887,1.584,922,2.318,926,3.823,973,1.806,983,1.896,1001,1.997,1006,1.896,1007,1.997,1019,2.921,1053,3.288,1054,4.049,1055,3.288,1144,1.806,1145,2.01,1150,2.143,1230,5.529,1231,1.584,1232,2.642,1233,2.858,1234,2.417,1235,2.741,1236,3.09,1237,4.219,1238,2.143,1239,3.296,1240,1.99,1241,2.883,1242,2.417,1243,3.296,1244,1.11,1245,2.247,1246,2.883,1247,2.409,1248,1.465,1249,2.883,1250,2.883,1251,2.318,1252,2.417,1253,2.774,1254,3.09,1255,2.112,1256,1.997,1257,3.802,1258,1.997,1259,2.112,1260,2.112,1261,2.112,1262,2.112,1263,2.112,1264,2.112,1265,2.112,1266,2.112,1267,1.997,1268,2.112,1269,2.112,1270,1.997,1271,2.921,1272,1.896,1273,1.806,1274,1.896,1275,2.112,1276,3.455,1277,1.584,1278,3.09,1279,2.112,1280,2.112,1281,2.112]],["title/classes/Employees.html",[53,0.03,1070,2.911]],["body/classes/Employees.html",[3,0.152,4,0.133,5,0.133,7,0.19,19,0.488,20,0.331,21,0.469,28,0.756,29,1.042,33,0.012,34,0.273,35,1.307,52,0.152,53,0.043,56,0.01,57,0.01,160,1.799,316,4.205,371,1.368,414,2.803,579,0.331,756,5.794,761,4.686,772,1.697,1022,3.378,1025,7.053,1026,7.053,1027,5.393,1070,5.315,1282,5.393,1283,4.884,1284,6.164,1285,6.164,1286,6.164,1287,6.164]],["title/injectables/EmployeesService.html",[0,1.307,1288,3.383]],["body/injectables/EmployeesService.html",[0,2.164,2,2.692,3,0.143,4,0.126,5,0.126,7,0.217,8,4.067,19,0.353,20,0.313,21,0.453,23,1.661,25,1.24,29,0.984,32,1.196,33,0.012,34,0.198,35,0.896,38,0.914,40,1.395,41,1.055,44,3.47,47,0.479,48,0.333,49,1.784,50,2.802,51,2.802,52,0.143,53,0.041,54,0.727,56,0.01,57,0.01,58,3.874,141,2.242,145,2.921,147,3.194,160,1.744,240,4.531,310,1.438,348,1.21,357,3.266,396,1.576,508,2.921,509,3.282,511,3.229,513,3.399,523,1.217,564,3.874,745,2.816,1036,4.992,1040,4.377,1043,4.067,1047,4.531,1048,3.353,1070,4.82,1167,5.603,1240,2.918,1288,6.53,1289,5.1,1290,7.913,1291,7.07,1292,5.829,1293,7.07]],["title/pipes/FormatCamelCasePipe.html",[83,2.587,289,2.052]],["body/pipes/FormatCamelCasePipe.html",[3,0.154,4,0.135,5,0.135,7,0.192,19,0.475,25,1.095,28,0.765,29,0.808,32,1.282,33,0.012,34,0.212,35,0.961,38,0.808,47,0.378,48,0.357,52,0.154,53,0.044,56,0.01,57,0.01,83,4.905,198,5.52,247,1.095,289,3.543,290,4.004,293,5.025,298,3.042,299,3.543,305,3.423,308,5.025,309,1.282,310,1.818,437,2.564,1294,6.448,1295,5.466,1296,4.465,1297,4.239,1298,7.37,1299,5.841,1300,6.448,1301,7.37,1302,6.248,1303,6.248,1304,6.248,1305,3.785,1306,3.785,1307,3.785,1308,3.785]],["title/components/GetRoleComponent.html",[12,0.079,84,1.086]],["body/components/GetRoleComponent.html",[3,0.114,4,0.1,5,0.1,7,0.188,8,3.51,12,0.149,13,3.51,19,0.414,20,0.248,25,1.07,29,0.789,32,0.948,33,0.012,34,0.157,35,0.711,38,0.597,39,0.877,44,2.612,47,0.414,48,0.264,52,0.114,53,0.043,54,0.576,56,0.008,57,0.008,62,1.25,71,1.212,72,1.175,75,1.175,76,1.14,77,1.106,78,1.175,79,1.14,80,1.14,81,1.175,82,1.14,84,2.044,85,1.175,86,1.175,87,1.106,88,1.009,89,1.14,90,1.14,91,1.14,92,1.175,93,1.14,94,1.175,97,1.106,98,1.175,99,1.106,100,1.14,101,1.175,102,1.14,103,1.14,104,1.175,119,1.169,122,1.289,125,1.009,128,1.446,130,1.538,132,0.761,134,1.073,143,2.221,144,0.733,151,1.46,152,1.416,154,1.175,156,1.175,158,1.25,160,0.978,161,1.14,179,4.659,182,0.733,187,0.784,189,1.212,195,0.978,200,1.25,223,1.212,224,1.289,232,1.702,233,0.948,234,1.175,235,1.329,239,2.531,241,1.289,243,1.212,246,3.424,247,1.07,248,1.211,249,0.847,251,2.532,252,1.009,256,3.494,260,1.755,261,1.755,262,1.25,263,2.09,264,1.329,265,1.329,266,2.09,267,1.329,268,2.09,269,1.106,270,2.277,271,1.106,272,1.329,273,0.948,274,2.233,275,1.329,276,1.329,277,1.329,278,1.329,279,1.329,280,1.329,281,0.978,282,1.04,283,1.073,284,1.329,285,1.329,286,1.329,287,1.329,288,1.329,309,1.252,335,1.003,339,1.446,348,1.086,351,1.65,358,4.955,373,1.503,374,1.177,375,1.214,393,0.711,394,0.687,396,1.25,500,3.058,523,0.711,595,2.819,598,1.556,672,4.161,675,3.662,687,2.348,824,4.043,828,5.339,834,4.043,853,2.8,1038,3.697,1049,5.71,1050,4.995,1052,3.058,1062,5.978,1074,3.194,1309,4.043,1310,6,1311,4.836,1312,7.268,1313,4.461,1314,6.103,1315,6.103,1316,6.103,1317,6.103,1318,6.103,1319,6.833,1320,6.103,1321,4.621,1322,4.621,1323,6.103,1324,6.359,1325,6.103,1326,6.103,1327,4.621,1328,2.712,1329,6.103,1330,4.043,1331,4.621,1332,4.621,1333,4.621,1334,4.621,1335,3.662]],["title/classes/Ingredients.html",[53,0.03,774,1.022]],["body/classes/Ingredients.html",[3,0.156,4,0.137,5,0.137,7,0.195,19,0.45,20,0.34,21,0.476,28,0.672,29,1.019,33,0.012,34,0.267,35,1.291,52,0.156,53,0.044,56,0.01,57,0.01,371,1.381,609,1.822,610,1.879,772,1.724,774,1.778,1022,3.47,1150,3.767,1224,3.723,1336,5.541,1337,6.334,1338,4.776,1339,4.535,1340,4.535,1341,6.334,1342,6.334,1343,6.334]],["title/injectables/IngredientsService.html",[0,1.307,1146,2.052]],["body/injectables/IngredientsService.html",[0,1.947,2,2.275,3,0.121,4,0.106,5,0.106,7,0.196,19,0.467,20,0.264,21,0.408,23,1.538,25,1.236,29,1.053,32,1.583,33,0.012,34,0.29,35,1.186,38,1.087,40,1.178,41,0.891,44,3.722,47,0.451,48,0.281,49,1.508,50,2.367,51,2.367,52,0.121,53,0.034,54,0.984,56,0.009,57,0.009,141,1.895,145,2.468,147,2.698,187,1.08,243,1.668,244,3.659,273,1.306,310,1.949,348,1.12,371,1.397,396,1.332,497,4.041,508,2.468,509,3.146,511,3.201,512,4.337,513,3.581,523,0.978,655,2.723,772,1.89,774,1.522,1040,4.053,1048,2.832,1146,3.797,1150,3.834,1242,3.188,1344,4.308,1345,2.213,1346,4.65,1347,7.047,1348,7.047,1349,7.047,1350,7.047,1351,7.712,1352,6.747,1353,6.362,1354,6.362,1355,4.925,1356,6.362,1357,4.925,1358,6.362,1359,4.925,1360,6.362,1361,4.925,1362,4.925,1363,4.925,1364,6.362,1365,3.903,1366,3.903,1367,3.903,1368,4.925,1369,4.308]],["title/classes/Inventory.html",[53,0.03,1125,1.762]],["body/classes/Inventory.html",[3,0.155,4,0.136,5,0.136,7,0.194,19,0.477,20,0.339,21,0.475,28,0.671,29,1.018,33,0.012,34,0.267,35,1.29,52,0.155,53,0.044,56,0.01,57,0.01,182,1.018,371,1.379,599,2.27,609,1.816,772,1.827,1022,3.459,1125,3.25,1224,3.946,1370,5.524,1371,4.77,1372,4.314,1373,4.314,1374,6.314,1375,6.314,1376,6.314]],["title/interfaces/InventoryItem.html",[579,0.229,1377,2.339]],["body/interfaces/InventoryItem.html",[3,0.046,4,0.04,5,0.04,7,0.057,12,0.108,16,3.404,19,0.368,20,0.1,21,0.254,23,1.004,28,0.741,31,1.022,33,0.012,34,0.226,38,0.511,39,1.075,41,1.053,45,1.377,47,0.352,48,0.106,49,0.571,52,0.046,53,0.022,54,0.96,56,0.004,57,0.004,88,0.863,115,1.073,116,1.022,119,0.25,128,1.335,130,0.973,131,0.935,132,0.96,144,0.224,182,0.945,187,1.382,195,0.837,227,2.416,230,0.977,238,0.537,239,2.649,242,3.766,243,0.489,246,2.304,247,0.327,248,0.259,249,0.259,271,0.446,273,1.658,281,0.973,282,0.695,283,0.918,299,1.485,309,0.383,310,1.682,328,1.019,335,0.307,339,0.371,348,0.491,351,1.243,353,0.608,364,4.746,370,0.739,371,1.132,373,0.787,374,0.36,375,0.371,383,1.323,393,0.287,394,0.277,405,1.525,407,2.042,408,0.977,434,0.505,437,0.649,439,1.008,490,1.427,491,0.718,493,3.302,496,1.073,499,0.608,500,0.935,523,0.935,532,1.373,539,3.926,550,0.935,572,2.267,573,1.373,579,0.326,581,1.022,586,1.61,590,1.815,591,0.571,596,1.556,598,0.628,600,2.091,611,0.889,612,2.663,613,2.645,655,2.181,670,0.743,681,1.13,683,2.874,687,2.566,688,0.862,712,0.977,721,1.022,745,0.743,768,0.537,771,3.344,772,1.412,774,1.883,775,0.608,776,0.862,777,0.571,778,0.52,782,0.897,791,1.231,792,0.935,793,0.935,818,1.872,850,2.952,873,2.889,955,3.26,987,2.645,1052,2.304,1064,0.897,1074,0.977,1125,3.199,1142,1.073,1145,1.421,1146,2.45,1147,2.667,1150,1.373,1154,0.977,1187,4.119,1224,3.048,1242,0.935,1244,0.628,1277,2.795,1296,3.327,1297,1.073,1305,1.872,1306,1.872,1307,1.872,1308,1.872,1328,0.829,1338,1.13,1339,1.777,1340,1.777,1345,1.6,1371,3.327,1372,3.186,1373,3.009,1377,2.519,1378,4.368,1379,1.196,1380,1.196,1381,2.792,1382,1.196,1383,1.196,1384,1.196,1385,1.196,1386,2.947,1387,1.777,1388,2.947,1389,3.519,1390,1.073,1391,1.022,1392,0.935,1393,1.777,1394,1.196,1395,1.022,1396,1.872,1397,1.022,1398,1.196,1399,1.757,1400,1.073,1401,2.947,1402,1.13,1403,0.935,1404,1.196,1405,0.935,1406,3.995,1407,0.935,1408,1.022,1409,1.073,1410,1.073,1411,1.769,1412,1.073,1413,2.947,1414,2.947,1415,1.196,1416,1.196,1417,1.196,1418,1.98,1419,1.196,1420,1.98,1421,1.196,1422,1.98,1423,1.98,1424,1.98,1425,1.693,1426,1.196,1427,1.196,1428,1.196,1429,1.196,1430,1.98,1431,1.196,1432,2.947,1433,1.98,1434,1.98,1435,1.196,1436,1.98,1437,1.196,1438,2.947,1439,1.98,1440,1.073,1441,1.98,1442,1.196,1443,1.196,1444,1.548,1445,1.98,1446,1.98,1447,1.196,1448,1.98,1449,1.98,1450,1.98,1451,2.947,1452,1.98,1453,1.98,1454,1.98,1455,1.98,1456,1.98,1457,2.947,1458,1.98,1459,1.196,1460,1.196,1461,1.196,1462,2.534,1463,1.98,1464,3.519,1465,1.98,1466,1.196,1467,1.196,1468,1.196,1469,1.196,1470,1.196,1471,1.196,1472,1.196,1473,1.196,1474,1.196,1475,1.196,1476,1.196,1477,1.98,1478,2.534,1479,1.196,1480,1.13,1481,1.196,1482,2.534,1483,1.196,1484,1.196,1485,1.196,1486,1.196,1487,1.98,1488,1.98,1489,1.693,1490,1.196,1491,1.196,1492,1.196,1493,1.196,1494,1.98,1495,1.196,1496,1.196,1497,1.196,1498,1.196,1499,1.196,1500,1.196,1501,1.196,1502,1.693,1503,1.693,1504,1.196,1505,1.196,1506,1.98,1507,1.196,1508,1.196,1509,1.196,1510,1.196,1511,1.196,1512,1.196,1513,1.196,1514,2.534,1515,1.196,1516,1.196,1517,3.159,1518,1.196,1519,1.777,1520,1.777,1521,1.777,1522,1.196,1523,2.534,1524,3.327,1525,1.196,1526,2.947,1527,1.073,1528,1.98,1529,1.98,1530,1.073,1531,1.073,1532,2.275,1533,1.073,1534,1.196,1535,1.98,1536,1.196,1537,1.196,1538,1.196,1539,4.506,1540,3.726,1541,3.726,1542,1.196,1543,1.196,1544,1.196,1545,1.196,1546,1.196,1547,1.073,1548,1.196,1549,0.935,1550,0.935,1551,0.897,1552,0.897,1553,1.196,1554,1.196,1555,2.534,1556,1.196,1557,3.343,1558,1.98,1559,4.071,1560,3.519,1561,1.196,1562,3.726,1563,3.327,1564,1.196,1565,3.519,1566,1.196,1567,3.519,1568,1.196,1569,1.196,1570,1.196,1571,1.022,1572,1.196,1573,4.167,1574,3.726,1575,2.534,1576,1.196,1577,1.693,1578,3.519,1579,1.196,1580,1.196,1581,1.196,1582,0.897,1583,1.98,1584,1.196,1585,1.196,1586,1.196,1587,1.196,1588,2.534,1589,1.196,1590,1.196,1591,1.196,1592,1.196,1593,1.196,1594,1.98,1595,1.196,1596,1.196,1597,1.196,1598,1.196,1599,2.947,1600,2.947,1601,1.196,1602,1.196,1603,1.196,1604,1.196,1605,2.645,1606,1.196,1607,1.196,1608,1.196,1609,1.196,1610,1.196,1611,1.196,1612,1.196,1613,1.196,1614,1.196,1615,1.196,1616,1.196,1617,2.947,1618,3.519,1619,1.98,1620,1.196,1621,1.196,1622,1.196,1623,1.196,1624,1.196,1625,3.266,1626,3.266,1627,1.196,1628,1.196,1629,1.196,1630,1.196,1631,1.196,1632,1.196,1633,1.196,1634,1.196,1635,1.196]],["title/interfaces/InventoryMap.html",[579,0.229,1387,2.456]],["body/interfaces/InventoryMap.html",[3,0.046,4,0.04,5,0.04,7,0.058,12,0.108,16,3.411,19,0.353,21,0.12,23,1.008,28,0.739,29,0.243,31,1.029,33,0.012,34,0.207,38,0.513,39,1.076,41,1.055,45,1.38,47,0.353,48,0.107,49,0.575,52,0.046,53,0.022,54,0.961,56,0.004,57,0.004,88,0.867,115,1.08,116,1.029,119,0.252,128,1.339,130,0.977,131,1.556,132,0.961,144,0.225,182,0.942,187,1.383,195,0.841,227,2.421,230,0.983,238,0.54,239,2.651,242,3.77,243,0.492,246,2.313,247,0.329,248,0.261,249,0.261,271,0.449,273,1.659,281,0.977,282,0.699,283,0.922,299,1.493,309,0.385,310,1.685,328,1.022,335,0.308,339,0.374,348,0.494,351,1.248,353,0.612,364,4.751,370,0.743,371,1.035,373,0.79,374,0.362,375,0.374,383,1.329,393,0.289,394,0.279,405,1.529,407,2.048,408,0.983,434,0.508,437,0.653,439,1.013,490,1.434,491,1.195,493,3.31,496,1.08,499,0.612,500,0.941,523,0.938,532,1.38,539,3.93,550,0.941,572,2.273,573,1.38,579,0.327,581,1.029,586,1.615,590,1.819,591,0.575,596,1.599,598,0.632,600,2.097,611,0.893,612,2.686,613,2.648,655,2.189,670,1.237,681,1.137,683,2.883,687,2.571,688,0.867,712,0.983,721,1.029,745,0.748,768,0.54,771,3.354,772,1.353,774,1.885,775,0.612,776,0.866,777,0.575,778,0.524,782,0.903,791,1.237,792,0.941,793,0.941,818,1.882,850,2.957,873,2.894,955,3.265,987,2.655,1052,2.313,1064,0.903,1074,0.983,1125,3.184,1142,1.08,1145,1.426,1146,2.458,1147,2.676,1150,1.38,1154,0.983,1187,4.126,1224,2.922,1242,0.941,1244,0.632,1277,2.803,1296,3.337,1297,1.08,1305,1.882,1306,1.882,1307,1.882,1308,1.882,1328,0.834,1338,1.137,1339,1.786,1340,1.786,1345,1.606,1371,2.406,1372,2.529,1373,2.176,1377,2.176,1378,4.053,1379,1.203,1380,1.203,1381,2.802,1382,1.203,1383,1.203,1384,1.203,1385,1.203,1386,2.958,1387,2.285,1388,3.277,1389,3.53,1390,1.08,1391,1.029,1392,0.941,1393,1.786,1394,1.203,1395,1.029,1396,1.882,1397,1.029,1398,1.203,1399,1.765,1400,1.08,1401,2.958,1402,1.137,1403,0.941,1404,1.203,1405,0.941,1406,4.002,1407,0.941,1408,1.029,1409,1.08,1410,1.08,1411,1.776,1412,1.08,1413,2.958,1414,2.958,1415,1.203,1416,1.203,1417,1.203,1418,1.99,1419,1.203,1420,1.99,1421,1.203,1422,1.99,1423,1.99,1424,1.99,1425,1.702,1426,1.203,1427,1.203,1428,1.203,1429,1.203,1430,1.99,1431,1.203,1432,2.958,1433,1.99,1434,1.99,1435,1.203,1436,1.99,1437,1.203,1438,2.958,1439,1.99,1440,1.08,1441,1.99,1442,1.203,1443,1.203,1444,1.556,1445,1.99,1446,1.99,1447,1.203,1448,1.99,1449,1.99,1450,1.99,1451,2.958,1452,1.99,1453,1.99,1454,1.99,1455,1.99,1456,1.99,1457,2.958,1458,1.99,1459,1.203,1460,1.203,1461,1.203,1462,2.546,1463,1.99,1464,3.53,1465,1.99,1466,1.203,1467,1.203,1468,1.203,1469,1.203,1470,1.203,1471,1.203,1472,1.203,1473,1.203,1474,1.203,1475,1.203,1476,1.203,1477,1.99,1478,2.546,1479,1.203,1480,1.137,1481,1.203,1482,2.546,1483,1.203,1484,1.203,1485,1.203,1486,1.203,1487,1.99,1488,1.99,1489,1.702,1490,1.203,1491,1.203,1492,1.203,1493,1.203,1494,1.99,1495,1.203,1496,1.203,1497,1.203,1498,1.203,1499,1.203,1500,1.203,1501,1.203,1502,1.702,1503,1.702,1504,1.203,1505,1.203,1506,1.99,1507,1.203,1508,1.203,1509,1.203,1510,1.203,1511,1.203,1512,1.203,1513,1.203,1514,2.546,1515,1.203,1516,1.203,1517,3.168,1518,1.203,1519,1.786,1520,1.786,1521,1.786,1522,1.203,1523,2.546,1524,3.337,1525,1.203,1526,2.958,1527,1.08,1528,1.99,1529,1.99,1530,1.08,1531,1.08,1532,2.285,1533,1.08,1534,1.203,1535,1.99,1536,1.203,1537,1.203,1538,1.203,1539,4.51,1540,3.737,1541,3.737,1542,1.203,1543,1.203,1544,1.203,1545,1.203,1546,1.203,1547,1.08,1548,1.203,1549,0.941,1550,0.941,1551,0.903,1552,0.903,1553,1.203,1554,1.203,1555,2.546,1556,1.203,1557,3.349,1558,1.99,1559,4.074,1560,3.53,1561,1.203,1562,3.737,1563,3.337,1564,1.203,1565,3.53,1566,1.203,1567,3.53,1568,1.203,1569,1.203,1570,1.203,1571,1.029,1572,1.203,1573,4.176,1574,3.737,1575,2.546,1576,1.203,1577,1.702,1578,3.53,1579,1.203,1580,1.203,1581,1.203,1582,0.903,1583,1.99,1584,1.203,1585,1.203,1586,1.203,1587,1.203,1588,2.546,1589,1.203,1590,1.203,1591,1.203,1592,1.203,1593,1.203,1594,1.99,1595,1.203,1596,1.203,1597,1.203,1598,1.203,1599,2.958,1600,2.958,1601,1.203,1602,1.203,1603,1.203,1604,1.203,1605,2.655,1606,1.203,1607,1.203,1608,1.203,1609,1.203,1610,1.203,1611,1.203,1612,1.203,1613,1.203,1614,1.203,1615,1.203,1616,1.203,1617,2.958,1618,3.53,1619,1.99,1620,1.203,1621,1.203,1622,1.203,1623,1.203,1624,1.203,1625,3.277,1626,3.277,1627,1.203,1628,1.203,1629,1.203,1630,1.203,1631,1.203,1632,1.203,1633,1.203,1634,1.203,1635,1.203,1636,1.643,1637,1.877]],["title/injectables/InventoryService.html",[0,1.307,1147,2.235]],["body/injectables/InventoryService.html",[0,1.951,2,2.28,3,0.121,4,0.106,5,0.106,7,0.196,19,0.467,20,0.265,21,0.409,23,1.54,25,1.237,29,1.039,32,1.584,33,0.012,34,0.289,35,1.187,38,1.073,40,1.181,41,0.894,44,3.701,47,0.452,48,0.282,49,1.511,50,2.373,51,2.373,52,0.121,53,0.034,54,0.985,56,0.009,57,0.009,58,3.491,141,1.899,145,2.474,147,2.705,182,0.979,187,1.082,238,1.833,273,1.308,310,1.904,328,1.117,348,1.122,353,2.078,371,1.398,396,1.335,497,3.991,508,2.474,509,3.148,511,3.074,513,3.063,564,3.491,599,2.291,655,2.727,721,3.491,745,2.538,772,1.891,1036,3.86,1040,4.058,1043,3.665,1047,4.084,1048,2.839,1052,3.193,1124,5.575,1125,3.503,1147,4.137,1232,3.491,1365,3.912,1366,3.912,1367,3.912,1377,4.465,1638,4.319,1639,6.372,1640,7.055,1641,7.055,1642,7.055,1643,7.718,1644,7.055,1645,6.372,1646,6.372,1647,4.937,1648,6.372,1649,4.937,1650,6.372,1651,4.937,1652,4.937,1653,6.372,1654,4.937,1655,6.372,1656,4.937]],["title/components/LearnMoreComponent.html",[12,0.079,223,1.12]],["body/components/LearnMoreComponent.html",[3,0.117,4,0.103,5,0.103,7,0.147,12,0.15,13,3.587,19,0.378,21,0.306,25,0.837,33,0.012,47,0.289,48,0.273,52,0.117,53,0.044,56,0.009,57,0.009,62,1.291,71,1.252,72,1.215,75,1.215,76,1.178,77,1.143,78,1.215,79,1.178,80,1.178,81,1.215,82,1.178,84,1.215,85,1.215,86,1.215,87,1.143,88,1.042,89,1.178,90,1.178,91,1.178,92,1.215,93,1.178,94,1.215,97,1.143,98,1.215,99,1.143,100,1.178,101,1.215,102,1.178,103,1.178,104,1.215,119,1.171,122,1.332,125,1.042,128,1.011,130,1.32,132,0.777,134,1.108,144,0.574,151,1.492,152,1.709,154,1.215,156,1.215,158,1.291,160,1.011,161,1.178,182,0.749,187,0.811,189,1.252,195,1.011,200,1.291,223,2.054,224,2.257,225,3.785,230,3.853,232,1.739,233,1.28,234,1.215,235,1.374,241,1.332,243,1.636,245,4.234,247,1.093,248,1.214,249,0.865,252,1.361,260,1.794,261,1.794,262,1.291,263,2.117,264,1.374,265,1.374,266,2.117,267,1.374,268,2.117,269,1.143,270,2.295,271,1.143,272,1.374,273,0.98,274,2.253,275,1.374,276,1.374,277,1.374,278,1.374,279,1.374,280,1.374,281,1.011,282,1.075,283,1.108,284,1.374,285,1.374,286,1.374,287,1.374,288,1.374,335,1.025,351,1.686,374,0.921,393,0.734,394,0.71,416,1.837,417,1.776,430,2.242,431,1.075,432,2.242,433,2.044,436,1.739,452,2.296,487,1.971,491,1.837,499,2.034,563,5.456,602,2.771,615,1.332,764,3.125,765,4.178,766,4.178,783,4.252,787,4.558,791,2.484,891,5.456,900,5.456,991,4.178,1015,3.785,1276,3.778,1311,4.942,1313,4.558,1582,2.296,1657,4.178,1658,4.178,1659,4.942,1660,6.236,1661,6.236,1662,6.236,1663,5.456,1664,6.236,1665,6.236,1666,6.944,1667,6.236,1668,3.785,1669,2.206,1670,4.776,1671,6.236,1672,6.236,1673,6.236,1674,6.236,1675,4.776,1676,6.236,1677,6.236,1678,6.236,1679,6.236,1680,6.236,1681,6.236,1682,6.236,1683,6.236,1684,6.236,1685,6.236,1686,6.236,1687,6.236,1688,6.236,1689,6.236,1690,6.236,1691,6.236,1692,6.236,1693,4.252,1694,6.236,1695,4.776,1696,4.776,1697,4.776]],["title/components/LoginButtonComponent.html",[12,0.079,85,1.086]],["body/components/LoginButtonComponent.html",[3,0.112,4,0.098,5,0.098,7,0.185,12,0.149,14,4.111,19,0.41,20,0.243,21,0.463,25,1.057,29,0.933,32,0.931,33,0.012,34,0.204,35,0.698,38,0.779,39,1.037,47,0.365,48,0.259,52,0.112,53,0.042,54,0.566,56,0.008,57,0.008,62,1.227,71,1.19,72,1.154,75,1.154,76,1.119,77,1.086,78,1.154,79,1.119,80,1.119,81,1.154,82,1.119,84,1.154,85,2.036,86,1.154,87,1.086,88,0.99,89,1.119,90,1.119,91,1.119,92,1.154,93,1.119,94,1.154,97,1.086,98,1.154,99,1.086,100,1.119,101,1.154,102,1.119,103,1.119,104,1.154,119,1.168,122,1.265,125,0.99,128,0.96,130,1.276,132,0.752,134,1.053,143,2.181,144,0.867,149,5.952,151,1.443,152,1.399,154,1.154,156,1.154,158,1.227,160,0.96,161,1.119,182,0.724,187,0.77,189,1.19,195,0.96,200,1.227,223,1.19,224,1.265,232,1.681,233,1.237,234,1.154,235,1.305,237,3.093,239,2.518,241,2.154,242,2.898,243,1.776,244,3.895,246,3.021,247,1.057,248,1.211,249,0.837,250,4.407,251,4.551,252,1.316,259,4.116,260,1.734,261,1.734,262,1.831,263,2.075,264,1.305,265,1.305,266,2.075,267,1.305,268,2.075,269,1.086,270,2.267,271,1.086,272,1.305,273,0.931,274,2.221,275,1.305,276,1.305,277,2.403,278,1.305,279,1.305,280,1.305,281,0.96,282,1.021,283,1.053,284,1.305,285,1.305,286,1.305,287,1.305,288,1.305,309,1.237,339,1.435,348,1.077,373,1.494,374,1.306,375,1.347,383,3.089,393,0.698,394,0.675,395,2.749,493,3.156,497,3.469,523,0.927,536,4.617,539,3.021,540,4.407,541,4.111,579,0.323,599,1.631,715,4.919,725,3.304,730,2.908,1328,2.016,1395,3.304,1698,6.571,1699,4.111,1700,5.523,1701,4.778,1702,5.275,1703,7.215,1704,6.029,1705,6.756,1706,3.97,1707,4.537,1708,4.407,1709,4.778,1710,5.275,1711,4.537,1712,3.97,1713,3.596,1714,3.97,1715,3.97,1716,3.97]],["title/components/LogoutButtonComponent.html",[12,0.079,86,1.086]],["body/components/LogoutButtonComponent.html",[3,0.108,4,0.095,5,0.095,7,0.181,12,0.145,13,4.094,19,0.403,20,0.235,21,0.456,23,0.957,25,1.033,29,0.92,32,0.9,33,0.012,34,0.2,35,0.674,38,0.762,39,1.023,47,0.403,48,0.25,52,0.108,53,0.041,54,0.735,56,0.008,57,0.008,62,1.186,71,1.15,72,1.115,75,1.115,76,1.082,77,1.049,78,1.115,79,1.082,80,1.082,81,1.115,82,1.082,84,1.115,85,1.115,86,2.02,87,1.049,88,0.957,89,1.082,90,1.082,91,1.082,92,1.115,93,1.082,94,1.115,97,1.049,98,1.115,99,1.049,100,1.082,101,1.115,102,1.082,103,1.082,104,1.115,108,5.415,119,1.165,122,1.223,125,0.957,128,0.928,130,1.247,132,0.735,134,1.018,143,2.108,144,0.855,151,1.41,152,1.368,154,1.115,156,1.115,158,1.186,160,0.928,161,1.082,166,5.885,182,0.708,187,0.744,189,1.15,195,0.928,200,1.186,208,2.989,223,1.15,224,1.223,232,1.643,233,1.209,234,1.115,235,1.261,237,2.989,238,1.915,239,2.494,241,1.985,242,2.833,245,3.389,246,2.953,247,0.769,248,1.208,249,0.818,250,4.307,251,4.527,252,1.286,259,4.069,260,1.695,261,1.695,262,1.8,263,2.047,264,1.261,265,1.261,266,2.047,267,1.261,268,2.047,269,1.049,270,2.247,271,1.049,272,1.261,273,0.9,274,2.199,275,1.261,276,1.261,277,1.261,278,2.415,279,1.261,280,1.261,281,0.928,282,0.987,283,1.018,284,1.261,285,1.261,286,1.261,287,1.261,288,1.261,309,1.209,329,3.389,333,3.777,339,1.416,348,0.937,353,2.171,373,1.477,374,1.283,375,1.324,383,2.522,393,0.674,394,0.652,523,0.906,536,5.063,539,2.953,540,4.307,541,4.018,579,0.316,614,1.862,615,1.223,725,3.647,730,2.81,1035,4.67,1038,3.57,1106,6.227,1328,1.948,1700,5.063,1709,4.67,1714,3.836,1715,3.836,1717,6.496,1718,5.156,1719,4.018,1720,5.156,1721,4.67,1722,3.777,1723,7.117,1724,6.294,1725,4.385,1726,5.156,1727,5.156,1728,6.227,1729,5.893,1730,5.893,1731,5.893,1732,4.307,1733,4.385,1734,5.893,1735,5.893,1736,5.893,1737,5.893,1738,5.156,1739,5.893,1740,4.385,1741,4.385,1742,4.385,1743,4.385,1744,4.385,1745,4.385,1746,4.385]],["title/injectables/MagnifierService.html",[0,1.307,805,2.911]],["body/injectables/MagnifierService.html",[0,2.19,2,2.746,3,0.146,4,0.128,5,0.128,7,0.183,8,4.115,9,4.683,13,4.115,15,4.711,20,0.319,21,0.459,23,1.675,25,1.254,29,0.992,33,0.012,38,1.03,39,1.028,40,1.422,41,1.076,44,3.062,45,1.562,47,0.433,48,0.339,49,1.82,50,2.858,51,2.858,52,0.146,53,0.041,56,0.01,57,0.01,243,1.876,310,1.467,329,4.115,438,3.062,687,3.185,784,6.691,785,5.67,805,5.431,1311,5.67,1747,5.201,1748,7.154,1749,7.675,1750,7.965,1751,6.969,1752,5.944,1753,5.944,1754,6.259,1755,7.154,1756,7.154,1757,5.944,1758,5.944,1759,5.944]],["title/components/ManagerPopupComponent.html",[12,0.079,87,1.022]],["body/components/ManagerPopupComponent.html",[3,0.08,4,0.07,5,0.07,7,0.174,12,0.142,19,0.377,20,0.334,25,0.836,28,0.564,29,1,32,0.979,33,0.012,34,0.254,35,0.733,38,0.805,39,1.057,40,1.141,41,0.863,45,1.36,47,0.197,48,0.185,52,0.08,53,0.033,54,0.594,56,0.007,57,0.007,62,0.878,71,0.851,72,0.826,75,0.826,76,0.801,77,0.777,78,0.826,79,0.801,80,0.801,81,0.826,82,0.801,84,0.826,85,0.826,86,0.826,87,1.66,88,0.709,89,0.801,90,0.801,91,0.801,92,0.826,93,0.801,94,0.826,97,0.777,98,0.826,99,0.777,100,0.801,101,0.826,102,0.801,103,0.801,104,0.826,119,1.141,122,0.905,125,0.709,128,0.687,130,1.589,131,3.924,132,0.594,134,0.753,144,0.39,151,1.141,152,1.107,154,0.826,156,0.826,158,0.878,160,0.687,161,0.801,171,5.338,182,0.573,187,1.217,189,0.851,195,0.687,200,0.878,223,0.851,224,0.905,232,1.33,233,0.666,234,0.826,235,0.934,238,1.792,241,0.905,243,1.483,247,0.836,248,1.181,249,0.662,252,0.709,260,1.372,261,1.372,262,0.878,263,1.792,264,0.934,265,0.934,266,1.792,267,0.934,268,1.792,269,0.777,270,2.063,271,0.777,272,0.934,273,1.588,274,1.996,275,0.934,276,0.934,277,0.934,278,0.934,279,0.934,280,0.934,281,1.616,282,0.731,283,0.753,284,0.934,285,0.934,286,0.934,287,0.934,288,0.934,298,1.968,327,1.968,328,0.836,334,2.743,335,0.784,343,2.743,345,2.496,352,2.743,353,1.555,359,2.889,360,2.399,361,1.899,363,2.119,381,2.482,390,2.397,391,2.553,393,0.499,394,0.483,405,1.881,414,2.24,415,1.899,416,2.175,417,1.773,418,1.899,419,2.553,421,1.835,422,3.026,423,2.911,425,1.627,426,1.699,427,2.041,428,2.613,429,1.867,430,2.24,431,1.656,432,2.386,433,1.389,434,1.685,435,2.397,436,2.184,437,1.129,438,1.389,441,1.442,442,2.175,443,2.512,444,2.119,446,1.968,453,1.499,455,2.397,460,2.857,461,1.699,462,1.627,465,3.041,468,2.213,487,1.968,489,1.293,491,3.175,523,1.131,577,1.442,578,2.496,579,0.256,584,2.613,586,2.474,587,2.611,588,2.203,589,3.414,590,1.996,591,2.196,592,3.149,593,2.372,594,1.33,595,2.203,596,1.957,597,2.372,598,1.904,599,1.715,600,2.386,601,2.572,602,2.119,603,2.292,605,2.572,606,2.572,607,2.203,609,1.372,610,0.963,611,1.372,612,1.606,613,1.659,614,1.025,616,1.699,617,2.572,618,4.48,621,1.966,622,1.966,623,2.959,624,1.966,625,1.966,626,3.477,627,2.611,628,1.499,629,1.968,630,1.966,631,1.867,632,1.966,633,1.34,634,1.867,635,1.34,636,1.966,637,1.966,639,1.699,640,2.572,641,2.496,642,1.699,643,1.779,644,1.779,645,2.372,646,2.213,647,2.372,648,2.372,649,2.572,650,2.572,651,2.572,652,2.572,653,2.572,654,2.572,655,3.268,656,3.774,657,4.457,658,2.572,659,3.774,660,3.583,661,2.572,662,2.572,665,4.525,666,2.572,667,2.572,668,2.572,669,1.966,670,3.119,671,3.486,672,3.251,677,4.248,688,3.398,1064,2.292,1154,2.496,1227,2.08,1397,1.779,1571,1.779,1577,1.779,1760,4.769,1761,4.769,1762,3.246,1763,3.779,1764,3.246,1765,2.84,1766,3.779,1767,3.246,1768,3.779,1769,3.779,1770,3.246,1771,3.246,1772,2.572,1773,2.572,1774,2.572,1775,4.172,1776,4.172]],["title/classes/Menu.html",[53,0.03,132,0.532]],["body/classes/Menu.html",[3,0.142,4,0.124,5,0.124,7,0.248,19,0.459,20,0.309,21,0.485,28,0.77,29,1.075,33,0.012,34,0.288,35,1.328,52,0.142,53,0.04,56,0.01,57,0.01,132,1.084,182,1.04,370,1.812,371,1.338,772,1.757,773,2.955,774,1.966,775,2.469,776,2.112,777,2.318,778,2.112,779,2.524,1022,3.157,1777,5.041,1778,5.762,1779,3.491,1780,5.762,1781,5.762,1782,5.762,1783,5.762,1784,5.762,1785,5.762,1786,5.762]],["title/interfaces/MenuItem.html",[354,1.022,579,0.229]],["body/interfaces/MenuItem.html",[3,0.124,4,0.109,5,0.109,7,0.239,12,0.12,19,0.392,20,0.271,21,0.415,23,1.105,28,0.785,33,0.012,34,0.286,45,1.105,47,0.432,48,0.289,52,0.124,53,0.035,54,0.807,56,0.009,57,0.009,82,1.761,119,0.678,132,1.086,160,1.511,161,1.919,162,3.7,182,1.042,239,1.651,243,1.328,248,0.702,249,0.702,283,1.175,309,1.039,328,1.319,335,0.832,339,1.007,348,1.029,354,1.549,370,1.549,371,1.212,373,1.42,374,0.976,375,1.007,379,1.82,398,2.328,523,0.778,532,2.877,534,3.737,567,2.911,579,0.404,768,1.456,772,1.503,773,2.861,774,1.935,775,2.454,776,2.099,777,2.304,778,2.099,779,2.706,780,3.106,926,3.912,1053,3.451,1054,4.124,1055,3.451,1145,2.099,1150,2.249,1230,4.011,1231,2.433,1232,2.773,1233,2.537,1234,2.537,1235,2.433,1238,2.249,1240,2.089,1242,2.537,1244,1.705,1245,3.451,1246,4.428,1247,3.7,1248,2.249,1249,4.428,1250,4.428]],["title/interfaces/MenuItem-1.html",[354,0.858,439,1.169,579,0.192]],["body/interfaces/MenuItem-1.html",[1,3.779,3,0.1,4,0.088,5,0.088,7,0.222,9,2.227,12,0.134,17,2.227,19,0.418,20,0.218,21,0.359,23,1.632,28,0.769,33,0.012,34,0.276,35,0.625,37,3.066,39,0.584,45,0.887,47,0.464,48,0.232,52,0.1,53,0.039,54,1.024,56,0.008,57,0.008,65,2.97,83,3.878,89,1.579,118,2.462,119,0.544,132,1.076,134,1.601,135,2.037,138,3.315,139,2.227,144,0.488,176,2.97,182,1.038,197,3.221,198,2.771,199,3.221,208,2.771,227,2.227,234,1.034,238,1.61,243,1.066,247,0.712,248,0.564,249,0.564,256,1.954,309,0.834,328,0.712,335,0.668,339,0.808,344,2.081,348,0.89,353,1.325,354,1.833,360,2.087,370,1.789,371,1.228,373,1.273,374,0.784,375,0.808,382,2.604,387,3.219,393,0.625,394,0.604,398,2.012,402,3.219,404,2.337,411,2.604,431,0.915,516,4.178,523,0.984,532,1.806,579,0.343,594,1.561,609,1.169,610,1.206,673,1.954,698,3.221,704,3.221,768,1.169,769,2.462,772,1.601,773,2.688,774,1.789,775,2.249,776,1.923,777,2.111,778,1.923,779,2.881,780,2.846,783,2.771,791,2.229,873,2.229,926,2.227,964,5.041,1038,2.462,1145,1.923,1152,4.702,1166,2.337,1232,2.227,1244,1.369,1313,2.97,1335,3.221,1409,2.337,1410,2.337,1532,3.219,1659,3.221,1668,3.221,1669,1.877,1721,4.435,1787,3.221,1788,4.896,1789,2.604,1790,4.896,1791,3.555,1792,4.896,1793,4.896,1794,3.555,1795,3.555,1796,2.97,1797,4.09,1798,2.97,1799,2.97,1800,3.555,1801,3.555,1802,3.555,1803,3.555,1804,3.555,1805,3.555,1806,3.555,1807,4.896,1808,3.555,1809,3.555,1810,3.555,1811,2.97,1812,4.678,1813,2.604,1814,2.771,1815,4.678,1816,5.517,1817,3.555,1818,2.97,1819,2.97,1820,2.97,1821,3.555,1822,2.97,1823,4.102,1824,4.678,1825,2.97,1826,2.97,1827,2.97,1828,3.555,1829,2.97,1830,2.97,1831,3.221,1832,3.555,1833,3.555,1834,3.39,1835,2.97,1836,4.09,1837,2.97,1838,2.97,1839,2.97,1840,2.97,1841,2.97,1842,3.555,1843,3.555,1844,3.555,1845,3.555,1846,3.555,1847,3.555]],["title/interfaces/MenuItem-2.html",[354,0.858,413,2.062,579,0.192]],["body/interfaces/MenuItem-2.html",[3,0.135,4,0.119,5,0.119,7,0.245,19,0.47,20,0.295,21,0.438,28,0.792,33,0.012,34,0.288,52,0.168,56,0.009,57,0.009,125,1.201,132,1.09,133,2.542,182,1.05,354,1.633,370,1.856,371,1.354,579,0.366,767,4.022,768,1.583,769,3.334,770,4.361,771,3.926,772,1.8,773,2.962,774,1.992,775,2.53,776,2.163,777,2.374,778,2.163,779,2.789,780,3.201]],["title/interfaces/MenuItem-3.html",[354,0.858,579,0.192,1848,2.841]],["body/interfaces/MenuItem-3.html",[1,4.004,3,0.115,4,0.101,5,0.101,7,0.233,9,2.568,11,3.543,12,0.145,19,0.373,20,0.251,21,0.395,23,1.344,28,0.781,33,0.012,34,0.286,37,2.568,39,0.989,40,1.121,47,0.417,48,0.267,52,0.115,53,0.043,54,0.946,56,0.008,57,0.008,90,1.697,119,0.628,132,1.089,133,2.164,144,0.563,152,1.088,182,1.034,233,0.962,234,1.192,238,1.348,239,1.528,248,0.855,249,0.65,252,1.023,309,0.962,328,1.413,335,0.77,339,0.932,344,1.742,348,0.979,351,1.666,354,1.816,360,2.009,370,1.474,371,1.168,373,1.369,374,0.904,375,0.932,379,2.729,393,0.721,394,0.697,398,2.215,498,2.839,499,1.528,523,1.058,534,2.453,572,1.934,573,2.082,579,0.369,580,2.568,594,1.718,596,1.474,609,1.348,610,1.39,615,1.307,673,2.253,687,1.803,768,1.348,769,2.839,772,1.429,773,3.001,774,1.865,775,2.383,776,2.038,777,2.237,778,2.038,779,2.628,780,3.016,782,2.253,788,3.425,791,1.867,792,2.348,793,2.348,1054,2.568,1145,2.117,1238,2.082,1240,2.542,1244,1.578,1248,2.082,1251,2.253,1252,3.087,1253,2.695,1345,2.143,1411,1.803,1582,2.253,1669,2.164,1708,3.425,1779,3.731,1789,3.003,1799,5.029,1813,3.003,1849,2.695,1850,3.195,1851,2.695,1852,4.1,1853,3.425,1854,4.1,1855,5.389,1856,4.1,1857,4.1,1858,4.1,1859,4.1,1860,4.1,1861,2.253,1862,3.425]],["title/interfaces/MenuItem-4.html",[354,0.858,482,2.297,579,0.192]],["body/interfaces/MenuItem-4.html",[3,0.121,4,0.107,5,0.107,7,0.237,12,0.139,19,0.452,20,0.265,21,0.409,28,0.784,33,0.012,34,0.286,39,0.916,47,0.386,48,0.282,52,0.121,53,0.044,54,0.795,56,0.009,57,0.009,91,1.741,119,0.662,132,1.083,144,0.593,151,1.925,152,1.927,153,3.611,182,1.032,233,1.014,248,0.885,249,0.686,252,1.079,309,1.014,326,2.842,327,2.039,328,1.41,335,0.812,339,0.983,344,1.837,348,0.786,351,1.336,354,1.689,370,1.526,371,1.198,373,1.404,374,0.953,375,0.983,379,2.538,393,0.76,394,0.735,396,1.336,398,2.292,499,1.611,523,1.085,534,2.586,579,0.378,594,1.778,596,1.526,615,1.378,673,2.375,745,1.968,768,1.421,772,1.48,773,2.842,774,1.892,775,2.432,776,2.08,777,2.283,778,2.08,779,2.682,780,3.078,1145,2.08,1231,2.375,1233,2.476,1234,2.476,1235,2.375,1238,2.196,1240,2.631,1244,1.664,1248,2.196,1251,2.375,1345,1.719,1669,2.282,1849,3.667,1861,2.375,1863,3.915,1864,2.842,1865,2.842,1866,3.611,1867,3.611,1868,3.611]],["title/interfaces/MenuItem-5.html",[354,0.858,579,0.192,887,1.723]],["body/interfaces/MenuItem-5.html",[3,0.119,4,0.105,5,0.105,7,0.236,12,0.138,19,0.382,20,0.26,21,0.404,28,0.783,33,0.012,34,0.286,39,0.905,47,0.382,48,0.277,52,0.119,53,0.044,54,0.785,56,0.009,57,0.009,100,1.726,119,0.65,132,1.083,144,0.583,151,1.943,152,1.884,154,2.001,155,3.547,182,1.033,233,0.996,248,0.875,249,0.673,252,1.059,309,0.996,328,1.379,335,0.797,339,0.965,344,1.804,348,0.772,351,1.312,354,1.675,370,1.508,371,1.188,373,1.392,374,0.936,375,0.965,379,2.663,393,0.746,394,0.721,396,1.312,398,2.266,431,1.092,499,1.583,523,1.249,579,0.375,594,2.066,596,1.772,609,1.396,610,1.44,615,1.353,673,2.333,768,1.396,772,1.463,773,2.829,774,1.883,775,2.416,776,2.066,777,2.267,778,2.066,779,2.663,780,3.057,1145,2.141,1231,2.333,1233,2.432,1234,2.432,1235,2.333,1238,2.156,1240,2.003,1244,1.634,1248,2.156,1345,1.688,1411,1.867,1669,2.241,1719,3.309,1851,2.791,1861,2.333,1864,2.791,1865,2.791,1869,3.846,1870,3.547,1871,3.547,1872,4.246,1873,4.246,1874,2.791]],["title/interfaces/MenuItem-6.html",[354,0.858,579,0.192,998,2.841]],["body/interfaces/MenuItem-6.html",[3,0.122,4,0.107,5,0.107,7,0.238,12,0.139,19,0.387,20,0.266,21,0.41,28,0.784,33,0.012,34,0.287,39,0.918,47,0.387,48,0.283,52,0.122,53,0.045,54,0.797,56,0.009,57,0.009,102,1.745,119,0.665,132,1.086,144,0.596,156,2.048,157,3.626,182,1.035,233,1.018,248,0.887,249,0.689,252,1.083,309,1.018,328,1.411,335,0.815,339,0.987,344,1.845,348,0.789,351,1.342,354,1.692,370,1.53,371,1.201,373,1.407,374,0.957,375,0.987,379,2.686,393,0.763,394,0.738,396,1.342,398,2.298,431,1.117,499,1.618,523,1.149,579,0.379,594,1.972,596,1.53,609,1.427,610,1.472,615,1.384,673,2.385,768,1.427,772,1.484,773,2.846,774,1.894,775,2.436,776,2.083,777,2.287,778,2.083,779,2.686,780,3.083,1145,2.156,1231,2.385,1233,2.486,1234,2.486,1235,2.385,1238,2.205,1240,2.048,1244,1.671,1248,2.205,1345,1.726,1411,1.909,1669,2.291,1719,3.383,1849,2.854,1851,2.854,1861,2.385,1864,2.854,1865,2.854,1874,2.854,1875,3.932,1876,3.626,1877,3.626]],["title/interfaces/MenuItem-7.html",[354,0.858,579,0.192,1878,3.584]],["body/interfaces/MenuItem-7.html",[3,0.122,4,0.107,5,0.107,7,0.237,12,0.139,14,3.374,19,0.387,20,0.379,21,0.409,28,0.784,33,0.012,34,0.286,39,0.917,47,0.387,48,0.282,52,0.122,53,0.045,54,0.88,56,0.009,57,0.009,103,1.743,119,0.663,132,1.087,144,0.594,158,2.139,159,3.617,182,1.035,233,1.016,248,0.886,249,0.687,252,1.08,309,1.016,326,2.847,327,2.043,328,1.387,335,0.813,339,0.985,344,1.84,348,0.787,351,1.338,354,1.69,370,1.527,371,1.199,373,1.405,374,0.954,375,0.985,379,2.683,393,0.761,394,0.736,396,1.338,398,2.295,431,1.114,499,1.614,523,1.148,532,2.199,579,0.379,594,1.78,596,1.184,609,1.423,610,1.468,615,1.38,768,1.423,772,1.481,773,2.844,774,1.892,775,2.434,776,2.081,777,2.284,778,2.081,779,2.683,780,3.08,922,2.379,1145,2.154,1231,2.379,1233,2.48,1234,2.48,1235,2.379,1238,2.199,1240,2.043,1244,1.667,1248,2.199,1345,1.722,1411,1.904,1669,2.286,1849,2.847,1851,2.847,1861,2.379,1864,2.847,1865,2.847,1866,3.617,1874,2.847,1877,3.617,1879,3.922,1880,3.617,1881,4.33,1882,4.33,1883,4.33]],["title/components/MenuItemComponent.html",[12,0.079,89,1.053]],["body/components/MenuItemComponent.html",[1,3.696,3,0.102,4,0.058,5,0.058,7,0.199,9,2.277,11,1.555,12,0.12,17,1.481,19,0.449,20,0.145,21,0.266,23,1.414,25,0.729,28,0.611,29,0.973,32,1.259,33,0.012,34,0.251,35,0.996,37,3.114,38,0.9,39,1.026,40,1.211,41,0.916,45,0.907,47,0.409,48,0.154,52,0.066,53,0.029,54,0.95,56,0.006,57,0.006,62,0.731,65,3.038,71,0.709,72,0.688,75,0.688,76,0.667,77,0.647,78,0.688,79,0.667,80,0.667,81,0.688,82,0.667,83,3.923,84,0.688,85,0.688,86,0.688,87,0.647,88,0.59,89,1.718,90,0.667,91,0.667,92,0.688,93,0.667,94,0.688,97,0.647,98,0.688,99,0.647,100,0.667,101,0.688,102,0.667,103,0.667,104,0.688,118,1.638,119,1.122,122,0.754,125,0.59,128,0.572,130,0.88,132,1.052,134,1.788,135,1.355,138,3.347,139,1.481,144,0.325,151,1.55,152,1.616,154,1.288,156,1.288,158,0.731,160,1.072,161,1.249,176,5.571,182,1.018,187,1.041,189,0.709,195,0.572,197,2.142,198,1.843,199,2.142,200,0.731,208,1.843,223,0.709,224,0.754,227,1.761,232,1.159,233,0.555,234,1.288,235,0.778,238,1.634,241,0.754,242,1.299,243,0.709,247,0.729,248,1.162,249,0.577,252,0.59,256,1.998,260,1.195,261,1.195,262,0.731,263,1.634,264,0.778,265,0.778,266,1.634,267,0.778,268,1.634,269,0.647,270,1.94,271,0.647,272,0.778,273,0.555,274,1.863,275,0.778,276,0.778,277,0.778,278,0.778,279,0.778,280,0.778,281,0.572,282,0.608,283,0.627,284,0.778,285,0.778,286,0.778,287,0.778,288,0.778,298,1.116,302,4.012,305,1.481,309,0.853,328,0.996,335,0.683,339,1.131,344,2.113,348,0.903,353,1.355,354,1.844,357,1.249,360,2.2,370,1.614,371,1.145,373,1.22,374,0.801,375,0.827,382,2.663,387,3.269,393,0.416,394,0.402,398,1.494,402,2.39,404,1.555,405,1.09,409,2.974,410,3.114,411,1.732,414,0.972,415,1.077,416,2.36,417,1.005,418,1.077,419,2.186,421,1.948,422,1.005,423,2.28,427,1.779,430,2.328,431,1.567,432,2.503,433,1.157,435,1.948,436,1.412,438,1.779,441,2.525,442,2.186,443,2.25,444,2.25,445,3.038,447,3.293,448,3.038,452,3.347,453,2.338,455,2.36,458,2.974,460,2.017,465,2.588,472,2.142,475,2.142,476,2.142,477,2.142,478,2.142,479,2.142,487,1.715,489,1.077,491,1.04,493,1.415,516,4.086,523,0.874,532,1.201,579,0.223,594,1.585,609,0.778,610,0.802,626,2.537,629,1.116,631,1.555,633,1.715,634,1.555,635,1.116,645,3.038,646,2.833,673,1.998,698,3.293,704,2.142,769,4.617,772,1.423,773,1.82,774,1.36,775,0.882,776,0.754,777,0.827,778,0.754,779,2.821,780,1.116,783,2.833,791,2.264,873,2.443,887,2.434,922,1.998,926,2.277,964,5.088,971,2.142,973,1.481,983,2.39,985,3.293,997,4.503,998,2.142,1006,2.39,1015,2.142,1038,2.518,1053,1.843,1145,1.941,1150,1.847,1152,4.746,1166,2.39,1232,2.277,1244,0.91,1251,1.998,1252,2.083,1253,2.39,1267,2.518,1270,2.518,1272,1.555,1273,1.481,1274,1.555,1275,1.732,1300,3.636,1313,3.038,1335,2.142,1391,1.481,1396,1.638,1406,1.555,1409,2.39,1410,2.39,1532,3.269,1582,1.299,1659,3.293,1668,2.142,1669,1.919,1721,4.503,1787,2.142,1788,4.972,1789,1.732,1790,4.972,1791,3.636,1792,5.666,1793,4.972,1794,3.636,1795,4.429,1796,3.7,1797,4.154,1798,3.7,1799,3.038,1800,2.365,1801,2.365,1802,2.365,1803,2.365,1804,2.365,1805,2.365,1806,2.365,1807,3.636,1808,2.365,1809,2.365,1810,2.365,1811,1.976,1812,4.733,1813,2.663,1814,2.833,1815,4.733,1816,5.584,1817,3.636,1818,3.038,1819,1.976,1820,1.976,1821,2.365,1822,1.976,1823,4.15,1824,4.483,1825,3.038,1826,1.976,1827,1.976,1828,2.365,1829,3.038,1830,1.976,1831,2.142,1832,2.365,1833,2.365,1834,3.443,1835,3.038,1836,3.038,1837,1.976,1838,1.976,1839,1.976,1840,1.976,1841,4.154,1842,4.972,1843,2.365,1844,2.365,1845,3.636,1846,4.972,1847,2.365,1884,4.156,1885,3.293,1886,4.156,1887,4.156,1888,2.703,1889,4.156,1890,2.703,1891,2.703,1892,2.703,1893,2.703,1894,2.703,1895,2.703,1896,2.703,1897,2.703,1898,2.703,1899,2.703,1900,4.156,1901,4.156,1902,4.156,1903,2.703,1904,2.703,1905,2.703,1906,2.703,1907,2.703,1908,2.703,1909,2.703,1910,2.703,1911,2.703,1912,2.703,1913,2.703,1914,2.703,1915,2.703,1916,4.156,1917,2.703,1918,2.703]],["title/injectables/MenuService.html",[0,1.307,1145,1.191]],["body/injectables/MenuService.html",[0,1.87,2,2.138,3,0.114,4,0.1,5,0.1,7,0.142,19,0.501,20,0.248,21,0.392,23,1.493,25,1.325,28,0.717,29,1.061,32,1.625,33,0.012,34,0.294,35,1.218,38,1.097,40,1.108,41,0.838,44,3.732,47,0.44,48,0.264,49,1.417,50,2.225,51,2.225,52,0.114,53,0.032,54,1.002,56,0.008,57,0.008,132,1.064,141,1.781,145,2.319,147,2.536,182,1.001,187,1.037,243,1.602,273,1.254,310,1.983,328,1.071,348,0.736,353,1.992,354,1.923,371,1.381,396,1.252,497,4.079,508,2.319,509,2.897,511,2.897,655,2.615,772,1.865,1039,5.345,1040,3.933,1048,2.662,1054,3.347,1145,2.028,1365,3.668,1366,3.668,1367,3.668,1369,4.049,1919,4.049,1920,6.838,1921,6.838,1922,6.838,1923,7.56,1924,6.838,1925,6.838,1926,6.838,1927,7.56,1928,6.109,1929,6.109,1930,4.628,1931,6.109,1932,4.628,1933,6.109,1934,4.628,1935,4.628,1936,6.109,1937,4.628,1938,6.109,1939,4.628,1940,4.628,1941,4.628,1942,4.628,1943,6.109,1944,4.628,1945,4.628,1946,4.628,1947,4.628,1948,4.628]],["title/components/MenuViewComponent.html",[12,0.079,90,1.053]],["body/components/MenuViewComponent.html",[1,3.952,3,0.075,4,0.065,5,0.065,7,0.198,9,2.484,11,3.466,12,0.137,19,0.425,20,0.163,21,0.291,23,0.989,25,0.795,28,0.68,29,0.875,32,1.114,33,0.012,34,0.269,35,0.835,37,2.484,38,0.702,39,0.972,40,1.299,41,0.82,47,0.329,48,0.173,52,0.075,53,0.032,54,0.804,56,0.006,57,0.006,62,0.82,71,0.795,72,0.771,75,0.771,76,0.748,77,0.725,78,0.771,79,0.748,80,0.748,81,0.771,82,0.748,84,0.771,85,0.771,86,0.771,87,0.725,88,0.662,89,0.748,90,1.779,91,0.748,92,0.771,93,0.748,94,0.771,97,0.725,98,0.771,99,0.725,100,0.748,101,0.771,102,0.748,103,0.748,104,0.771,119,1.134,122,0.845,125,0.662,128,0.642,130,0.959,132,1.076,133,3.24,134,1.26,144,0.364,151,1.62,152,1.792,154,1.381,156,1.381,158,0.82,160,1.149,161,1.339,182,0.991,187,0.515,189,0.795,195,0.642,200,0.82,223,0.795,224,0.845,232,1.264,233,0.93,234,1.381,235,0.872,238,1.304,239,1.478,241,0.845,247,0.531,248,1.177,249,0.629,252,0.989,260,1.304,261,1.304,262,0.82,263,1.733,264,0.872,265,0.872,266,1.733,267,0.872,268,1.733,269,0.725,270,2.018,271,0.725,272,0.872,273,0.622,274,1.947,275,0.872,276,0.872,277,0.872,278,0.872,279,0.872,280,0.872,281,0.642,282,0.682,283,0.703,284,0.872,285,0.872,286,0.872,287,0.872,288,0.872,298,1.251,309,0.93,328,1.446,335,0.745,339,1.199,344,2.019,348,0.958,351,1.629,354,1.679,357,3.126,360,1.965,370,1.442,371,0.515,373,1.283,374,0.874,375,0.902,379,2.593,393,0.466,394,0.451,398,1.63,405,1.84,409,2.372,410,2.484,414,1.63,415,1.805,416,2.481,417,2.019,418,2.4,419,2.775,421,1.744,422,2.398,423,2.398,427,2.897,430,2.522,431,1.69,432,2.941,433,2.761,434,1.629,435,2.481,436,1.799,437,2.096,438,2.324,439,0.988,440,1.743,441,3.117,442,2.699,443,2.677,444,2.677,446,1.251,450,3.65,452,3.545,453,2.094,455,2.604,456,1.836,457,2.746,458,2.842,459,2.746,460,2.696,461,2.372,462,2.721,465,2.516,469,2.652,481,2.402,487,1.251,489,1.805,490,1.4,491,2.089,498,1.836,499,0.988,523,0.992,534,2.372,572,1.871,573,1.347,579,0.243,580,2.484,591,0.928,594,1.68,596,1.543,609,0.872,610,0.899,614,0.958,615,0.845,627,2.094,628,1.4,629,1.251,633,1.251,635,1.251,639,2.372,641,2.372,642,1.586,643,1.661,644,1.661,673,2.179,687,1.744,764,1.519,769,4.25,772,0.703,773,2.776,774,1.442,775,0.988,776,0.845,777,0.928,778,0.845,779,1.63,780,1.251,782,1.457,788,3.313,791,1.805,792,2.721,793,2.271,887,1.457,922,2.179,970,2.402,973,1.661,983,1.743,989,2.652,1001,1.836,1006,2.607,1007,1.836,1019,2.746,1054,1.661,1144,1.661,1145,2.056,1236,2.905,1238,2.014,1240,2.487,1244,1.021,1248,1.347,1251,3.254,1252,3.615,1253,3.123,1254,2.905,1255,1.942,1256,1.836,1257,4.1,1258,1.836,1259,1.942,1260,1.942,1261,1.942,1262,1.942,1263,1.942,1264,1.942,1265,1.942,1266,1.942,1267,1.836,1268,1.942,1269,1.942,1270,1.836,1271,2.746,1272,1.743,1273,1.661,1274,1.743,1276,3.289,1277,1.457,1278,2.905,1279,1.942,1280,1.942,1281,1.942,1345,2.096,1411,1.166,1582,1.457,1669,2.094,1708,2.215,1779,3.289,1789,1.942,1799,4.404,1813,2.905,1849,2.607,1850,3.09,1851,3.123,1852,2.652,1853,2.215,1854,2.652,1855,4.75,1856,3.966,1857,3.966,1858,3.966,1859,3.966,1860,2.652,1861,2.179,1862,3.313,1949,4.533,1950,3.966,1951,3.031,1952,3.031,1953,3.031,1954,3.031,1955,3.031,1956,3.031,1957,3.031,1958,3.031,1959,4.533,1960,3.031,1961,3.031,1962,3.031,1963,2.402]],["title/components/MilkTeaMenuComponent.html",[12,0.079,91,1.053]],["body/components/MilkTeaMenuComponent.html",[3,0.079,4,0.069,5,0.069,7,0.191,12,0.123,19,0.461,20,0.172,21,0.304,25,0.83,28,0.689,29,0.855,32,0.972,33,0.012,34,0.267,35,0.728,38,0.612,39,0.891,40,1.133,41,0.857,47,0.287,48,0.184,52,0.079,53,0.033,54,0.59,56,0.007,57,0.007,62,0.87,71,0.844,72,0.818,75,0.818,76,0.793,77,0.77,78,0.818,79,0.793,80,0.793,81,0.818,82,0.793,84,0.818,85,0.818,86,0.818,87,0.77,88,0.702,89,0.793,90,0.793,91,1.81,92,0.818,93,0.793,94,0.818,97,0.77,98,0.818,99,0.77,100,0.793,101,0.818,102,0.793,103,0.793,104,0.818,119,1.14,122,0.897,125,0.702,128,0.681,130,1.003,132,1.062,134,1.305,144,0.386,151,1.994,152,1.993,153,5.055,154,1.43,156,1.43,158,0.87,160,1.19,161,1.387,182,0.981,187,0.546,189,0.844,195,0.681,200,0.87,223,0.844,224,0.897,232,1.321,233,0.972,234,0.818,235,0.925,241,0.897,247,0.564,248,1.182,249,0.657,252,1.034,260,1.362,261,1.362,262,0.87,263,1.784,264,0.925,265,0.925,266,1.784,267,0.925,268,1.784,269,0.77,270,2.057,271,0.77,272,0.925,273,0.66,274,1.989,275,0.925,276,0.925,277,0.925,278,0.925,279,0.925,280,0.925,281,0.681,282,0.724,283,0.746,284,0.925,285,0.925,286,0.925,287,0.925,288,0.925,298,1.327,309,0.972,326,2.724,327,1.955,328,1.451,335,0.778,339,1.234,344,2.091,348,0.894,351,1.281,354,1.345,357,3.194,370,1.484,371,0.546,373,1.315,374,0.913,375,0.942,379,2.487,393,0.495,394,0.478,396,0.87,398,1.703,405,1.814,409,2.479,410,2.595,414,1.703,415,1.887,416,2.544,417,2.091,418,2.471,419,2.882,421,1.822,422,2.458,423,2.306,427,2.96,430,2.571,431,1.686,432,2.922,433,2.655,434,1.677,435,2.386,436,1.73,437,1.956,438,2.027,439,1.049,440,1.85,441,3.178,442,2.823,443,2.756,444,2.756,446,1.327,450,3.758,452,3.601,453,2.188,455,2.751,456,1.948,457,2.87,458,2.479,459,2.87,460,2.755,461,2.479,462,2.818,465,2.572,487,1.327,489,1.887,490,1.486,491,1.822,499,1.545,523,1.017,534,2.479,579,0.254,591,0.985,594,1.73,596,1.582,615,0.897,627,2.188,628,1.486,629,1.327,633,1.327,635,1.327,639,2.479,641,2.479,642,1.683,643,1.762,644,1.762,673,2.277,745,1.887,764,1.612,772,0.746,773,2.022,774,1.484,775,1.049,776,0.897,777,0.985,778,0.897,779,1.703,780,1.327,880,1.948,887,1.546,922,2.277,973,1.762,983,1.85,1001,1.948,1006,1.85,1007,1.948,1019,2.87,1144,1.762,1145,1.994,1231,1.546,1233,2.818,1234,2.374,1235,2.703,1236,3.036,1238,2.105,1240,2.56,1244,1.083,1248,1.429,1251,2.982,1252,2.374,1253,2.724,1254,3.036,1255,2.061,1256,1.948,1257,3.758,1258,1.948,1259,2.061,1260,2.061,1261,2.061,1262,2.061,1263,2.061,1264,2.061,1265,2.061,1266,2.061,1267,1.948,1268,2.061,1269,2.061,1270,1.948,1271,2.87,1272,1.85,1273,1.762,1274,1.85,1275,2.061,1276,3.406,1277,1.546,1278,3.036,1279,2.061,1280,2.061,1281,2.061,1345,1.648,1669,2.188,1849,3.568,1861,2.277,1863,5.481,1864,2.724,1865,2.724,1866,3.462,1867,2.351,1868,3.462,1964,3.216,1965,2.814,1966,3.216,1967,3.216,1968,3.216]],["title/components/NavMenuComponent.html",[12,0.079,92,1.086]],["body/components/NavMenuComponent.html",[3,0.085,4,0.075,5,0.075,7,0.154,12,0.136,13,2.88,19,0.356,20,0.345,21,0.412,23,0.758,25,1.03,28,0.314,29,1.002,32,0.712,33,0.012,34,0.231,35,0.534,38,0.647,39,0.924,40,1.631,41,1.234,47,0.389,48,0.198,52,0.085,53,0.035,54,0.732,56,0.009,57,0.007,62,0.939,71,0.91,72,0.883,75,0.883,76,0.856,77,0.831,78,0.883,79,0.856,80,0.856,81,0.883,82,0.856,84,0.883,85,0.883,86,0.883,87,0.831,88,0.758,89,0.856,90,0.856,91,0.856,92,1.907,93,0.856,94,0.883,97,0.831,98,0.883,99,0.831,100,0.856,101,0.883,102,0.856,103,0.856,104,0.883,119,1.147,122,2.09,123,6.221,125,1.282,128,1.243,130,1.361,132,0.934,134,0.806,143,1.669,144,0.601,151,1.198,152,1.162,154,0.883,156,0.883,158,0.939,160,0.735,161,0.856,178,3.037,179,2.367,182,0.601,187,0.589,189,0.91,195,0.735,200,0.939,223,0.91,224,0.968,232,1.396,233,1.028,234,0.883,235,0.998,238,1.44,239,2.587,241,1.981,244,2.88,247,0.609,248,1.189,249,0.695,251,3.736,252,1.093,256,2.407,258,2.537,259,3.736,260,1.85,261,1.44,262,0.939,263,1.85,264,0.998,265,0.998,266,1.85,267,0.998,268,1.85,269,0.831,270,2.106,271,0.831,272,0.998,273,0.712,274,2.043,275,0.998,276,0.998,277,0.998,278,0.998,279,0.998,280,0.998,281,0.735,282,0.781,283,0.806,284,0.998,285,0.998,286,0.998,287,0.998,288,0.998,299,1.669,302,2.751,305,3.523,309,1.028,329,1.997,335,0.823,339,1.279,348,1.022,351,2.027,352,2.88,371,0.589,373,1.356,374,0.966,375,0.996,376,2.88,390,1.335,393,0.534,394,0.516,405,1.687,406,3.037,414,1.801,415,1.995,417,1.291,419,2.733,421,1.926,422,2.184,423,2.184,425,2.509,426,2.621,427,2.143,428,1.902,430,1.248,431,1.322,432,1.248,436,0.968,437,1.742,441,1.543,442,1.926,443,3.03,444,3.445,445,3.66,447,2.751,448,2.537,452,1.669,455,2.26,458,2.621,460,2.561,462,1.74,465,1.291,467,2.751,489,1.995,493,1.817,499,1.132,500,1.74,523,0.77,550,2.509,594,1.396,615,0.968,623,3.075,626,2.509,629,1.433,646,2.367,660,2.88,715,2.367,721,2.744,725,3.892,730,2.225,764,1.74,784,6.143,785,5.096,787,3.66,795,5.139,805,5.11,850,2.829,867,3.037,955,1.543,971,2.751,973,3.219,978,4.381,985,2.751,997,2.751,1049,5.352,1074,3.366,1092,3.414,1231,1.669,1233,2.944,1234,2.509,1237,3.037,1241,3.037,1273,1.902,1310,4.294,1324,5.965,1328,1.543,1330,3.037,1345,1.742,1346,2.537,1391,3.219,1411,1.335,1480,2.103,1563,3.034,1582,2.407,1700,4.005,1738,4.381,1751,5.626,1754,4.381,1969,6.868,1970,3.968,1971,7.636,1972,5.874,1973,5.874,1974,5.874,1975,5.874,1976,5.874,1977,5.007,1978,3.471,1979,3.471,1980,3.471,1981,3.471,1982,5.007,1983,7.322,1984,3.471,1985,3.471,1986,5.626,1987,6.43,1988,3.471,1989,3.471,1990,3.471,1991,3.471,1992,3.471,1993,3.471,1994,3.471,1995,2.751,1996,5.007,1997,5.007,1998,3.471,1999,3.471,2000,3.471,2001,3.471,2002,3.471,2003,3.471,2004,3.471,2005,3.471,2006,3.471,2007,3.471,2008,3.471,2009,3.471,2010,3.471,2011,3.471,2012,3.471,2013,3.471,2014,3.471,2015,3.037,2016,3.471,2017,3.471,2018,3.471,2019,3.471,2020,5.007,2021,5.007,2022,3.471,2023,3.471,2024,3.471,2025,3.471,2026,3.471,2027,3.471,2028,5.007,2029,3.471,2030,3.471,2031,3.471,2032,3.037,2033,5.007,2034,3.968,2035,3.471,2036,3.471,2037,3.471,2038,3.471,2039,3.471,2040,3.471,2041,3.471,2042,3.471,2043,3.471,2044,3.471,2045,3.471]],["title/classes/OrderHistory.html",[53,0.03,1408,2.339]],["body/classes/OrderHistory.html",[3,0.144,4,0.126,5,0.126,7,0.18,20,0.313,21,0.454,28,0.641,29,1.066,33,0.012,34,0.279,35,1.322,52,0.144,53,0.041,56,0.01,57,0.01,125,1.663,160,1.612,328,1.335,369,3.662,371,1.429,407,3.197,582,3.359,599,2.1,772,1.936,1022,3.2,1024,4.615,1283,4.615,1399,2.595,1408,3.879,1547,4.381,1549,3.817,1550,3.547,1551,3.662,1552,3.662,2046,7.298,2047,5.11,2048,5.84,2049,5.84,2050,6.664,2051,5.11,2052,6.664,2053,5.84,2054,6.193,2055,5.84,2056,6.193,2057,5.84,2058,5.84,2059,5.84,2060,5.84]],["title/injectables/OrderHistoryService.html",[0,1.307,1381,2.339]],["body/injectables/OrderHistoryService.html",[0,2.082,2,2.528,3,0.135,4,0.118,5,0.118,7,0.209,8,3.912,19,0.331,20,0.293,21,0.436,23,1.615,25,1.396,29,1.029,32,1.123,33,0.012,34,0.279,35,0.842,38,1.049,40,1.31,41,0.991,44,3.664,47,0.469,48,0.312,49,1.675,50,2.631,51,2.631,52,0.135,53,0.038,54,0.682,56,0.009,57,0.009,58,3.727,141,2.105,145,2.743,147,2.999,310,1.826,348,1.177,396,1.48,407,3.017,497,3.901,508,2.743,509,3.233,511,3.171,513,3.27,523,1.046,564,3.727,774,1.853,1036,4.121,1040,4.257,1043,3.912,1047,4.359,1048,3.148,1352,4.788,1381,4.447,1399,3.696,1400,3.912,1402,4.121,2061,7.1,2062,4.788,2063,6.802,2064,7.962,2065,7.742,2066,7.962,2067,6.802,2068,5.473,2069,5.473,2070,5.473,2071,6.802,2072,5.473,2073,5.473]],["title/interfaces/OrderItem.html",[579,0.229,1393,2.456]],["body/interfaces/OrderItem.html",[3,0.046,4,0.04,5,0.04,7,0.058,12,0.108,16,3.407,19,0.353,20,0.1,21,0.254,23,1.005,28,0.741,31,1.025,33,0.012,34,0.221,38,0.512,39,1.075,41,1.054,45,1.379,47,0.353,48,0.107,49,0.573,52,0.046,53,0.022,54,0.961,56,0.004,57,0.004,88,0.865,115,1.076,116,1.025,119,0.251,128,1.337,130,0.975,131,0.938,132,0.961,144,0.225,182,0.946,187,1.383,195,0.839,227,2.418,230,0.979,238,0.538,239,2.65,242,3.768,243,0.491,246,2.308,247,0.328,248,0.26,249,0.26,271,0.448,273,1.658,281,0.975,282,0.697,283,0.92,299,1.489,309,0.384,310,1.683,328,1.021,335,0.307,339,0.372,348,0.492,351,1.246,353,0.61,364,4.748,370,0.741,371,1.072,373,0.788,374,0.361,375,0.372,383,1.326,393,0.288,394,0.278,405,1.527,407,2.165,408,0.979,434,0.506,437,0.651,439,1.01,490,1.43,491,0.72,493,3.306,496,1.076,499,0.61,500,0.938,523,0.936,532,1.376,539,3.928,550,0.938,572,2.27,573,1.376,579,0.327,581,1.025,586,1.612,590,1.817,591,0.573,596,1.558,598,0.63,600,2.093,611,0.891,612,2.664,613,2.646,655,2.184,670,0.745,681,1.134,683,2.878,687,2.568,688,0.864,712,0.979,721,1.025,745,0.745,768,0.538,771,3.349,772,1.413,774,1.884,775,0.61,776,0.864,777,0.573,778,0.522,782,0.899,791,1.234,792,0.938,793,0.938,818,1.876,850,2.954,873,2.891,955,3.262,987,2.649,1052,2.308,1064,0.899,1074,0.979,1125,3.182,1142,1.076,1145,1.423,1146,2.453,1147,2.671,1150,1.376,1154,0.979,1187,4.122,1224,3.346,1242,0.938,1244,0.63,1277,2.799,1296,3.332,1297,1.076,1305,1.876,1306,1.876,1307,1.876,1308,1.876,1328,0.831,1338,1.134,1339,1.781,1340,1.781,1345,1.602,1371,2.401,1372,3.19,1373,2.171,1377,2.171,1378,4.279,1379,1.199,1380,1.199,1381,2.796,1382,1.199,1383,1.199,1384,1.199,1385,1.199,1386,2.952,1387,1.781,1388,2.952,1389,3.524,1390,1.076,1391,1.025,1392,0.938,1393,2.279,1394,1.199,1395,1.025,1396,1.876,1397,1.025,1398,1.199,1399,1.761,1400,1.076,1401,2.952,1402,1.134,1403,0.938,1404,1.199,1405,0.938,1406,3.998,1407,0.938,1408,1.025,1409,1.076,1410,1.076,1411,1.772,1412,1.076,1413,2.952,1414,2.952,1415,1.199,1416,1.199,1417,1.199,1418,1.985,1419,1.199,1420,1.985,1421,1.199,1422,1.985,1423,1.985,1424,1.985,1425,1.697,1426,1.199,1427,1.199,1428,1.199,1429,1.199,1430,1.985,1431,1.199,1432,2.952,1433,1.985,1434,1.985,1435,1.199,1436,1.985,1437,1.199,1438,2.952,1439,1.985,1440,1.076,1441,1.985,1442,1.199,1443,1.199,1444,1.552,1445,1.985,1446,1.985,1447,1.199,1448,1.985,1449,1.985,1450,1.985,1451,2.952,1452,1.985,1453,1.985,1454,1.985,1455,1.985,1456,1.985,1457,2.952,1458,1.985,1459,1.199,1460,1.199,1461,1.199,1462,2.539,1463,1.985,1464,3.524,1465,1.985,1466,1.199,1467,1.199,1468,1.199,1469,1.199,1470,1.199,1471,1.199,1472,1.199,1473,1.199,1474,1.199,1475,1.199,1476,1.199,1477,1.985,1478,2.539,1479,1.199,1480,1.134,1481,1.199,1482,2.539,1483,1.199,1484,1.199,1485,1.199,1486,1.199,1487,1.985,1488,1.985,1489,1.697,1490,1.199,1491,1.199,1492,1.199,1493,1.199,1494,1.985,1495,1.199,1496,1.199,1497,1.199,1498,1.199,1499,1.199,1500,1.199,1501,1.199,1502,1.697,1503,1.697,1504,1.199,1505,1.199,1506,1.985,1507,1.199,1508,1.199,1509,1.199,1510,1.199,1511,1.199,1512,1.199,1513,1.199,1514,2.539,1515,1.199,1516,1.199,1517,3.163,1518,1.199,1519,1.781,1520,1.781,1521,1.781,1522,1.199,1523,2.539,1524,3.332,1525,1.199,1526,2.952,1527,1.076,1528,1.985,1529,1.985,1530,1.076,1531,1.076,1532,2.279,1533,1.076,1534,1.199,1535,1.985,1536,1.199,1537,1.199,1538,1.199,1539,4.508,1540,3.731,1541,3.731,1542,1.199,1543,1.199,1544,1.199,1545,1.199,1546,1.199,1547,1.076,1548,1.199,1549,0.938,1550,0.938,1551,0.899,1552,0.899,1553,1.199,1554,1.199,1555,2.539,1556,1.199,1557,3.346,1558,1.985,1559,4.072,1560,3.524,1561,1.199,1562,3.731,1563,3.332,1564,1.199,1565,3.524,1566,1.199,1567,3.524,1568,1.199,1569,1.199,1570,1.199,1571,1.025,1572,1.199,1573,4.171,1574,3.731,1575,2.539,1576,1.199,1577,1.697,1578,3.524,1579,1.199,1580,1.199,1581,1.199,1582,0.899,1583,1.985,1584,1.199,1585,1.199,1586,1.199,1587,1.199,1588,2.539,1589,1.199,1590,1.199,1591,1.199,1592,1.199,1593,1.199,1594,1.985,1595,1.199,1596,1.199,1597,1.199,1598,1.199,1599,2.952,1600,2.952,1601,1.199,1602,1.199,1603,1.199,1604,1.199,1605,2.649,1606,1.199,1607,1.199,1608,1.199,1609,1.199,1610,1.199,1611,1.199,1612,1.199,1613,1.199,1614,1.199,1615,1.199,1616,1.199,1617,2.952,1618,3.524,1619,1.985,1620,1.199,1621,1.199,1622,1.199,1623,1.199,1624,1.199,1625,3.271,1626,3.271,1627,1.199,1628,1.199,1629,1.199,1630,1.199,1631,1.199,1632,1.199,1633,1.199,1634,1.199,1635,1.199]],["title/classes/Orders.html",[53,0.03,1693,2.911]],["body/classes/Orders.html",[3,0.145,4,0.127,5,0.127,7,0.181,20,0.315,21,0.456,28,0.643,29,1.067,33,0.012,34,0.28,35,1.323,52,0.145,53,0.041,56,0.01,57,0.01,125,1.668,160,1.617,328,1.339,369,3.672,371,1.431,407,3.21,582,3.382,599,2.114,610,1.745,772,1.939,1022,3.222,1024,4.628,1283,4.628,1547,4.088,1549,3.828,1550,3.562,1551,3.672,1552,3.672,1693,4.846,1779,3.563,2050,6.684,2051,5.145,2052,6.684,2054,6.219,2056,6.219,2074,5.145,2075,5.88,2076,5.88,2077,5.88,2078,5.88,2079,5.88,2080,5.88,2081,5.88]],["title/injectables/OrdersService.html",[0,1.307,2082,2.456]],["body/injectables/OrdersService.html",[0,1.917,2,2.22,3,0.118,4,0.104,5,0.104,7,0.193,17,3.431,19,0.422,20,0.258,21,0.402,23,1.788,25,1.098,28,0.693,29,1.033,32,1.429,33,0.012,34,0.282,35,1.071,38,1.014,40,1.667,41,1.261,44,3.507,47,0.447,48,0.274,49,1.471,50,2.31,51,2.31,52,0.118,53,0.034,54,0.996,56,0.009,57,0.009,125,1.049,141,1.849,145,2.409,147,2.633,160,1.017,227,2.179,238,1.801,310,1.718,328,0.843,348,1.107,352,3.602,353,2.042,369,2.31,371,1.422,396,1.3,407,3.046,497,3.772,508,2.409,509,3.125,511,3.183,512,4.269,513,3.548,520,6.094,521,6.695,523,0.739,525,4.636,564,4.299,566,3.277,599,2.252,745,2.494,746,4.205,772,1.713,1024,2.912,1040,4.006,1047,4.013,1048,2.764,1052,3.138,1125,3.239,1224,3.835,1283,2.912,1372,2.633,1373,2.633,1399,3.279,1551,2.31,1552,2.31,1693,5.031,2082,4.513,2083,4.205,2084,5.029,2085,6.965,2086,6.965,2087,7.38,2088,6.262,2089,6.262,2090,6.262,2091,4.806,2092,6.262,2093,4.806,2094,6.965,2095,6.262,2096,4.905,2097,4.806,2098,6.262,2099,4.806,2100,6.262,2101,6.262,2102,6.262,2103,4.806,2104,6.262,2105,4.806,2106,6.262,2107,4.806]],["title/components/ProfileComponent.html",[12,0.079,93,1.053]],["body/components/ProfileComponent.html",[3,0.114,4,0.1,5,0.1,7,0.188,12,0.141,19,0.415,20,0.249,21,0.392,25,1.073,28,0.554,29,0.941,32,0.953,33,0.012,34,0.232,35,0.714,38,0.6,39,0.88,40,1.111,41,0.84,44,2.62,47,0.371,48,0.265,52,0.114,53,0.043,54,0.579,56,0.008,57,0.008,62,1.256,71,1.218,72,1.181,75,1.181,76,1.145,77,1.111,78,1.181,79,1.145,80,1.145,81,1.181,82,1.145,84,1.181,85,1.181,86,1.181,87,1.111,88,1.013,89,1.145,90,1.145,91,1.145,92,1.181,93,1.984,94,1.181,97,1.111,98,1.181,99,1.111,100,1.145,101,1.181,102,1.145,103,1.145,104,1.181,119,1.169,122,1.295,125,1.013,128,0.983,130,1.296,132,0.763,134,1.077,143,2.232,144,0.735,151,1.465,152,1.421,154,1.181,156,1.181,158,1.256,160,0.983,161,1.145,182,0.735,187,0.788,189,1.218,195,0.983,200,1.256,223,1.218,224,1.295,228,7.291,232,1.707,233,1.256,234,1.181,235,1.335,239,2.468,241,2.031,243,1.796,247,0.814,248,1.212,249,0.85,251,4.147,259,4.147,260,1.761,261,1.761,262,1.256,263,2.094,264,1.335,265,1.335,266,2.094,267,1.335,268,2.094,269,1.111,270,2.279,271,1.111,272,1.335,273,0.953,274,2.235,275,1.335,276,1.335,277,1.335,278,1.335,279,1.335,280,1.335,281,0.983,282,1.045,283,1.077,284,1.335,285,1.335,286,1.335,287,1.335,288,1.335,309,1.256,326,3.521,327,2.527,339,1.449,348,1.089,351,1.852,358,5.299,373,1.506,374,1.18,375,1.218,376,3.521,393,0.714,394,0.69,413,2.67,431,1.378,523,1.219,580,3.354,585,4.174,615,1.295,683,2.43,725,3.354,730,2.975,783,4.174,1045,4.474,1078,4.062,1700,5.16,1709,4.851,1713,3.679,2108,4.062,2109,6.121,2110,7.568,2111,6.121,2112,4.642,2113,4.642,2114,4.642,2115,4.642,2116,4.642,2117,7.281,2118,6.121,2119,6.121]],["title/components/QuickAddPopupComponent.html",[12,0.079,94,1.086]],["body/components/QuickAddPopupComponent.html",[3,0.065,4,0.057,5,0.057,7,0.173,12,0.119,19,0.439,20,0.268,21,0.262,23,0.578,25,0.717,28,0.761,29,1.037,32,0.839,33,0.012,34,0.28,35,0.629,38,0.785,39,0.922,40,1.815,41,1.373,45,1.768,47,0.303,48,0.151,52,0.065,53,0.029,54,0.623,56,0.006,57,0.006,62,0.716,71,0.694,72,0.673,75,0.673,76,0.653,77,0.633,78,0.673,79,0.653,80,0.653,81,0.673,82,0.653,84,0.673,85,0.673,86,0.673,87,0.633,88,0.578,89,0.653,90,0.653,91,0.653,92,0.673,93,0.653,94,1.759,97,0.633,98,0.673,99,0.633,100,0.653,101,0.673,102,0.653,103,0.653,104,0.673,119,1.12,122,0.738,125,0.578,128,0.56,130,0.865,132,1.005,134,0.614,144,0.318,151,0.978,152,0.949,154,0.673,156,0.673,158,0.716,160,0.56,161,0.653,182,1.004,186,6.39,187,1.476,188,6.39,189,0.694,195,0.56,200,0.716,223,0.694,224,0.738,227,0.921,232,1.14,233,0.543,234,0.673,235,0.761,239,1.333,241,0.738,244,2.351,247,0.717,248,1.16,249,0.567,252,0.578,256,2.701,258,2.988,260,1.176,261,1.176,262,0.716,263,1.616,264,0.761,265,0.761,266,1.616,267,0.761,268,1.616,269,0.633,270,1.925,271,0.633,272,0.761,273,1.025,274,1.847,275,0.761,276,0.761,277,0.761,278,0.761,279,0.761,280,0.761,281,1.654,282,0.596,283,0.614,284,0.761,285,0.761,286,0.761,287,0.761,288,0.761,294,2.988,295,4.693,296,4.107,297,3.24,298,2.062,299,2.401,310,1.009,328,1.173,329,2.351,332,3.89,333,4.645,335,0.672,339,1.118,343,2.351,345,2.14,348,0.794,351,1.52,353,1.832,357,2.965,359,2.337,360,2.642,361,3.195,370,0.978,373,0.994,374,0.788,375,0.813,379,1.47,381,2.557,390,1.573,391,1.922,393,0.407,394,0.393,395,1.603,396,0.716,405,1.755,414,1.796,415,1.054,416,1.573,417,0.984,418,1.054,419,1.573,421,1.573,422,2.571,423,2.387,425,1.326,426,1.385,428,2.24,429,1.522,430,1.47,431,0.92,432,1.47,435,1.573,436,1.393,442,1.018,446,1.687,455,1.573,460,1.99,465,2.571,487,1.092,489,1.054,497,1.965,498,3.404,503,4.453,516,3.89,577,1.176,578,2.14,585,2.787,586,2.241,587,2.307,588,1.888,589,3.079,592,1.75,593,1.934,594,1.567,602,1.817,612,0.891,621,1.603,622,1.603,623,2.14,624,1.603,625,1.603,626,2.503,627,1.888,628,1.222,629,1.092,630,1.603,631,1.522,632,1.603,633,1.092,634,1.522,635,1.092,636,1.603,637,1.603,656,2.477,657,3.404,659,2.477,660,2.351,669,1.603,670,3.212,675,3.24,677,2.787,683,2.941,687,1.573,695,2.315,712,1.385,718,2.097,773,0.951,774,1.792,776,0.738,777,0.81,778,0.738,850,1.054,873,1.054,910,2.097,920,2.097,921,2.097,944,2.097,1054,3.079,1055,2.787,1125,2.762,1129,2.315,1142,2.873,1144,1.45,1145,1.867,1146,3.323,1148,2.097,1150,3.072,1158,2.315,1163,2.315,1174,2.315,1175,2.315,1176,2.097,1177,2.315,1182,2.097,1183,2.097,1187,2.873,1224,2.816,1227,1.696,1229,2.097,1232,3.971,1242,3.217,1299,3.24,1339,1.522,1340,1.522,1372,1.45,1373,1.45,1440,1.522,1517,2.873,1519,1.522,1520,1.522,1521,1.522,1524,2.477,1527,2.351,1530,2.351,1531,1.522,1533,2.351,1605,3.232,1726,3.576,1765,2.315,1797,4.107,2120,2.787,2121,4.995,2122,4.995,2123,4.995,2124,4.995,2125,4.37,2126,4.37,2127,4.37,2128,4.37,2129,4.37,2130,4.37,2131,4.37,2132,4.37,2133,3.576,2134,4.088,2135,2.315,2136,2.646,2137,7.247,2138,2.646,2139,3.576,2140,2.646,2141,3.576,2142,3.576,2143,4.088,2144,2.646,2145,2.646,2146,2.646,2147,2.646,2148,2.315,2149,2.646,2150,2.315,2151,2.315,2152,3.576,2153,2.315,2154,2.315,2155,2.315,2156,2.315,2157,2.315,2158,3.576,2159,2.315,2160,2.315,2161,2.315,2162,2.315,2163,2.315,2164,2.315,2165,2.315,2166,2.315,2167,2.315,2168,2.315,2169,2.315,2170,2.315,2171,2.315,2172,2.315,2173,2.315,2174,2.315,2175,2.315,2176,2.315,2177,2.315,2178,2.315,2179,2.315,2180,2.315,2181,2.315,2182,2.315,2183,2.315,2184,2.315,2185,1.934,2186,2.315,2187,2.646,2188,2.646,2189,2.646,2190,2.646,2191,2.315,2192,2.315,2193,2.315]],["title/pipes/ReplacePipe.html",[95,2.911,289,2.052]],["body/pipes/ReplacePipe.html",[3,0.153,4,0.135,5,0.135,7,0.192,19,0.475,25,1.094,28,0.787,29,0.807,32,1.281,33,0.012,34,0.211,35,0.96,38,0.807,41,1.418,47,0.378,48,0.356,52,0.153,53,0.044,56,0.01,57,0.01,95,5.519,247,1.094,289,3.541,290,4,293,5.022,294,5.384,305,3.42,306,5.384,308,5.022,309,1.281,310,1.817,1035,5.837,1095,6.855,1297,4.236,2194,5.461,2195,7.365,2196,7.365,2197,5.384,2198,8.094,2199,6.241,2200,6.241,2201,6.241,2202,6.241]],["title/pipes/ReplaceUnderscoresPipe.html",[96,2.911,289,2.052]],["body/pipes/ReplaceUnderscoresPipe.html",[3,0.157,4,0.137,5,0.137,7,0.196,19,0.479,25,1.118,28,0.768,29,0.824,32,1.308,33,0.012,34,0.216,35,0.98,38,0.824,41,1.154,47,0.386,48,0.364,52,0.157,53,0.044,56,0.01,57,0.01,96,5.556,247,1.118,289,3.585,290,4.085,293,5.084,294,5.451,295,5.451,296,5.451,305,3.493,306,5.451,308,5.084,309,1.308,310,1.573,311,5.577,409,3.903,2203,5.577,2204,6.374]],["title/components/RestockReportPopupComponent.html",[12,0.079,97,1.022]],["body/components/RestockReportPopupComponent.html",[3,0.088,4,0.077,5,0.077,7,0.11,12,0.137,19,0.309,20,0.349,25,0.896,28,0.59,29,0.891,33,0.012,34,0.221,38,0.462,39,0.734,40,1.223,41,0.925,45,0.779,47,0.216,48,0.204,52,0.088,53,0.036,56,0.007,57,0.007,62,0.966,71,0.936,72,0.908,75,0.908,76,0.881,77,0.854,78,0.908,79,0.881,80,0.881,81,0.908,82,0.881,84,0.908,85,0.908,86,0.908,87,0.854,88,0.779,89,0.881,90,0.881,91,0.881,92,0.908,93,0.881,94,0.908,97,1.716,98,0.908,99,0.854,100,0.881,101,0.908,102,0.881,103,0.881,104,0.908,119,1.149,122,0.996,125,0.779,128,0.756,130,1.082,132,0.637,134,0.829,144,0.429,151,1.223,152,1.186,154,0.908,156,0.908,158,0.966,160,0.756,161,0.881,182,0.614,187,0.606,189,0.936,194,4.889,195,1.788,196,4.889,200,0.966,223,0.936,224,0.996,232,1.425,233,1.049,234,0.908,235,1.027,241,0.996,247,0.626,248,1.192,249,0.709,252,1.115,260,1.47,261,1.47,262,0.966,263,1.874,264,1.027,265,1.027,266,1.874,267,1.027,268,1.874,269,0.854,270,2.124,271,0.854,272,1.027,273,1.049,274,2.063,275,1.027,276,1.027,277,1.027,278,1.027,279,1.027,280,1.027,281,1.263,282,1.847,283,0.829,284,1.027,285,1.027,286,1.027,287,1.027,288,1.027,327,2.109,328,0.896,334,2.939,335,0.84,343,2.939,345,2.675,359,2.296,360,2.124,361,2.035,363,2.271,381,2.035,390,2.506,391,1.966,393,0.549,394,0.531,405,1.937,414,2.342,415,2.035,416,2.296,417,1.9,418,2.035,419,2.652,421,1.966,422,3.067,423,2.965,425,1.789,426,1.869,427,2.187,428,2.8,429,2.054,430,2.342,431,1.7,432,2.479,433,1.528,434,1.762,435,2.506,436,2.224,437,1.242,438,1.528,441,1.587,442,2.296,443,2.652,444,2.271,446,2.109,453,1.649,455,2.506,460,2.941,461,1.869,462,1.789,465,3.081,468,2.434,487,2.109,489,1.422,523,1.002,577,1.587,578,2.675,579,0.274,580,2.8,584,2.8,586,2.52,587,2.756,588,2.36,590,2.063,591,2.26,592,3.233,593,2.61,594,1.425,595,2.36,596,1.867,597,2.61,598,2.01,599,1.837,600,2.479,601,2.829,602,2.271,603,2.456,604,2.8,605,2.829,606,2.829,607,2.36,609,1.47,610,1.059,611,1.47,612,1.721,613,1.778,614,1.128,615,0.996,616,1.869,617,2.829,618,4.729,621,2.163,622,2.163,623,3.124,624,2.163,625,2.163,626,3.594,627,2.756,628,1.649,629,2.109,630,2.163,631,2.054,632,2.163,633,1.474,634,2.054,635,1.474,636,2.163,637,2.163,639,1.869,640,2.829,641,2.675,642,1.869,643,1.956,644,1.956,645,2.61,646,2.434,647,2.61,648,2.61,649,2.829,650,2.829,651,2.829,652,2.829,653,2.829,654,2.829,655,1.528,656,3.946,657,4.575,658,2.829,659,3.946,660,3.747,661,2.829,662,2.829,665,2.434,666,2.829,667,2.829,668,2.829,669,2.163,670,2.856,1092,3.484,1125,2.109,1227,2.288,1425,2.8,1775,4.471,1776,4.471,1779,3.096,2120,3.484,2205,4.049,2206,4.049,2207,4.049,2208,4.049,2209,3.275,2210,5.162]],["title/interfaces/SalesSummary.html",[579,0.229,1390,2.456]],["body/interfaces/SalesSummary.html",[3,0.046,4,0.04,5,0.04,7,0.058,12,0.108,16,3.411,19,0.353,21,0.12,23,1.008,28,0.739,29,0.243,31,1.029,33,0.012,34,0.207,38,0.513,39,1.076,41,1.055,45,1.38,47,0.353,48,0.107,49,0.575,52,0.046,53,0.022,54,0.961,56,0.004,57,0.004,88,0.867,115,1.08,116,1.029,119,0.252,128,1.339,130,0.977,131,1.556,132,0.961,144,0.225,182,0.942,187,1.383,195,0.841,227,2.421,230,0.983,238,0.54,239,2.651,242,3.77,243,0.492,246,2.313,247,0.329,248,0.261,249,0.261,271,0.449,273,1.659,281,0.977,282,0.699,283,0.922,299,1.493,309,0.385,310,1.685,328,1.022,335,0.308,339,0.374,348,0.494,351,1.248,353,0.612,364,4.751,370,0.743,371,1.035,373,0.79,374,0.362,375,0.374,383,1.329,393,0.289,394,0.279,405,1.529,407,2.048,408,0.983,434,0.508,437,0.653,439,1.013,490,1.434,491,0.722,493,3.31,496,1.08,499,0.612,500,0.941,523,0.938,532,1.38,539,3.93,550,0.941,572,2.273,573,1.38,579,0.327,581,1.702,586,1.615,590,1.819,591,0.575,596,1.559,598,0.632,600,2.097,611,0.893,612,2.686,613,2.648,655,2.189,670,1.237,681,1.137,683,2.883,687,2.571,688,0.867,712,0.983,721,1.029,745,0.748,768,0.54,771,3.354,772,1.353,774,1.885,775,0.612,776,0.866,777,0.575,778,0.524,782,0.903,791,1.237,792,0.941,793,0.941,818,1.882,850,2.957,873,2.894,955,3.265,987,2.655,1052,2.313,1064,0.903,1074,0.983,1125,3.184,1142,1.08,1145,1.426,1146,2.458,1147,2.676,1150,1.38,1154,0.983,1187,4.126,1224,2.922,1242,0.941,1244,0.632,1277,2.803,1296,3.337,1297,1.08,1305,1.882,1306,1.882,1307,1.882,1308,1.882,1328,0.834,1338,1.137,1339,1.786,1340,1.786,1345,1.606,1371,2.406,1372,2.529,1373,2.176,1377,2.176,1378,4.053,1379,1.203,1380,1.203,1381,2.802,1382,1.203,1383,1.203,1384,1.203,1385,1.203,1386,2.958,1387,1.786,1388,3.277,1389,3.737,1390,1.786,1391,1.029,1392,0.941,1393,1.786,1394,1.203,1395,1.029,1396,1.882,1397,1.029,1398,1.203,1399,1.765,1400,1.08,1401,2.958,1402,1.137,1403,0.941,1404,1.203,1405,0.941,1406,4.002,1407,0.941,1408,1.029,1409,1.08,1410,1.08,1411,1.776,1412,1.08,1413,2.958,1414,2.958,1415,1.203,1416,1.203,1417,1.203,1418,1.99,1419,1.203,1420,1.99,1421,1.203,1422,1.99,1423,1.99,1424,1.99,1425,1.702,1426,1.203,1427,1.203,1428,1.203,1429,1.203,1430,1.99,1431,1.203,1432,2.958,1433,1.99,1434,1.99,1435,1.203,1436,1.99,1437,1.203,1438,2.958,1439,1.99,1440,1.08,1441,1.99,1442,1.203,1443,1.203,1444,1.556,1445,1.99,1446,1.99,1447,1.203,1448,1.99,1449,1.99,1450,1.99,1451,2.958,1452,1.99,1453,1.99,1454,1.99,1455,1.99,1456,1.99,1457,2.958,1458,1.99,1459,1.203,1460,1.203,1461,1.203,1462,2.546,1463,1.99,1464,3.53,1465,1.99,1466,1.203,1467,1.203,1468,1.203,1469,1.203,1470,1.203,1471,1.203,1472,1.203,1473,1.203,1474,1.203,1475,1.203,1476,1.203,1477,1.99,1478,2.546,1479,1.203,1480,1.137,1481,1.203,1482,2.546,1483,1.203,1484,1.203,1485,1.203,1486,1.203,1487,1.99,1488,1.99,1489,1.702,1490,1.203,1491,1.203,1492,1.203,1493,1.203,1494,1.99,1495,1.203,1496,1.203,1497,1.203,1498,1.203,1499,1.203,1500,1.203,1501,1.203,1502,1.702,1503,1.702,1504,1.203,1505,1.203,1506,1.99,1507,1.203,1508,1.203,1509,1.203,1510,1.203,1511,1.203,1512,1.203,1513,1.203,1514,2.546,1515,1.203,1516,1.203,1517,3.168,1518,1.203,1519,1.786,1520,1.786,1521,1.786,1522,1.203,1523,2.546,1524,3.337,1525,1.203,1526,2.958,1527,1.08,1528,1.99,1529,1.99,1530,1.08,1531,1.08,1532,2.285,1533,1.08,1534,1.203,1535,1.99,1536,1.203,1537,1.203,1538,1.203,1539,4.51,1540,3.737,1541,3.737,1542,1.203,1543,1.203,1544,1.203,1545,1.203,1546,1.203,1547,1.08,1548,1.203,1549,0.941,1550,0.941,1551,0.903,1552,0.903,1553,1.203,1554,1.203,1555,2.546,1556,1.203,1557,3.349,1558,1.99,1559,4.074,1560,3.53,1561,1.203,1562,3.737,1563,3.337,1564,1.203,1565,3.53,1566,1.203,1567,3.53,1568,1.203,1569,1.203,1570,1.203,1571,1.029,1572,1.203,1573,4.176,1574,3.737,1575,2.546,1576,1.203,1577,1.702,1578,3.53,1579,1.203,1580,1.203,1581,1.203,1582,0.903,1583,1.99,1584,1.203,1585,1.203,1586,1.203,1587,1.203,1588,2.546,1589,1.203,1590,1.203,1591,1.203,1592,1.203,1593,1.203,1594,1.99,1595,1.203,1596,1.203,1597,1.203,1598,1.203,1599,2.958,1600,2.958,1601,1.203,1602,1.203,1603,1.203,1604,1.203,1605,2.655,1606,1.203,1607,1.203,1608,1.203,1609,1.203,1610,1.203,1611,1.203,1612,1.203,1613,1.203,1614,1.203,1615,1.203,1616,1.203,1617,2.958,1618,3.53,1619,1.99,1620,1.203,1621,1.203,1622,1.203,1623,1.203,1624,1.203,1625,3.277,1626,3.277,1627,1.203,1628,1.203,1629,1.203,1630,1.203,1631,1.203,1632,1.203,1633,1.203,1634,1.203,1635,1.203,1636,1.643,1950,1.643]],["title/components/SeasonalItemPopupComponent.html",[12,0.079,98,1.086]],["body/components/SeasonalItemPopupComponent.html",[3,0.075,4,0.066,5,0.066,7,0.14,12,0.12,16,2.381,19,0.438,20,0.292,21,0.292,23,0.665,25,0.798,28,0.754,29,1.028,32,1.24,33,0.012,34,0.279,35,0.7,38,0.836,39,0.974,40,1.729,41,1.308,45,1.787,47,0.33,48,0.174,52,0.075,53,0.032,54,0.679,56,0.006,57,0.006,62,0.824,71,0.799,72,0.775,75,0.775,76,0.752,77,0.729,78,0.775,79,0.752,80,0.752,81,0.775,82,0.752,84,0.775,85,0.775,86,0.775,87,0.729,88,0.665,89,0.752,90,0.752,91,0.752,92,0.775,93,0.752,94,0.775,97,0.729,98,1.837,99,0.729,100,0.752,101,0.775,102,0.752,103,0.752,104,0.775,119,1.134,122,0.85,125,0.665,128,0.645,130,0.963,132,1.029,134,0.707,144,0.366,151,1.089,152,1.056,154,0.775,156,0.775,158,0.824,160,0.645,161,0.752,182,1.049,187,1.254,189,0.799,195,0.645,200,0.824,205,6.346,206,6.346,223,0.799,224,0.85,227,1.06,232,1.269,233,0.934,234,0.775,235,0.876,239,1.484,241,0.85,243,1.193,247,0.534,248,1.177,249,0.631,252,0.993,256,2.187,260,1.309,261,1.309,262,0.824,263,1.737,264,0.876,265,0.876,266,1.737,267,0.876,268,1.737,269,0.729,270,2.021,271,0.729,272,0.876,273,0.625,274,1.95,275,0.876,276,0.876,277,0.876,278,0.876,279,0.876,280,0.876,281,0.645,282,0.686,283,1.881,284,0.876,285,0.876,286,0.876,287,0.876,288,0.876,295,3.326,296,3.326,298,1.257,299,1.464,310,1.123,328,1.133,332,4.108,335,0.748,339,1.202,345,2.381,348,0.866,359,2.487,360,2.211,361,2.406,370,1.445,373,0.905,374,0.877,375,0.905,379,1.636,381,1.812,390,1.172,391,2.095,393,0.468,394,0.453,396,0.824,405,1.843,414,1.958,415,1.213,416,1.75,417,1.133,418,1.213,419,1.75,421,1.75,422,2.686,423,2.521,425,1.527,426,1.595,428,2.493,429,1.752,430,1.636,431,1.024,432,1.636,435,1.75,436,1.519,442,1.172,446,1.878,455,1.75,460,2.169,465,2.686,487,1.257,489,1.213,503,4.787,532,2.684,534,3.549,577,1.354,579,0.244,586,2.042,587,2.515,588,2.101,589,3.31,592,1.948,612,1.026,614,1.437,615,0.85,621,1.846,622,1.846,623,2.381,624,1.846,625,1.846,626,2.729,627,2.101,628,1.407,629,1.257,630,1.846,631,1.752,632,1.846,633,1.257,634,1.752,635,1.257,636,1.846,637,1.846,656,2.756,657,3.659,659,2.756,660,2.617,669,1.846,670,3.19,684,2.665,712,1.595,718,2.414,773,1.095,774,1.767,776,0.85,777,0.933,778,0.85,850,1.213,873,1.213,910,2.414,920,2.414,921,2.414,926,3.715,944,2.414,1053,3.102,1054,3.715,1055,3.102,1144,1.669,1145,1.96,1146,3.473,1148,2.414,1150,3.013,1176,2.414,1180,2.665,1182,2.414,1183,2.414,1227,1.952,1229,2.414,1232,3.715,1242,3.027,1299,3.606,1440,1.752,1517,3.132,1519,1.752,1520,1.752,1521,1.752,1527,2.617,1530,2.617,1531,1.752,1533,2.617,1605,2.617,1797,4.956,1823,2.916,2125,4.764,2126,4.764,2127,4.764,2128,4.764,2129,4.764,2130,4.764,2131,4.764,2132,4.764,2133,3.981,2135,2.665,2139,3.981,2141,3.981,2148,2.665,2150,2.665,2151,2.665,2152,3.981,2153,2.665,2154,2.665,2155,2.665,2156,2.665,2157,2.665,2158,3.981,2159,2.665,2160,2.665,2161,2.665,2162,2.665,2163,2.665,2164,2.665,2165,2.665,2166,2.665,2167,2.665,2168,2.665,2169,2.665,2170,2.665,2171,2.665,2172,2.665,2173,2.665,2174,2.665,2175,2.665,2176,2.665,2177,2.665,2178,2.665,2179,2.665,2180,2.665,2181,2.665,2182,2.665,2183,2.665,2184,2.665,2185,2.227,2186,2.665,2191,2.665,2192,2.665,2193,2.665,2211,4.55,2212,3.046,2213,4.55,2214,3.046,2215,3.046,2216,4.55,2217,3.046,2218,3.606,2219,3.046,2220,3.046,2221,3.046,2222,3.046]],["title/components/ShoppingCartComponent.html",[12,0.079,99,1.022]],["body/components/ShoppingCartComponent.html",[3,0.061,4,0.054,5,0.054,7,0.12,8,2.25,11,2.25,12,0.135,17,1.37,19,0.38,20,0.351,21,0.251,23,1.291,25,0.686,28,0.568,29,1.015,32,0.803,33,0.012,34,0.25,35,0.838,38,0.877,39,0.901,40,1.304,41,0.987,45,1.052,47,0.38,48,0.143,49,0.765,52,0.061,53,0.027,54,0.679,56,0.005,57,0.005,62,0.676,71,0.656,72,0.636,75,0.636,76,0.617,77,0.598,78,0.636,79,0.617,80,0.617,81,0.636,82,0.617,84,0.636,85,0.636,86,0.636,87,0.598,88,0.546,89,0.617,90,0.617,91,0.617,92,0.636,93,0.617,94,0.636,97,0.598,98,0.636,99,1.501,100,0.617,101,0.636,102,0.617,103,0.617,104,0.636,119,1.113,122,0.697,125,0.546,128,0.529,130,0.828,132,0.782,133,1.155,134,1.919,135,1.253,138,3.151,139,1.37,141,0.962,144,0.3,151,1.501,152,1.575,154,1.226,156,1.226,158,0.676,160,1.02,161,1.189,182,0.873,187,0.664,189,1.907,190,5.389,195,0.529,200,0.676,223,0.656,224,0.697,227,1.676,232,1.091,233,0.803,234,0.636,235,0.719,238,1.568,240,2.507,241,0.697,245,2.25,247,0.438,248,1.156,249,0.543,252,0.854,260,1.125,261,1.125,262,0.676,263,1.568,264,0.719,265,0.719,266,1.568,267,0.719,268,1.568,269,1.768,270,1.885,271,0.598,272,0.719,273,0.513,274,1.804,275,0.719,276,0.719,277,0.719,278,0.719,279,0.719,280,0.719,281,0.529,282,0.563,283,0.58,284,0.719,285,0.719,286,0.719,287,0.719,288,0.719,304,3.422,305,2.986,310,0.965,328,1.275,329,2.25,330,3.1,331,2.859,332,3.302,333,3.493,335,0.643,336,2.188,338,4.02,339,1.084,340,3.984,341,3.984,342,3.1,343,2.25,344,1.792,345,2.048,346,3.522,347,3.522,348,0.398,349,2.188,354,1.153,355,3.302,359,2.522,360,2.046,361,2.171,363,2.422,366,2.859,368,2.507,369,3.6,370,1.74,371,1.004,373,0.778,374,1.051,375,1.084,376,2.772,378,1.705,381,1.558,382,2.507,383,1.674,385,2.667,387,2.25,389,2.37,390,1.505,391,1.854,392,1.515,393,0.384,394,0.372,396,0.676,397,1.828,398,2.127,399,1.828,400,2.859,401,1.828,402,2.772,403,1.602,404,1.438,405,1.719,407,2.818,408,2.522,409,2.048,410,2.143,411,2.507,412,3.1,413,3.135,414,2.255,415,0.996,416,2.097,417,0.93,418,2.356,419,2.797,421,2.276,422,2.2,423,2.523,424,3.422,427,2.532,430,2.357,431,1.636,432,2.357,433,1.674,434,1.6,435,1.505,436,1.989,437,0.87,439,1.777,440,1.438,441,2.422,442,2.413,443,2.629,444,2.629,445,1.828,446,2.442,448,2.859,452,2.316,453,1.807,455,2.097,458,2.522,460,2.778,465,2.652,466,2.188,468,2.667,470,4.216,471,2.188,472,1.981,473,4.216,475,3.1,476,3.1,477,1.981,478,1.981,479,1.981,480,2.188,481,1.981,482,2.507,484,2.188,485,3.1,486,2.188,489,2.171,494,3.1,509,2.171,511,2.356,516,2.37,524,1.602,525,2.919,567,2.25,572,2.25,573,1.738,576,4.789,579,0.21,582,2.25,586,2.254,590,1.951,591,1.475,592,2.333,594,1.52,595,2.897,596,1.814,598,1.992,599,1.96,600,2.508,602,1.738,603,1.881,604,2.143,607,2.517,609,1.125,610,0.742,611,1.125,612,2.112,613,2.182,614,0.79,615,0.697,623,2.048,629,2.442,633,1.032,635,1.032,639,2.048,641,1.309,642,1.309,664,1.981,688,1.807,743,1.705,753,1.602,764,1.253,776,1.091,778,1.091,779,1.407,791,1.558,850,1.558,853,3.971,873,1.558,922,1.881,955,1.111,970,1.981,999,2.188,1014,2.188,1024,1.515,1037,1.828,1043,1.438,1166,1.438,1173,1.602,1251,1.881,1252,1.96,1256,1.515,1257,2.37,1258,1.515,1271,2.919,1272,1.438,1273,1.37,1274,1.438,1283,1.515,1391,1.37,1392,1.253,1399,2.629,1403,2.415,1405,2.415,1407,2.415,1444,1.253,1489,1.37,1502,1.37,1503,1.37,1549,1.253,1550,1.253,1551,1.202,1552,1.202,1557,1.253,1559,1.253,1582,1.202,1699,2.667,1722,2.507,1816,2.667,1823,1.602,1834,2.37,1850,1.705,2015,3.422,2082,3.135,2084,1.602,2096,3.088,2197,2.859,2223,1.828,2224,3.1,2225,3.1,2226,3.1,2227,3.1,2228,3.819,2229,3.1,2230,3.819,2231,3.285,2232,3.819,2233,3.716,2234,3.716,2235,3.716,2236,3.912,2237,2.5,2238,2.5,2239,2.5,2240,2.5,2241,2.5,2242,3.1,2243,3.1,2244,2.859,2245,2.667,2246,2.5,2247,2.5,2248,2.5,2249,3.1,2250,2.5,2251,2.5,2252,2.5,2253,2.5,2254,2.5,2255,2.5,2256,2.5,2257,2.5,2258,1.705,2259,3.1,2260,3.1,2261,1.981,2262,2.667,2263,1.981,2264,1.705,2265,1.705,2266,1.981,2267,1.981,2268,1.981,2269,2.667,2270,1.981,2271,1.705,2272,1.705,2273,3.1,2274,1.705,2275,1.981,2276,1.705,2277,1.705,2278,1.981,2279,1.981,2280,2.5,2281,2.5,2282,2.5,2283,2.5,2284,2.5,2285,5.45,2286,3.912,2287,3.912,2288,3.912,2289,2.5,2290,2.5,2291,2.5,2292,2.5,2293,2.5]],["title/components/SignatureMilkTeaMenuComponent.html",[12,0.079,100,1.053]],["body/components/SignatureMilkTeaMenuComponent.html",[3,0.077,4,0.067,5,0.067,7,0.188,12,0.121,19,0.414,20,0.167,21,0.297,25,0.811,28,0.684,29,0.915,32,0.949,33,0.012,34,0.27,35,0.711,38,0.598,39,0.877,40,1.461,41,1.105,47,0.28,48,0.178,52,0.077,53,0.032,54,0.577,56,0.006,57,0.006,62,0.842,71,0.817,72,0.792,75,0.792,76,0.768,77,0.745,78,0.792,79,0.768,80,0.768,81,0.792,82,0.768,84,0.792,85,0.792,86,0.792,87,0.745,88,0.68,89,0.768,90,0.768,91,0.768,92,0.792,93,0.768,94,0.792,97,0.745,98,0.792,99,0.745,100,1.794,101,0.792,102,0.768,103,0.768,104,0.792,119,1.137,122,0.869,125,0.68,128,0.659,130,0.979,132,1.061,134,1.281,144,0.374,151,2.045,152,1.989,154,2.068,155,5.314,156,1.403,158,0.842,160,1.168,161,1.361,182,0.982,187,0.529,189,0.817,195,0.659,200,0.842,223,0.817,224,0.869,232,1.29,233,0.949,234,0.792,235,0.896,241,0.869,247,0.546,248,1.179,249,0.642,252,1.01,260,1.33,261,1.33,262,0.842,263,1.756,264,0.896,265,0.896,266,1.756,267,0.896,268,1.756,269,0.745,270,2.036,271,0.745,272,0.896,273,0.639,274,1.966,275,0.896,276,0.896,277,0.896,278,0.896,279,0.896,280,0.896,281,0.659,282,0.701,283,0.723,284,0.896,285,0.896,286,0.896,287,0.896,288,0.896,298,1.285,309,0.949,328,1.433,335,0.76,339,1.215,344,2.051,348,0.877,351,1.251,354,1.32,357,3.157,370,1.461,371,0.529,373,1.298,374,0.892,375,0.92,379,2.614,393,0.479,394,0.463,396,0.842,398,1.663,405,1.793,409,2.421,410,2.534,414,1.663,415,1.842,416,2.51,417,2.051,418,2.432,419,2.858,421,1.779,422,2.426,423,2.27,427,2.926,430,2.545,431,1.726,432,2.908,433,2.614,434,1.651,435,2.349,436,1.703,437,1.92,438,1.98,439,1.016,440,1.791,441,3.145,442,2.797,443,2.714,444,2.714,446,1.285,450,3.699,452,3.571,453,2.136,455,2.723,456,1.887,457,2.802,458,2.421,459,2.802,460,2.723,461,2.421,462,2.765,465,2.542,487,1.285,489,1.842,490,1.438,491,1.779,499,1.016,523,1.218,579,0.248,591,0.953,594,2.028,596,1.777,609,0.896,610,0.924,614,1.461,615,0.869,627,2.136,628,1.438,629,1.285,633,1.285,635,1.285,639,2.421,641,2.421,642,1.63,643,1.706,644,1.706,673,2.223,764,1.561,772,0.723,773,1.984,774,1.461,775,1.016,776,0.869,777,0.953,778,0.869,779,1.663,780,1.285,880,1.887,887,1.497,922,2.223,973,1.706,983,1.791,1001,1.887,1006,1.791,1007,1.887,1019,2.802,1144,1.706,1145,2.071,1231,1.497,1233,2.765,1234,2.318,1235,2.652,1236,2.964,1238,2.055,1240,1.909,1244,1.049,1248,1.384,1251,2.223,1252,2.318,1253,2.66,1254,2.964,1255,1.996,1256,1.887,1257,3.699,1258,1.887,1259,1.996,1260,1.996,1261,1.996,1262,1.996,1263,1.996,1264,1.996,1265,1.996,1266,1.996,1267,1.887,1268,1.996,1269,1.996,1270,1.887,1271,2.802,1272,1.791,1273,1.706,1274,1.791,1275,1.996,1276,3.343,1277,1.497,1278,2.964,1279,1.996,1280,1.996,1281,1.996,1345,1.609,1411,1.198,1669,2.136,1719,3.153,1851,3.173,1861,2.223,1864,2.66,1865,2.66,1869,5.762,1870,2.276,1871,3.381,1872,2.725,1873,2.725,1874,1.791,2294,4.625,2295,3.114,2296,3.114,2297,2.468,2298,2.725,2299,2.468]],["title/components/SignupButtonComponent.html",[12,0.079,101,1.086]],["body/components/SignupButtonComponent.html",[3,0.109,4,0.096,5,0.096,7,0.183,12,0.151,19,0.406,20,0.238,21,0.459,25,1.043,29,0.925,32,0.913,33,0.012,34,0.202,35,0.684,37,3.259,38,0.769,39,1.028,47,0.36,48,0.254,52,0.109,53,0.042,54,0.554,56,0.008,57,0.008,62,1.202,71,1.166,72,1.131,75,1.131,76,1.097,77,1.064,78,1.131,79,1.097,80,1.097,81,1.131,82,1.097,84,1.131,85,1.131,86,1.131,87,1.064,88,0.971,89,1.097,90,1.097,91,1.097,92,1.131,93,1.097,94,1.131,97,1.064,98,1.131,99,1.064,100,1.097,101,2.027,102,1.097,103,1.097,104,1.131,119,1.166,122,1.24,125,0.971,128,0.941,130,1.259,132,0.741,134,1.032,143,2.137,144,0.86,151,1.423,152,1.381,154,1.131,156,1.131,158,1.202,160,0.941,161,1.097,164,5.912,182,0.714,187,0.755,189,1.166,195,0.941,200,1.202,223,1.166,224,1.24,232,1.659,233,0.913,234,1.131,235,1.279,237,3.031,239,2.334,241,1.996,242,2.86,243,1.166,244,3.856,247,1.043,248,1.208,249,0.826,250,4.348,251,4.536,259,4.088,260,1.711,261,1.711,262,1.202,263,2.059,264,1.279,265,1.279,266,2.059,267,1.279,268,2.059,269,1.064,270,2.255,271,1.064,272,1.279,273,0.913,274,2.208,275,1.279,276,1.279,277,1.928,278,1.279,279,1.279,280,1.279,281,0.941,282,1.001,283,1.032,284,1.279,285,2.345,286,1.279,287,1.279,288,1.279,309,1.221,316,3.421,339,1.424,348,1.066,373,1.484,374,1.147,375,1.183,383,2.546,393,0.684,497,2.86,500,3.359,523,0.915,536,4.57,539,2.981,541,4.056,579,0.319,598,2.003,614,1.879,673,2.86,715,4.88,725,3.259,730,2.85,787,4.348,1328,1.976,1400,3.421,1411,2.579,1412,2.557,1699,4.056,1700,5.501,1701,4.714,1702,5.204,1705,6.717,1706,3.89,1708,4.348,1710,5.204,1712,3.89,1713,3.524,1716,3.89,1718,6.97,1720,5.204,2120,4.57,2244,5.823,2300,6.527,2301,5.948,2302,5.948,2303,5.948,2304,5.948,2305,4.446,2306,5.948,2307,6.703,2308,5.948,2309,5.948,2310,4.446,2311,5.948,2312,5.948,2313,4.446]],["title/components/SlushMenuComponent.html",[12,0.079,102,1.053]],["body/components/SlushMenuComponent.html",[3,0.08,4,0.07,5,0.07,7,0.192,12,0.123,19,0.421,20,0.174,21,0.306,25,0.837,28,0.691,29,0.898,32,0.98,33,0.012,34,0.27,35,0.734,38,0.617,39,0.896,40,1.354,41,1.025,47,0.289,48,0.186,52,0.08,53,0.033,54,0.595,56,0.007,57,0.007,62,0.88,71,0.853,72,0.827,75,0.827,76,0.803,77,0.778,78,0.827,79,0.803,80,0.803,81,0.827,82,0.803,84,0.827,85,0.827,86,0.827,87,0.778,88,0.71,89,0.803,90,0.803,91,0.803,92,0.827,93,0.803,94,0.827,97,0.778,98,0.827,99,0.778,100,0.803,101,0.827,102,1.816,103,0.803,104,0.827,119,1.141,122,0.907,125,0.71,128,0.689,130,1.011,132,1.067,134,1.314,144,0.391,151,1.662,152,1.709,154,1.44,156,2.1,157,5.246,158,0.88,160,1.198,161,1.396,182,0.987,187,0.552,189,0.853,195,0.689,200,0.88,223,0.853,224,0.907,232,1.332,233,0.98,234,0.827,235,0.936,241,0.907,247,0.57,248,1.183,249,0.663,252,1.043,260,1.374,261,1.374,262,0.88,263,1.794,264,0.936,265,0.936,266,1.794,267,0.936,268,1.794,269,0.778,270,2.064,271,0.778,272,0.936,273,0.668,274,1.997,275,0.936,276,0.936,277,0.936,278,0.936,279,0.936,280,0.936,281,0.689,282,0.732,283,0.755,284,0.936,285,0.936,286,0.936,287,0.936,288,0.936,298,1.343,309,0.98,328,1.453,335,0.785,339,1.241,344,2.104,348,0.9,351,1.292,354,1.354,357,3.207,370,1.492,371,0.552,373,1.322,374,0.921,375,0.95,379,2.647,393,0.5,394,0.484,396,0.88,398,1.717,405,1.882,409,2.5,410,2.617,414,1.717,415,1.902,416,2.556,417,2.104,418,2.484,419,2.89,421,1.837,422,2.47,423,2.319,425,1.63,426,1.703,427,2.972,430,2.581,431,1.743,432,2.927,433,2.67,434,1.687,435,2.399,436,1.739,437,1.969,438,2.044,439,1.061,440,1.871,441,3.189,442,2.832,443,2.771,444,2.771,446,1.343,450,3.778,452,3.612,453,2.206,455,2.761,456,1.971,457,2.894,458,2.5,459,2.894,460,2.766,461,2.5,462,2.836,465,2.582,487,1.343,489,1.902,490,1.502,491,1.837,499,1.061,523,1.068,579,0.256,591,0.996,594,1.937,596,1.59,609,0.936,610,0.965,614,1.028,615,0.907,627,2.206,628,2.206,629,1.343,633,1.343,635,1.343,639,2.5,641,2.5,642,1.703,643,1.782,644,1.782,673,2.296,764,1.63,772,0.755,773,2.035,774,1.492,775,1.061,776,0.907,777,0.996,778,0.907,779,1.717,780,1.343,880,1.971,887,1.564,922,2.296,973,1.782,983,1.871,1001,1.971,1006,1.871,1007,1.971,1019,2.894,1144,1.782,1145,2.095,1231,1.564,1233,2.836,1234,2.394,1235,2.721,1236,3.061,1238,2.122,1240,1.971,1244,1.095,1248,1.445,1251,2.296,1252,2.394,1253,2.747,1254,3.061,1255,2.085,1256,1.971,1257,3.778,1258,1.971,1259,2.085,1260,2.085,1261,2.085,1262,2.085,1263,2.085,1264,2.085,1265,2.085,1266,2.085,1267,1.971,1268,2.085,1269,2.085,1270,1.971,1271,2.894,1272,1.871,1273,1.782,1274,1.871,1275,2.085,1276,3.429,1277,1.564,1278,3.061,1279,2.085,1280,2.085,1281,2.085,1345,1.662,1411,1.251,1669,2.206,1719,3.256,1849,2.747,1851,3.255,1861,2.296,1864,2.747,1865,2.747,1874,1.871,1875,5.688,1876,2.378,1877,2.378,2032,2.846,2297,2.578,2298,4.179,2299,2.578,2314,3.253,2315,3.253,2316,3.253]],["title/components/SmoothieMenuComponent.html",[12,0.079,103,1.053]],["body/components/SmoothieMenuComponent.html",[3,0.081,4,0.071,5,0.071,7,0.193,12,0.124,14,3.279,19,0.422,20,0.305,21,0.308,25,0.843,28,0.693,29,0.862,32,0.987,33,0.012,34,0.269,35,0.739,38,0.622,39,0.9,40,1.151,41,0.87,47,0.291,48,0.187,52,0.081,53,0.034,54,0.709,56,0.007,57,0.007,62,0.888,71,0.861,72,0.835,75,0.835,76,0.81,77,0.786,78,0.835,79,0.81,80,0.81,81,0.835,82,0.81,84,0.835,85,0.835,86,0.835,87,0.786,88,0.717,89,0.81,90,0.81,91,0.81,92,0.835,93,0.81,94,0.835,97,0.786,98,0.835,99,0.786,100,0.81,101,0.835,102,0.81,103,1.821,104,0.835,119,1.142,122,0.916,125,0.717,128,0.695,130,1.018,132,1.071,134,1.321,144,0.394,151,1.667,152,1.713,154,1.447,156,1.447,158,2.161,159,5.092,160,1.204,161,1.404,182,0.989,187,0.557,189,0.861,195,0.695,200,0.888,223,0.861,224,0.916,232,1.341,233,0.987,234,0.835,235,0.944,241,0.916,247,0.576,248,1.184,249,0.667,252,1.05,260,1.383,261,1.383,262,0.888,263,1.802,264,0.944,265,0.944,266,1.802,267,0.944,268,1.802,269,0.786,270,2.07,271,0.786,272,0.944,273,0.674,274,2.004,275,0.944,276,0.944,277,0.944,278,0.944,279,0.944,280,0.944,281,0.695,282,0.739,283,0.762,284,0.944,285,0.944,286,0.944,287,0.944,288,0.944,298,1.355,309,0.987,326,2.766,327,1.985,328,1.443,335,0.79,339,1.246,344,2.116,348,0.905,351,1.3,354,1.362,357,3.218,370,1.499,371,0.557,373,1.327,374,0.927,375,0.957,379,2.654,393,0.505,394,0.488,396,0.888,398,1.729,405,1.827,409,2.517,410,2.635,414,1.729,415,1.915,416,2.565,417,2.116,418,2.495,419,2.897,421,1.85,422,2.479,423,2.329,427,2.982,430,2.588,431,1.746,432,2.931,433,2.681,434,1.694,435,2.41,436,1.747,437,1.98,438,2.058,439,1.071,440,1.888,441,3.199,442,2.84,443,2.784,444,2.784,446,1.355,450,3.795,452,3.62,453,2.221,455,2.769,456,1.989,457,2.913,458,2.517,459,2.913,460,2.775,461,2.517,462,2.852,465,2.591,487,1.355,489,1.915,490,1.516,491,1.85,499,1.071,523,1.025,532,1.459,579,0.258,591,1.005,594,1.747,596,1.362,609,0.944,610,0.974,614,1.037,615,0.916,627,2.221,628,1.516,629,1.355,633,1.355,635,1.355,639,2.517,641,2.517,642,1.718,643,1.799,644,1.799,764,1.645,772,0.762,773,2.046,774,1.499,775,1.071,776,0.916,777,1.005,778,0.916,779,1.729,780,1.355,880,1.989,887,1.578,922,3.349,973,1.799,983,1.888,1001,1.989,1006,1.888,1007,1.989,1019,2.913,1144,1.799,1145,2.1,1231,1.578,1233,2.852,1234,2.41,1235,1.578,1236,3.082,1238,2.137,1240,1.985,1244,1.106,1248,1.459,1251,2.312,1252,2.41,1253,2.766,1254,3.082,1255,2.104,1256,1.989,1257,3.795,1258,1.989,1259,2.104,1260,2.104,1261,2.104,1262,2.104,1263,2.104,1264,2.104,1265,2.104,1266,2.104,1267,1.989,1268,2.104,1269,2.104,1270,1.989,1271,2.913,1272,1.888,1273,1.799,1274,1.888,1275,2.104,1276,3.447,1277,1.578,1278,3.082,1279,2.104,1280,2.104,1281,2.104,1345,1.673,1411,1.263,1669,2.221,1849,2.766,1851,3.273,1861,2.312,1864,2.766,1865,2.766,1866,3.515,1874,1.888,1877,2.4,1879,5.521,1880,2.4,1881,2.872,1882,2.872,1883,2.872,1965,2.872,2297,3.811,2299,2.602,2317,3.283]],["title/interfaces/TableColumn.html",[579,0.229,611,1.228]],["body/interfaces/TableColumn.html",[1,3.232,3,0.071,4,0.063,5,0.063,7,0.089,9,3.232,11,2.525,12,0.142,19,0.419,20,0.156,21,0.378,23,1.454,28,0.683,31,1.592,33,0.012,34,0.278,37,2.405,38,0.375,39,1.047,45,0.634,47,0.45,48,0.166,49,0.889,52,0.071,53,0.031,54,1.009,56,0.006,57,0.006,76,1.455,118,1.76,119,0.389,128,1.248,129,2.123,132,1.036,133,1.342,134,1.605,135,1.456,138,3.044,139,1.592,141,1.117,144,0.527,151,1.05,152,1.228,154,0.739,156,1.346,160,0.615,161,0.717,182,0.954,227,2.203,234,0.739,238,0.835,243,1.151,247,0.509,248,0.403,249,0.403,269,1.266,309,0.596,310,1.083,327,1.199,328,1.449,335,0.477,338,1.862,339,0.578,344,1.08,348,0.462,351,1.595,353,1.726,354,1.977,355,1.76,360,1.923,368,1.862,369,2.544,370,1.411,371,0.898,373,1.053,374,0.56,375,0.578,379,1.903,383,1.243,387,1.671,388,3.479,389,3.573,392,1.76,394,0.432,396,0.786,398,2.277,402,2.525,403,1.862,404,3.044,405,1.547,407,2.476,411,2.813,431,1.788,434,1.801,439,1.432,497,1.396,498,2.66,499,0.947,509,2.108,511,2.108,513,1.396,516,4.035,523,1.095,525,2.66,550,1.456,567,2.525,572,1.812,573,1.291,579,0.284,586,0.918,590,1.522,596,1.946,598,2.694,599,2.856,600,2.91,609,1.522,610,1.303,611,1.522,612,2.329,613,2.317,614,1.387,687,2.269,725,1.592,745,2.108,753,1.862,761,1.862,768,1.263,779,1.903,782,1.396,791,1.749,792,1.456,793,1.456,850,2.836,853,2.66,873,2.349,922,2.544,926,2.9,955,1.951,1038,1.76,1064,1.396,1145,1.645,1152,4.541,1155,3.479,1166,2.525,1173,1.862,1232,1.592,1235,1.396,1238,1.291,1240,3.066,1244,0.978,1245,1.98,1247,2.123,1248,3.164,1251,1.396,1252,2.652,1310,2.123,1328,1.951,1345,1.841,1346,2.123,1392,1.456,1395,1.592,1399,2.352,1403,1.456,1405,1.456,1407,1.456,1411,1.117,1444,1.456,1539,1.671,1557,1.456,1559,1.456,1722,1.862,1724,2.302,1789,1.862,1796,2.123,1798,2.123,1811,3.209,1812,4.629,1813,2.813,1814,2.993,1815,2.123,1816,5.633,1818,2.123,1819,2.123,1820,2.123,1822,2.123,1823,2.813,1824,3.868,1825,2.123,1826,2.123,1827,2.123,1829,2.123,1830,2.123,1834,2.66,1835,2.123,1836,4.311,1837,2.123,1838,3.209,1839,3.209,1840,3.209,1841,2.123,1853,2.123,1861,1.396,1862,3.209,1867,2.123,1868,3.209,1870,2.123,1871,2.123,1874,1.671,1876,2.123,1880,2.123,1885,2.302,1963,5.019,1970,2.302,1995,2.302,2034,2.302,2082,2.525,2084,2.813,2096,2.813,2185,2.123,2218,3.479,2231,1.98,2233,1.98,2234,1.98,2235,2.993,2245,1.98,2258,1.98,2262,1.98,2264,1.98,2265,1.98,2269,1.98,2271,1.98,2272,1.98,2274,1.98,2276,1.98,2277,1.98,2318,2.302,2319,3.841,2320,2.541,2321,2.541,2322,2.541,2323,2.541,2324,2.541,2325,2.541,2326,2.541,2327,2.541,2328,2.541,2329,2.541,2330,2.541,2331,2.541,2332,2.541,2333,2.541,2334,2.541,2335,3.841,2336,2.541,2337,2.541,2338,2.541,2339,2.541,2340,2.541,2341,2.541,2342,2.541,2343,2.541,2344,2.541,2345,3.841,2346,2.302,2347,2.541,2348,3.841,2349,3.841,2350,3.841,2351,3.841,2352,3.841,2353,3.841,2354,3.841,2355,2.541,2356,3.841,2357,2.541,2358,2.541,2359,2.541,2360,2.541,2361,2.541,2362,2.541,2363,2.302,2364,2.541,2365,2.541,2366,2.541,2367,3.841,2368,2.541,2369,2.541,2370,2.541,2371,2.541,2372,2.541,2373,3.841,2374,3.841,2375,3.841,2376,2.541,2377,2.541,2378,2.541,2379,2.541,2380,2.541,2381,2.541]],["title/interfaces/TableColumn-1.html",[439,1.169,579,0.192,611,1.031]],["body/interfaces/TableColumn-1.html",[3,0.046,4,0.04,5,0.04,7,0.058,12,0.108,16,3.407,19,0.353,20,0.1,21,0.254,23,1.005,28,0.744,31,1.025,33,0.012,34,0.221,38,0.512,39,1.075,41,1.054,45,1.379,47,0.353,48,0.107,49,0.573,52,0.046,53,0.022,54,0.961,56,0.004,57,0.004,88,0.865,115,1.076,116,1.025,119,0.251,128,1.337,130,0.975,131,0.938,132,0.961,144,0.225,182,0.941,187,1.383,195,0.839,227,2.418,230,0.979,238,0.538,239,2.65,242,3.768,243,0.491,246,2.308,247,0.328,248,0.26,249,0.26,271,0.448,273,1.658,281,0.975,282,0.697,283,0.92,299,1.489,309,0.384,310,1.683,328,1.021,335,0.307,339,0.372,348,0.492,351,1.246,353,0.61,364,4.748,370,0.741,371,0.988,373,0.788,374,0.361,375,0.372,383,1.326,393,0.288,394,0.278,405,1.527,407,2.045,408,0.979,434,0.838,437,0.651,439,1.01,490,1.43,491,0.72,493,3.306,496,1.076,499,0.61,500,0.938,523,0.936,532,1.376,539,3.928,550,0.938,572,2.27,573,1.376,579,0.327,581,1.025,586,1.612,590,1.817,591,0.573,596,1.598,598,0.63,600,2.093,611,1.14,612,2.704,613,2.713,655,2.184,670,0.745,681,1.134,683,2.878,687,2.568,688,0.864,712,0.979,721,1.025,745,0.745,768,0.538,771,3.349,772,1.351,774,1.884,775,0.61,776,0.864,777,0.573,778,0.522,782,0.899,791,1.234,792,0.938,793,0.938,818,1.876,850,2.954,873,2.891,955,3.262,987,2.649,1052,2.308,1064,0.899,1074,0.979,1125,3.182,1142,1.076,1145,1.423,1146,2.453,1147,2.671,1150,1.376,1154,0.979,1187,4.122,1224,2.918,1242,0.938,1244,0.63,1277,2.799,1296,3.332,1297,1.076,1305,1.876,1306,1.876,1307,1.876,1308,1.876,1328,0.831,1338,1.134,1339,1.781,1340,1.781,1345,1.602,1371,2.401,1372,2.524,1373,2.171,1377,2.171,1378,4.048,1379,1.199,1380,1.199,1381,2.796,1382,1.199,1383,1.199,1384,1.199,1385,1.199,1386,3.524,1387,1.781,1388,2.952,1389,3.524,1390,1.076,1391,1.025,1392,0.938,1393,1.781,1394,1.199,1395,1.025,1396,1.876,1397,1.025,1398,1.199,1399,1.761,1400,1.076,1401,2.952,1402,1.134,1403,0.938,1404,1.199,1405,0.938,1406,3.998,1407,0.938,1408,1.025,1409,1.076,1410,1.076,1411,1.772,1412,1.076,1413,2.952,1414,2.952,1415,1.199,1416,1.199,1417,1.199,1418,1.985,1419,1.199,1420,1.985,1421,1.199,1422,1.985,1423,1.985,1424,1.985,1425,1.697,1426,1.199,1427,1.199,1428,1.199,1429,1.199,1430,1.985,1431,1.199,1432,2.952,1433,1.985,1434,1.985,1435,1.199,1436,1.985,1437,1.199,1438,2.952,1439,1.985,1440,1.076,1441,1.985,1442,1.199,1443,1.199,1444,1.552,1445,1.985,1446,1.985,1447,1.199,1448,1.985,1449,1.985,1450,1.985,1451,2.952,1452,1.985,1453,1.985,1454,1.985,1455,1.985,1456,1.985,1457,2.952,1458,1.985,1459,1.199,1460,1.199,1461,1.199,1462,2.539,1463,1.985,1464,3.524,1465,1.985,1466,1.199,1467,1.199,1468,1.199,1469,1.199,1470,1.199,1471,1.199,1472,1.199,1473,1.199,1474,1.199,1475,1.199,1476,1.199,1477,1.985,1478,2.539,1479,1.199,1480,1.134,1481,1.199,1482,2.539,1483,1.199,1484,1.199,1485,1.199,1486,1.199,1487,1.985,1488,1.985,1489,1.697,1490,1.199,1491,1.199,1492,1.199,1493,1.199,1494,1.985,1495,1.199,1496,1.199,1497,1.199,1498,1.199,1499,1.199,1500,1.199,1501,1.199,1502,1.697,1503,1.697,1504,1.199,1505,1.199,1506,1.985,1507,1.199,1508,1.199,1509,1.199,1510,1.199,1511,1.199,1512,1.199,1513,1.199,1514,2.539,1515,1.199,1516,1.199,1517,3.163,1518,1.199,1519,1.781,1520,1.781,1521,1.781,1522,1.199,1523,2.539,1524,3.332,1525,1.199,1526,2.952,1527,1.076,1528,1.985,1529,1.985,1530,1.076,1531,1.076,1532,2.279,1533,1.076,1534,1.199,1535,1.985,1536,1.199,1537,1.199,1538,1.199,1539,4.508,1540,3.731,1541,3.731,1542,1.199,1543,1.199,1544,1.199,1545,1.199,1546,1.199,1547,1.076,1548,1.199,1549,0.938,1550,0.938,1551,0.899,1552,0.899,1553,1.199,1554,1.199,1555,2.539,1556,1.199,1557,3.346,1558,1.985,1559,4.072,1560,3.524,1561,1.199,1562,3.731,1563,3.332,1564,1.199,1565,3.524,1566,1.199,1567,3.524,1568,1.199,1569,1.199,1570,1.199,1571,1.025,1572,1.199,1573,4.171,1574,3.731,1575,2.539,1576,1.199,1577,1.697,1578,3.524,1579,1.199,1580,1.199,1581,1.199,1582,0.899,1583,1.985,1584,1.199,1585,1.199,1586,1.199,1587,1.199,1588,2.539,1589,1.199,1590,1.199,1591,1.199,1592,1.199,1593,1.199,1594,1.985,1595,1.199,1596,1.199,1597,1.199,1598,1.199,1599,2.952,1600,2.952,1601,1.199,1602,1.199,1603,1.199,1604,1.199,1605,2.649,1606,1.199,1607,1.199,1608,1.199,1609,1.199,1610,1.199,1611,1.199,1612,1.199,1613,1.199,1614,1.199,1615,1.199,1616,1.199,1617,2.952,1618,3.524,1619,1.985,1620,1.199,1621,1.199,1622,1.199,1623,1.199,1624,1.199,1625,3.271,1626,3.271,1627,1.199,1628,1.199,1629,1.199,1630,1.199,1631,1.199,1632,1.199,1633,1.199,1634,1.199,1635,1.199]],["title/interfaces/TableColumn-2.html",[413,2.062,579,0.192,611,1.031]],["body/interfaces/TableColumn-2.html",[3,0.099,4,0.086,5,0.086,7,0.123,8,2.305,12,0.142,17,2.195,19,0.243,20,0.341,21,0.355,23,1.387,28,0.704,33,0.012,34,0.188,38,0.518,45,1.387,47,0.451,48,0.229,49,1.227,52,0.099,53,0.039,54,0.854,56,0.008,57,0.008,99,1.326,119,0.537,132,0.499,133,1.851,134,1.903,135,2.008,138,3.295,139,2.195,141,1.541,144,0.481,182,0.823,187,0.68,189,1.887,190,2.732,227,2.21,233,0.822,238,1.594,240,2.568,245,2.305,248,0.769,249,0.556,252,0.875,269,1.64,310,1.367,328,1.305,329,2.305,331,2.929,332,2.427,333,3.552,335,0.658,338,2.568,339,0.797,340,2.929,341,2.929,344,1.49,346,2.929,347,2.929,354,1.326,355,3.357,359,2.768,360,2.072,361,2.207,363,2.463,366,2.929,368,2.568,369,3.578,370,1.722,371,0.941,373,0.797,374,1.069,375,1.103,376,3.187,378,2.732,381,1.596,382,2.568,383,1.715,385,2.732,387,2.305,389,2.427,390,2.132,391,2.444,392,2.427,393,0.616,394,0.596,396,1.084,397,2.929,398,2.587,399,2.929,400,4.051,401,2.929,402,3.654,403,2.568,404,2.305,405,1.798,407,2.935,408,2.097,431,1.43,434,2.013,436,1.912,439,1.807,509,2.207,511,2.531,524,2.568,525,3.849,567,3.187,572,2.829,573,2.463,576,2.427,579,0.297,582,3.187,586,2.41,590,1.972,591,1.696,592,2.372,594,1.545,595,2.934,596,1.889,598,2.14,599,1.993,600,2.676,602,1.781,603,1.926,604,2.195,607,2.56,609,1.827,610,1.644,611,1.827,612,2.619,613,2.705,614,1.266,615,1.117,688,1.851,743,2.732,753,2.568,768,1.152,776,1.117,778,1.117,791,1.596,850,1.596,853,4.153,873,1.596,955,1.781,1024,2.427,1037,2.929,1043,2.305,1166,2.305,1173,2.568,1283,2.427,1392,2.008,1399,3.046,1403,2.008,1405,2.008,1407,2.008,1444,2.008,1489,2.195,1502,2.195,1503,2.195,1549,2.008,1550,2.008,1551,1.926,1552,1.926,1557,2.008,1559,2.008,1699,2.732,1722,3.552,1834,2.427,1850,2.732,2082,3.187,2084,2.568,2096,4.072,2197,4.051,2223,2.929,2224,3.175,2225,3.175,2226,3.175,2227,3.175,2228,3.175,2229,3.175,2230,3.175,2231,2.732,2232,3.175,2233,2.732,2234,2.732,2235,3.778,2242,3.175,2243,3.175,2244,2.929,2245,2.732,2249,3.175,2258,2.732,2259,4.392,2260,4.392,2261,3.175,2262,3.778,2263,3.175,2264,2.732,2265,2.732,2266,3.175,2267,3.175,2268,3.175,2269,3.778,2270,3.175,2271,2.732,2272,2.732,2273,4.392,2274,2.732,2275,3.175,2276,2.732,2277,2.732,2278,3.175,2279,3.175]],["title/interfaces/TableColumn-3.html",[579,0.192,611,1.031,1848,2.841]],["body/interfaces/TableColumn-3.html",[3,0.127,4,0.111,5,0.111,7,0.159,12,0.151,20,0.277,21,0.42,28,0.735,33,0.012,34,0.222,39,1.089,45,1.655,47,0.313,48,0.295,52,0.127,53,0.046,54,0.817,56,0.009,57,0.009,87,1.569,119,0.692,130,1.525,131,2.587,144,0.62,171,3.519,187,1.113,238,1.886,243,1.72,247,0.905,248,0.716,249,0.716,273,1.479,281,1.525,298,2.13,327,2.13,334,2.969,335,0.848,352,2.969,353,1.683,359,3.01,360,2.472,361,2.056,363,2.294,381,2.612,390,2.916,391,3.01,393,0.794,394,0.767,431,1.162,434,2.163,436,2.009,491,3.255,523,1.108,577,2.294,578,2.702,579,0.352,584,2.828,586,2.526,587,2.384,588,2.384,589,2.828,590,2.072,591,2.007,592,3.084,594,1.44,595,2.384,596,2.014,598,2.208,599,1.856,600,2.726,602,2.294,603,2.481,607,2.384,609,2.072,610,1.945,611,2.072,612,2.693,613,2.782,614,1.631,616,2.702,655,3.084,665,3.519,670,2.056,671,3.773,672,3.519,677,3.519,688,3.501,768,1.485,1064,2.481,1154,2.702,1397,2.828,1571,2.828,1577,2.828,1763,4.091,1766,4.091,1768,4.091,1769,4.091,1772,4.091,1773,4.091,1774,4.091]],["title/interfaces/TableColumn-4.html",[482,2.297,579,0.192,611,1.031]],["body/interfaces/TableColumn-4.html",[3,0.136,4,0.119,5,0.119,7,0.17,12,0.148,20,0.296,21,0.439,28,0.754,33,0.012,34,0.232,39,0.794,45,1.207,47,0.335,48,0.315,52,0.136,53,0.048,56,0.009,57,0.009,77,1.638,119,0.741,144,0.664,203,3.769,204,3.769,233,1.135,248,0.95,249,0.767,252,1.207,269,1.973,328,1.2,335,0.908,359,2.633,360,2.232,361,2.202,363,2.457,369,3.574,381,2.202,390,3.072,391,2.633,393,0.85,394,0.822,405,1.45,431,1.541,434,2.2,436,2.073,576,3.349,577,2.457,578,2.894,579,0.399,580,3.029,581,3.029,582,3.18,583,5.424,584,3.029,585,3.769,586,2.523,587,2.553,588,2.553,589,3.029,590,2.138,591,2.095,592,3.182,594,1.542,595,2.553,596,1.947,598,2.305,599,1.988,600,2.794,602,2.457,603,2.658,604,3.029,607,2.553,609,2.138,610,2.031,611,2.138,612,2.74,613,2.83,614,1.746,615,1.542,616,2.894,768,1.59]],["title/interfaces/TableColumn-5.html",[579,0.192,611,1.031,887,1.723]],["body/interfaces/TableColumn-5.html",[3,0.135,4,0.118,5,0.118,7,0.169,12,0.148,20,0.294,21,0.437,28,0.745,33,0.012,34,0.231,39,0.788,45,1.198,47,0.332,48,0.313,52,0.135,53,0.048,56,0.009,57,0.009,97,1.63,119,0.735,144,0.659,194,3.741,195,1.776,196,3.741,233,1.126,248,0.946,249,0.762,252,1.198,281,1.162,282,1.888,327,2.265,334,3.156,335,0.902,359,2.621,360,2.222,361,2.186,363,2.439,381,2.186,390,2.981,391,2.621,393,0.844,394,0.816,431,1.235,434,2.196,436,2.066,523,0.844,577,2.439,578,2.872,579,0.365,580,3.007,584,3.007,586,2.566,587,2.535,588,2.535,590,2.131,591,2.086,592,3.172,594,1.53,595,2.535,596,1.97,598,2.295,599,1.973,600,2.786,602,2.439,603,2.638,604,3.007,607,2.535,609,2.131,610,2.021,611,2.131,612,2.735,613,2.825,614,1.734,615,1.53,616,2.872,670,2.186,768,1.578,1092,3.741,1125,2.265,1425,3.007,1779,3.325,2120,3.741,2205,4.349,2206,4.349,2207,4.349,2208,4.349,2209,3.517,2210,4.349]],["title/interfaces/TableConfig.html",[579,0.229,590,1.228]],["body/interfaces/TableConfig.html",[1,3.237,3,0.072,4,0.063,5,0.063,7,0.09,9,3.237,11,2.531,12,0.142,19,0.419,20,0.156,21,0.379,23,1.456,28,0.627,31,1.597,33,0.012,34,0.277,37,2.412,38,0.377,39,1.048,45,0.636,47,0.45,48,0.166,49,0.892,52,0.072,53,0.031,54,1.009,56,0.006,57,0.006,76,1.458,118,1.766,119,0.39,128,1.251,129,2.13,132,1.037,133,1.346,134,1.607,135,1.461,138,3.049,139,1.597,141,1.121,144,0.529,151,1.053,152,1.231,154,0.741,156,1.349,160,0.617,161,0.719,182,0.955,227,2.206,234,0.741,238,0.838,243,1.154,247,0.511,248,0.404,249,0.404,269,1.269,309,0.598,310,1.086,327,1.203,328,1.449,335,0.479,338,1.868,339,0.58,344,1.084,348,0.463,351,1.598,353,1.729,354,1.978,355,1.766,360,1.927,368,1.868,369,2.549,370,1.414,371,0.9,373,1.055,374,0.562,375,0.58,379,1.907,383,1.248,387,1.676,388,3.488,389,3.579,392,1.766,394,0.433,396,0.788,398,2.28,402,2.531,403,1.868,404,3.05,405,1.549,407,2.48,411,2.821,431,1.789,434,1.434,439,1.435,497,1.401,498,2.666,499,0.951,509,2.112,511,2.112,513,1.401,516,4.04,523,1.096,525,2.666,550,1.461,567,2.531,572,1.817,573,1.295,579,0.284,586,0.921,590,1.699,596,1.956,598,2.712,599,2.858,600,2.972,609,1.525,610,0.865,611,1.699,612,1.786,613,1.531,614,1.675,687,2.273,725,1.597,745,2.112,753,1.868,761,1.868,768,1.266,779,1.907,782,1.401,791,2.112,792,1.461,793,1.461,850,2.839,853,2.666,873,2.353,922,2.549,926,2.906,955,1.956,1038,1.766,1064,1.401,1145,1.648,1152,4.547,1155,3.488,1166,2.531,1173,1.868,1232,1.597,1235,1.401,1238,1.295,1240,3.069,1244,0.982,1245,1.987,1247,2.13,1248,3.168,1251,1.401,1252,2.657,1310,2.13,1328,1.956,1345,1.845,1346,2.13,1392,1.461,1395,1.597,1399,2.356,1403,1.461,1405,1.461,1407,1.461,1411,1.121,1444,1.461,1539,1.676,1557,1.461,1559,1.461,1722,1.868,1724,2.31,1789,1.868,1796,2.13,1798,2.13,1811,3.217,1812,4.636,1813,2.821,1814,3.001,1815,2.13,1816,5.636,1818,2.13,1819,2.13,1820,2.13,1822,2.13,1823,2.821,1824,3.876,1825,2.13,1826,2.13,1827,2.13,1829,2.13,1830,2.13,1834,2.666,1835,2.13,1836,4.318,1837,2.13,1838,3.217,1839,3.217,1840,3.217,1841,2.13,1853,2.13,1861,1.401,1862,3.217,1867,2.13,1868,3.217,1870,2.13,1871,2.13,1874,1.676,1876,2.13,1880,2.13,1885,2.31,1963,5.026,1970,2.31,1995,2.31,2034,2.31,2082,2.531,2084,2.821,2096,2.821,2185,2.13,2218,2.31,2231,1.987,2233,1.987,2234,1.987,2235,3.001,2245,1.987,2258,1.987,2262,1.987,2264,1.987,2265,1.987,2269,1.987,2271,1.987,2272,1.987,2274,1.987,2276,1.987,2277,1.987,2318,2.31,2319,4.639,2320,2.55,2321,2.55,2322,2.55,2323,2.55,2324,2.55,2325,2.55,2326,2.55,2327,2.55,2328,2.55,2329,2.55,2330,2.55,2331,2.55,2332,2.55,2333,2.55,2334,2.55,2335,3.851,2336,2.55,2337,2.55,2338,2.55,2339,2.55,2340,2.55,2341,2.55,2342,2.55,2343,2.55,2344,2.55,2345,3.851,2346,2.31,2347,2.55,2348,3.851,2349,3.851,2350,3.851,2351,3.851,2352,3.851,2353,3.851,2354,3.851,2355,2.55,2356,3.851,2357,2.55,2358,2.55,2359,2.55,2360,2.55,2361,2.55,2362,2.55,2363,2.31,2364,2.55,2365,2.55,2366,2.55,2367,3.851,2368,2.55,2369,2.55,2370,2.55,2371,2.55,2372,2.55,2373,3.851,2374,3.851,2375,3.851,2376,2.55,2377,2.55,2378,2.55,2379,2.55,2380,2.55,2381,2.55]],["title/interfaces/TableConfig-1.html",[439,1.169,579,0.192,590,1.031]],["body/interfaces/TableConfig-1.html",[3,0.046,4,0.04,5,0.04,7,0.058,12,0.108,16,3.41,19,0.353,20,0.101,21,0.255,23,1.007,28,0.738,31,1.028,33,0.012,34,0.214,38,0.513,39,1.076,41,1.055,45,1.38,47,0.353,48,0.107,49,0.574,52,0.046,53,0.022,54,0.961,56,0.004,57,0.004,88,0.867,115,1.079,116,1.028,119,0.251,128,1.338,130,0.977,131,0.94,132,0.961,144,0.225,182,0.942,187,1.383,195,0.84,227,2.42,230,0.982,238,0.54,239,2.651,242,3.769,243,0.492,246,2.312,247,0.329,248,0.26,249,0.26,271,0.449,273,1.659,281,0.977,282,0.699,283,0.921,299,1.492,309,0.385,310,1.685,328,1.022,335,0.308,339,0.373,348,0.494,351,1.248,353,0.612,364,4.75,370,0.743,371,0.989,373,0.79,374,0.362,375,0.373,383,1.329,393,0.289,394,0.279,405,1.529,407,2.048,408,0.982,434,0.507,437,0.653,439,1.012,490,1.434,491,0.722,493,3.309,496,1.079,499,0.612,500,0.94,523,0.938,532,1.379,539,3.929,550,0.94,572,2.273,573,1.379,579,0.327,581,1.028,586,1.615,590,1.874,591,0.95,596,1.599,598,1.045,600,2.343,611,1.327,612,2.665,613,2.648,655,2.188,670,0.747,681,1.137,683,2.882,687,2.571,688,0.867,712,0.982,721,1.028,745,0.747,768,0.54,771,3.353,772,1.353,774,1.885,775,0.612,776,0.866,777,0.574,778,0.523,782,0.902,791,1.236,792,0.94,793,0.94,818,1.881,850,2.956,873,2.893,955,3.265,987,2.654,1052,2.312,1064,0.902,1074,0.982,1125,3.183,1142,1.079,1145,1.425,1146,2.457,1147,2.675,1150,1.379,1154,0.982,1187,4.125,1224,2.921,1242,0.94,1244,0.632,1277,2.802,1296,3.336,1297,1.079,1305,1.881,1306,1.881,1307,1.881,1308,1.881,1328,0.834,1338,1.137,1339,1.785,1340,1.785,1345,1.605,1371,2.405,1372,2.528,1373,2.175,1377,2.175,1378,4.052,1379,1.202,1380,1.202,1381,2.801,1382,1.202,1383,1.202,1384,1.202,1385,1.989,1386,2.957,1387,1.785,1388,2.957,1389,3.529,1390,1.079,1391,1.028,1392,0.94,1393,1.785,1394,1.202,1395,1.028,1396,1.881,1397,1.028,1398,1.202,1399,1.764,1400,1.079,1401,2.957,1402,1.137,1403,0.94,1404,1.202,1405,0.94,1406,4.001,1407,0.94,1408,1.028,1409,1.079,1410,1.079,1411,1.775,1412,1.079,1413,2.957,1414,2.957,1415,1.202,1416,1.202,1417,1.202,1418,1.989,1419,1.202,1420,1.989,1421,1.202,1422,1.989,1423,1.989,1424,1.989,1425,1.701,1426,1.202,1427,1.202,1428,1.202,1429,1.202,1430,1.989,1431,1.202,1432,2.957,1433,1.989,1434,1.989,1435,1.202,1436,1.989,1437,1.202,1438,2.957,1439,1.989,1440,1.079,1441,1.989,1442,1.202,1443,1.202,1444,1.556,1445,1.989,1446,1.989,1447,1.202,1448,1.989,1449,1.989,1450,1.989,1451,2.957,1452,1.989,1453,1.989,1454,1.989,1455,1.989,1456,1.989,1457,2.957,1458,1.989,1459,1.202,1460,1.202,1461,1.202,1462,2.544,1463,1.989,1464,3.529,1465,1.989,1466,1.202,1467,1.202,1468,1.202,1469,1.202,1470,1.202,1471,1.202,1472,1.202,1473,1.202,1474,1.202,1475,1.202,1476,1.202,1477,1.989,1478,2.544,1479,1.202,1480,1.137,1481,1.202,1482,2.544,1483,1.202,1484,1.202,1485,1.202,1486,1.202,1487,1.989,1488,1.989,1489,1.701,1490,1.202,1491,1.202,1492,1.202,1493,1.202,1494,1.989,1495,1.202,1496,1.202,1497,1.202,1498,1.202,1499,1.202,1500,1.202,1501,1.202,1502,1.701,1503,1.701,1504,1.202,1505,1.202,1506,1.989,1507,1.202,1508,1.202,1509,1.202,1510,1.202,1511,1.202,1512,1.202,1513,1.202,1514,2.544,1515,1.202,1516,1.202,1517,3.167,1518,1.202,1519,1.785,1520,1.785,1521,1.785,1522,1.202,1523,2.544,1524,3.336,1525,1.202,1526,2.957,1527,1.079,1528,1.989,1529,1.989,1530,1.079,1531,1.079,1532,2.284,1533,1.079,1534,1.202,1535,1.989,1536,1.202,1537,1.202,1538,1.202,1539,4.51,1540,3.736,1541,3.736,1542,1.202,1543,1.202,1544,1.202,1545,1.202,1546,1.202,1547,1.079,1548,1.202,1549,0.94,1550,0.94,1551,0.902,1552,0.902,1553,1.202,1554,1.202,1555,2.544,1556,1.202,1557,3.349,1558,1.989,1559,4.073,1560,3.529,1561,1.202,1562,3.736,1563,3.336,1564,1.202,1565,3.529,1566,1.202,1567,3.529,1568,1.202,1569,1.202,1570,1.202,1571,1.028,1572,1.202,1573,4.175,1574,3.736,1575,2.544,1576,1.202,1577,1.701,1578,3.529,1579,1.202,1580,1.202,1581,1.202,1582,0.902,1583,1.989,1584,1.202,1585,1.202,1586,1.202,1587,1.202,1588,2.544,1589,1.202,1590,1.202,1591,1.202,1592,1.202,1593,1.202,1594,1.989,1595,1.202,1596,1.202,1597,1.202,1598,1.202,1599,2.957,1600,2.957,1601,1.202,1602,1.202,1603,1.202,1604,1.202,1605,2.654,1606,1.202,1607,1.202,1608,1.202,1609,1.202,1610,1.202,1611,1.202,1612,1.202,1613,1.202,1614,1.202,1615,1.202,1616,1.202,1617,2.957,1618,3.529,1619,1.989,1620,1.202,1621,1.202,1622,1.202,1623,1.202,1624,1.202,1625,3.276,1626,3.276,1627,1.202,1628,1.202,1629,1.202,1630,1.202,1631,1.202,1632,1.202,1633,1.202,1634,1.202,1635,1.202]],["title/interfaces/TableConfig-2.html",[413,2.062,579,0.192,590,1.031]],["body/interfaces/TableConfig-2.html",[3,0.099,4,0.087,5,0.087,7,0.124,8,2.314,12,0.142,17,2.204,19,0.244,20,0.341,21,0.356,23,1.39,28,0.622,33,0.012,34,0.136,38,0.52,45,1.39,47,0.451,48,0.23,49,1.232,52,0.099,53,0.039,54,0.856,56,0.008,57,0.008,99,1.33,119,0.539,132,0.501,133,1.858,134,1.916,135,2.016,138,3.301,139,2.204,141,1.548,144,0.483,182,0.825,187,0.683,189,1.954,190,2.743,227,2.215,233,0.826,238,1.598,240,2.578,245,2.314,248,0.771,249,0.558,252,0.878,269,1.643,310,1.371,328,1.306,329,2.314,331,2.941,332,2.437,333,3.561,335,0.661,338,2.578,339,0.8,340,2.941,341,2.941,344,1.496,346,2.941,347,2.941,354,1.33,355,3.367,359,2.772,360,2.076,361,2.214,363,2.469,366,2.941,368,2.578,369,3.582,370,1.724,371,0.943,373,0.8,374,1.072,375,1.106,376,3.196,378,2.743,381,1.602,382,2.578,383,1.722,385,2.743,387,2.314,389,2.437,390,2.138,391,2.449,392,2.437,393,0.619,394,0.598,396,1.088,397,2.941,398,2.591,399,2.941,400,4.062,401,2.941,402,3.662,403,2.578,404,2.314,405,1.801,407,2.938,408,2.106,431,1.433,434,1.722,436,1.915,439,1.812,509,2.214,511,2.536,524,2.578,525,3.857,567,3.196,572,2.834,573,2.469,576,2.437,579,0.298,582,3.196,586,2.413,590,2.073,591,1.701,592,2.379,594,1.55,595,2.941,596,1.914,598,2.312,599,1.998,600,2.905,602,1.788,603,1.934,604,2.204,607,2.567,609,1.831,610,1.194,611,1.975,612,2.312,613,2.389,614,1.756,615,1.122,688,1.858,743,2.743,753,2.578,768,1.157,776,1.122,778,1.122,791,1.602,850,1.602,853,4.16,873,1.602,955,1.788,1024,2.437,1037,2.941,1043,2.314,1166,2.314,1173,2.578,1283,2.437,1392,2.016,1399,3.051,1403,2.016,1405,2.016,1407,2.016,1444,2.016,1489,2.204,1502,2.204,1503,2.204,1549,2.016,1550,2.016,1551,1.934,1552,1.934,1557,2.016,1559,2.016,1699,2.743,1722,3.561,1834,2.437,1850,2.743,2082,3.196,2084,2.578,2096,4.08,2197,4.062,2223,2.941,2224,3.188,2225,3.188,2226,3.188,2227,3.188,2228,3.188,2229,3.188,2230,3.188,2231,2.743,2232,3.188,2233,2.743,2234,2.743,2235,3.789,2242,3.188,2243,3.188,2244,2.941,2245,2.743,2249,3.188,2258,2.743,2259,4.404,2260,4.404,2261,3.188,2262,3.789,2263,3.188,2264,2.743,2265,2.743,2266,3.188,2267,3.188,2268,3.188,2269,3.789,2270,3.188,2271,2.743,2272,2.743,2273,4.404,2274,2.743,2275,3.188,2276,2.743,2277,2.743,2278,3.188,2279,3.188]],["title/interfaces/TableConfig-3.html",[579,0.192,590,1.031,1848,2.841]],["body/interfaces/TableConfig-3.html",[3,0.128,4,0.112,5,0.112,7,0.16,12,0.151,20,0.278,21,0.422,28,0.654,33,0.012,34,0.176,39,1.091,45,1.658,47,0.314,48,0.296,52,0.128,53,0.046,54,0.82,56,0.009,57,0.009,87,1.574,119,0.695,130,1.529,131,2.6,144,0.623,171,3.538,187,1.117,238,1.892,243,1.725,247,0.91,248,0.72,249,0.72,273,1.482,281,1.529,298,2.142,327,2.142,334,2.984,335,0.853,352,2.984,353,1.692,359,3.015,360,2.477,361,2.067,363,2.306,381,2.62,390,2.922,391,3.015,393,0.798,394,0.771,431,1.168,434,1.953,436,2.014,491,3.257,523,1.111,577,2.306,578,2.716,579,0.353,584,2.843,586,2.569,587,2.397,588,2.397,589,2.843,590,2.184,591,2.014,592,3.092,594,1.447,595,2.397,596,2.026,598,2.432,599,1.866,600,2.987,602,2.306,603,2.494,607,2.397,609,2.077,610,1.539,611,2.184,612,2.215,613,2.289,614,2.078,616,2.716,655,3.092,665,3.538,670,2.067,671,3.793,672,3.538,677,3.538,688,3.508,768,1.492,1064,2.494,1154,2.716,1397,3.604,1571,2.843,1577,2.843,1763,4.112,1766,4.112,1768,4.112,1769,4.112,1772,4.112,1773,4.112,1774,4.112]],["title/interfaces/TableConfig-4.html",[482,2.297,579,0.192,590,1.031]],["body/interfaces/TableConfig-4.html",[3,0.137,4,0.12,5,0.12,7,0.171,12,0.149,20,0.298,21,0.44,28,0.705,33,0.012,34,0.188,39,0.799,45,1.213,47,0.337,48,0.317,52,0.137,53,0.048,56,0.009,57,0.009,77,1.643,119,0.745,144,0.668,203,3.79,204,3.79,233,1.141,248,0.953,249,0.771,252,1.213,269,1.996,328,1.204,335,0.913,359,2.642,360,2.24,361,2.214,363,2.47,369,3.583,381,2.214,390,3.077,391,2.642,393,0.855,394,0.826,405,1.458,431,1.546,434,2.016,436,2.078,576,3.368,577,2.47,578,2.91,579,0.4,580,3.046,581,3.046,582,3.197,583,5.443,584,3.046,585,3.79,586,2.574,587,2.568,588,2.568,589,3.046,590,2.239,591,2.102,592,3.19,594,1.55,595,2.568,596,1.976,598,2.51,599,1.999,600,3.023,602,2.47,603,2.672,604,3.046,607,2.568,609,2.144,610,1.649,611,2.239,612,2.313,613,2.389,614,2.17,615,1.55,616,2.91,768,1.599]],["title/interfaces/TableConfig-5.html",[579,0.192,590,1.031,887,1.723]],["body/interfaces/TableConfig-5.html",[3,0.136,4,0.119,5,0.119,7,0.17,12,0.148,20,0.296,21,0.439,28,0.673,33,0.012,34,0.187,39,0.794,45,1.206,47,0.335,48,0.315,52,0.136,53,0.048,56,0.009,57,0.009,97,1.637,119,0.74,144,0.663,194,3.766,195,1.778,196,3.766,233,1.133,248,0.949,249,0.766,252,1.206,281,1.169,282,1.89,327,2.28,334,3.177,335,0.908,359,2.632,360,2.231,361,2.2,363,2.454,381,2.2,390,2.988,391,2.632,393,0.849,394,0.821,431,1.243,434,2.01,436,2.072,523,0.849,577,2.454,578,2.891,579,0.367,580,3.026,584,3.026,586,2.605,587,2.551,588,2.551,590,2.234,591,2.094,592,3.181,594,1.54,595,2.551,596,1.993,598,2.503,599,1.986,600,3.02,602,2.454,603,2.655,604,3.026,607,2.551,609,2.137,610,1.639,611,2.234,612,2.304,613,2.38,614,2.161,615,1.54,616,2.891,670,2.2,768,1.589,1092,3.766,1125,2.28,1425,3.026,1779,3.346,2120,3.766,2205,4.377,2206,4.377,2207,4.377,2208,4.377,2209,3.54,2210,4.377]],["title/classes/TeamMember.html",[53,0.03,2382,3.383]],["body/classes/TeamMember.html",[3,0.154,4,0.135,5,0.135,7,0.192,19,0.475,20,0.335,21,0.503,28,0.733,29,1.013,33,0.012,34,0.266,35,1.287,52,0.154,53,0.044,56,0.01,57,0.01,371,1.251,609,1.797,722,6.7,772,1.71,1022,3.423,2346,6.417,2382,5.841,2383,5.466,2384,7.397,2385,6.248,2386,7.839,2387,7.839,2388,7.839,2389,7.839,2390,6.248,2391,6.248,2392,6.248]],["title/injectables/TeamMemberService.html",[0,1.307,2393,3.383]],["body/injectables/TeamMemberService.html",[0,2.154,2,2.672,3,0.142,4,0.125,5,0.125,7,0.216,19,0.35,20,0.31,21,0.451,23,1.656,25,1.384,29,0.98,32,1.187,33,0.012,34,0.196,35,0.889,38,0.91,40,1.384,41,1.047,44,3.462,47,0.478,48,0.33,49,1.771,50,2.781,51,2.781,52,0.142,53,0.04,54,0.721,56,0.01,57,0.01,58,3.856,141,2.225,145,2.899,147,3.169,243,1.846,310,1.427,348,1.206,357,3.25,379,2.53,396,1.564,508,2.899,509,3.276,511,3.222,513,3.383,523,1.214,564,3.856,722,6.659,1036,4.781,1040,4.363,1043,4.048,1045,5.144,1047,4.51,1048,3.327,1167,5.577,1345,2.448,2384,7.196,2393,6.518,2394,5.06,2395,7.892,2396,7.037,2397,5.784,2398,7.037,2399,7.037]],["title/components/WeatherComponent.html",[12,0.079,104,1.086]],["body/components/WeatherComponent.html",[3,0.113,4,0.099,5,0.099,7,0.187,12,0.147,19,0.412,20,0.246,21,0.389,25,1.064,28,0.415,29,0.936,32,0.94,33,0.012,34,0.231,35,0.705,38,0.592,39,0.872,40,1.097,41,0.829,45,1,47,0.412,48,0.262,52,0.113,53,0.042,54,0.571,56,0.008,57,0.008,62,1.239,71,1.202,72,1.166,75,1.166,76,1.131,77,1.097,78,1.166,79,1.131,80,1.131,81,1.166,82,1.131,84,1.166,85,1.166,86,1.166,87,1.097,88,1,89,1.131,90,1.131,91,1.131,92,1.166,93,1.131,94,1.166,97,1.097,98,1.166,99,1.097,100,1.131,101,1.166,102,1.131,103,1.131,104,2.04,119,1.168,122,1.278,125,1,128,0.97,130,1.285,132,0.756,134,1.063,141,1.763,144,0.55,151,1.452,152,1.409,154,1.166,156,1.166,158,1.239,160,0.97,161,1.131,182,0.729,187,1.03,189,1.202,195,0.97,200,1.239,223,1.202,224,1.278,227,2.111,232,1.692,233,1.245,234,1.166,235,1.318,241,1.278,247,0.803,248,1.211,249,0.842,252,1.325,256,2.917,260,1.746,261,1.746,262,1.239,263,2.084,264,1.318,265,1.318,266,2.084,267,1.318,268,2.084,269,1.097,270,2.272,271,1.097,272,1.318,273,0.94,274,2.227,275,1.318,276,1.318,277,1.318,278,1.318,279,1.318,280,1.318,281,0.97,282,1.031,283,1.063,284,1.318,285,1.318,286,2.376,287,1.318,288,1.318,289,2.203,309,1.245,310,1.131,326,3.491,327,2.505,335,0.997,339,1.441,345,3.177,348,1.082,359,2.618,373,1.499,374,1.17,375,1.207,376,2.636,391,2.335,393,0.705,394,0.681,396,1.239,508,2.296,509,3.084,511,3.002,512,4.138,513,2.917,523,1.26,572,1.891,591,2.307,594,1.692,596,1.452,615,1.278,755,4.009,964,5.295,1036,3.677,1045,4.436,1052,3.63,1076,4.009,1240,2.505,1328,2.036,1701,4.809,1986,5.31,2400,4.009,2401,6.069,2402,6.069,2403,6.805,2404,6.069,2405,6.805,2406,6.069,2407,4.582,2408,4.582,2409,4.582,2410,4.582,2411,4.582,2412,4.582,2413,4.582,2414,4.582,2415,4.582,2416,4.582,2417,4.582,2418,4.582,2419,4.582,2420,4.582]],["title/coverage.html",[2421,5.064]],["body/coverage.html",[0,2.481,1,2.138,5,0.084,6,3.414,12,0.16,33,0.012,34,0.132,45,0.852,53,0.054,56,0.008,57,0.008,71,1.024,72,0.993,73,2.661,74,2.661,75,0.993,76,0.963,77,0.934,78,0.993,79,0.963,80,0.963,81,0.993,82,0.963,83,2.364,84,0.993,85,0.993,86,0.993,87,0.934,88,0.852,89,0.963,90,0.963,91,0.963,92,0.993,93,0.963,94,0.993,95,2.661,96,2.661,97,0.934,98,0.993,99,0.934,100,0.963,101,0.993,102,0.963,103,0.963,104,0.993,123,3.093,126,2.853,129,4.579,131,3.983,132,0.486,133,3.13,135,2.727,138,1.876,145,2.727,149,3.093,151,1.622,152,1.793,153,3.977,155,3.977,157,3.977,159,3.977,161,1.672,162,3.977,164,3.093,166,3.093,170,3.093,171,4.271,176,3.977,179,3.71,181,3.093,182,0.814,183,3.093,184,3.093,185,3.093,186,3.093,187,0.924,188,3.093,190,4.271,194,4.271,195,1.562,196,4.271,198,2.661,201,2.853,203,4.271,204,4.271,205,3.093,206,3.093,223,1.024,225,3.093,236,3.414,237,4.621,289,3.426,291,3.414,292,3.414,315,3.414,324,4.312,325,3.414,354,1.849,422,3.283,474,3.414,485,3.093,495,3.414,576,4.472,577,3.629,579,0.459,590,2.123,596,0.934,611,2.123,670,3.324,713,3.414,714,3.414,767,2.853,769,4.472,770,4.312,774,0.934,781,3.414,782,3.925,786,2.661,805,2.661,1023,3.414,1032,3.093,1033,3.414,1049,2.661,1050,4.579,1051,3.414,1070,2.661,1117,3.093,1118,3.414,1119,3.414,1125,1.611,1145,1.088,1146,1.876,1147,2.043,1227,2.501,1230,4.312,1231,3.861,1282,3.414,1288,3.093,1289,3.414,1294,3.414,1295,3.414,1309,3.414,1336,3.414,1344,3.414,1370,3.414,1377,2.138,1381,2.138,1387,2.245,1390,2.245,1393,2.245,1408,2.138,1638,3.414,1657,3.414,1658,3.414,1693,2.661,1698,3.414,1717,3.414,1747,3.414,1777,3.414,1787,4.312,1863,4.312,1869,4.312,1875,4.312,1879,4.312,1919,3.414,1969,3.414,2046,3.414,2047,3.414,2061,3.414,2062,3.414,2074,3.414,2082,2.245,2083,3.414,2108,3.414,2194,3.414,2203,3.414,2223,4.579,2300,3.414,2318,4.965,2363,3.093,2382,3.093,2383,3.414,2393,3.093,2394,3.414,2400,3.414,2421,3.414,2422,3.903,2423,3.903,2424,3.903,2425,3.903,2426,3.903,2427,5.441,2428,7.848,2429,3.903,2430,3.903,2431,7.848,2432,7.381,2433,8.032,2434,7.381,2435,3.903,2436,5.441,2437,7.381,2438,7.381,2439,3.903,2440,3.903,2441,3.903,2442,3.903,2443,7.848,2444,3.903,2445,3.903,2446,6.777,2447,3.903,2448,3.903,2449,3.903,2450,3.903,2451,3.903,2452,3.903,2453,3.903,2454,3.414,2455,5.441,2456,3.414,2457,3.903]],["title/dependencies.html",[61,3.745,1732,2.62]],["body/dependencies.html",[33,0.012,48,0.355,49,1.907,56,0.01,57,0.01,61,4.553,64,5.83,113,6.436,114,5.83,116,3.413,118,3.773,143,2.994,144,0.748,208,4.246,890,5.449,1245,4.246,2458,6.228,2459,8.512,2460,6.228,2461,6.228,2462,6.228,2463,6.228,2464,7.356,2465,7.356,2466,6.228,2467,6.228,2468,6.228,2469,6.228,2470,6.228,2471,6.228,2472,6.228,2473,6.228,2474,6.228,2475,6.228,2476,6.228,2477,6.228,2478,6.228,2479,6.228,2480,7.356,2481,6.228,2482,6.228,2483,6.228,2484,6.228,2485,6.228,2486,6.228,2487,6.228,2488,6.228,2489,6.228,2490,6.228,2491,6.228,2492,6.228,2493,6.228,2494,6.228]],["title/index.html",[20,0.192,2495,3.584,2496,3.584]],["body/index.html",[4,0.132,12,0.145,13,3.535,19,0.372,33,0.01,45,1.341,56,0.01,57,0.01,108,4.19,144,0.935,187,1.043,230,3.217,309,1.261,316,3.535,566,4.976,678,5.377,715,4.19,820,5.377,1074,3.217,1406,4.798,1412,3.535,1663,6.811,1727,5.377,1732,4.492,1814,4.19,2142,5.377,2209,3.938,2497,6.145,2498,7.298,2499,6.145,2500,7.785,2501,5.377,2502,6.145,2503,6.145,2504,8.224,2505,8.427,2506,6.145,2507,6.145,2508,6.145,2509,6.145,2510,6.145,2511,6.145,2512,6.145,2513,6.145,2514,7.785,2515,7.785,2516,6.145,2517,8.053,2518,6.145,2519,6.145,2520,6.145,2521,7.298,2522,7.298,2523,8.053,2524,6.145,2525,7.298,2526,7.298,2527,6.145,2528,6.145,2529,6.145,2530,7.298,2531,6.145,2532,6.145,2533,6.145,2534,6.145]],["title/modules.html",[60,3.946]],["body/modules.html",[33,0.011,56,0.011,57,0.011,59,4.959,60,4.626,105,4.626,114,5.377,534,3.551,720,5.936,2535,6.785,2536,7.731,2537,6.785]],["title/overview.html",[2209,3.709]],["body/overview.html",[2,2.469,33,0.012,56,0.009,57,0.009,58,2.929,59,6.505,60,3.645,61,3.907,62,1.446,63,4.677,64,4.237,65,3.907,66,4.237,67,4.677,68,4.677,69,4.677,70,4.677,71,2.147,72,1.863,73,4.992,74,4.992,75,1.863,76,1.807,77,1.752,78,1.863,79,1.807,80,1.807,81,1.863,82,1.807,83,4.436,84,1.863,85,1.863,86,1.863,87,1.752,88,1.598,89,1.807,90,1.807,91,1.807,92,1.863,93,1.807,94,1.863,95,4.992,96,4.992,97,1.752,98,1.863,99,1.752,100,1.807,101,1.863,102,1.807,103,1.807,104,1.863,105,4.992,106,5.864,107,4.677,108,3.645,220,3.907,232,1.491,290,3.426,413,3.075,482,3.426,768,1.538,880,3.239,887,2.57,1022,2.929,2209,3.426,2538,5.346,2539,5.346,2540,5.346]],["title/properties.html",[21,0.329,1732,2.62]],["body/properties.html",[21,0.438,33,0.011,56,0.011,57,0.011,2501,5.977,2541,6.831]],["title/routes.html",[220,4.231]],["body/routes.html",[33,0.011,56,0.011,57,0.011,220,5.01]],["title/miscellaneous/variables.html",[2542,3.136,2543,4.483]],["body/miscellaneous/variables.html",[16,3.361,20,0.344,33,0.012,34,0.254,40,1.792,41,1.356,56,0.01,57,0.01,145,4.169,254,5.618,259,3.519,438,2.749,564,4.104,614,2.366,687,2.881,850,2.558,955,2.854,1036,3.891,1728,5.618,1831,5.089,2454,5.618,2456,5.618,2542,5.618,2543,5.618,2544,6.422,2545,6.422,2546,7.489,2547,7.489,2548,6.422,2549,6.422,2550,6.422,2551,6.422,2552,6.422,2553,6.422,2554,6.422,2555,6.422,2556,6.422,2557,6.422,2558,6.422,2559,6.422,2560,6.422]]],"invertedIndex":[["",{"_index":33,"title":{},"body":{"injectables/ActiveComponentService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"pipes/CapitalizeAndReplacePipe.html":{},"pipes/CapitalizePipe.html":{},"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"interfaces/CustomerMenuItem.html":{},"components/CustomerViewComponent.html":{},"classes/Customers.html":{},"injectables/CustomersService.html":{},"injectables/DataService.html":{},"interfaces/DataType.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"classes/Employees.html":{},"injectables/EmployeesService.html":{},"pipes/FormatCamelCasePipe.html":{},"components/GetRoleComponent.html":{},"classes/Ingredients.html":{},"injectables/IngredientsService.html":{},"classes/Inventory.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"injectables/InventoryService.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"injectables/MagnifierService.html":{},"components/ManagerPopupComponent.html":{},"classes/Menu.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-2.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"injectables/MenuService.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"classes/OrderHistory.html":{},"injectables/OrderHistoryService.html":{},"interfaces/OrderItem.html":{},"classes/Orders.html":{},"injectables/OrdersService.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"pipes/ReplacePipe.html":{},"pipes/ReplaceUnderscoresPipe.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{},"classes/TeamMember.html":{},"injectables/TeamMemberService.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":405,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-4.html":{}}}],["0.0.0",{"_index":2541,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":429,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["0.13.0",{"_index":2494,"title":{},"body":{"dependencies.html":{}}}],["0.3s",{"_index":2287,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["0.5",{"_index":622,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["0.7",{"_index":2010,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["0.75",{"_index":657,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["000",{"_index":2028,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["01",{"_index":1618,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["03",{"_index":1619,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["030303",{"_index":466,"title":{},"body":{"components/CartModalComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["05",{"_index":2008,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["0px",{"_index":492,"title":{},"body":{"components/CartModalComponent.html":{},"components/CustomerViewComponent.html":{}}}],["1",{"_index":439,"title":{"interfaces/MenuItem-1.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}},"body":{"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/CustomerViewComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{}}}],["1').replace",{"_index":1306,"title":{},"body":{"pipes/FormatCamelCasePipe.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["1.0.1",{"_index":2483,"title":{},"body":{"dependencies.html":{}}}],["1.11.1",{"_index":2464,"title":{},"body":{"dependencies.html":{}}}],["1.4.1",{"_index":2481,"title":{},"body":{"dependencies.html":{}}}],["1.5rem",{"_index":1002,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["1/1",{"_index":2433,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":490,"title":{},"body":{"components/CartModalComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["10.6.0",{"_index":2479,"title":{},"body":{"dependencies.html":{}}}],["10/10",{"_index":2427,"title":{},"body":{"coverage.html":{}}}],["10/12",{"_index":2441,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":422,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"coverage.html":{}}}],["1000",{"_index":2036,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["100px",{"_index":468,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["100vh",{"_index":1907,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["100vw",{"_index":1273,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["1050",{"_index":624,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["1051",{"_index":630,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["10px",{"_index":427,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/CustomerViewComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["10vh",{"_index":625,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["11/11",{"_index":2447,"title":{},"body":{"coverage.html":{}}}],["1100",{"_index":649,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/RestockReportPopupComponent.html":{}}}],["1100px",{"_index":2283,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["114186982",{"_index":858,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["11px",{"_index":2027,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["12",{"_index":2538,"title":{},"body":{"overview.html":{}}}],["12px",{"_index":1267,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["13/13",{"_index":2436,"title":{},"body":{"coverage.html":{}}}],["136",{"_index":1262,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["139",{"_index":1261,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["14px",{"_index":2001,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["15",{"_index":1012,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["15.0.0",{"_index":2467,"title":{},"body":{"dependencies.html":{}}}],["150",{"_index":1982,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["1500",{"_index":1434,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["150px",{"_index":2033,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["15px",{"_index":445,"title":{},"body":{"components/CartModalComponent.html":{},"components/MenuItemComponent.html":{},"components/NavMenuComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["16.0.0",{"_index":2462,"title":{},"body":{"dependencies.html":{}}}],["16.2.0",{"_index":2459,"title":{},"body":{"dependencies.html":{}}}],["16.2.8",{"_index":2502,"title":{},"body":{"index.html":{}}}],["16.3.1",{"_index":2476,"title":{},"body":{"dependencies.html":{}}}],["16/16",{"_index":2445,"title":{},"body":{"coverage.html":{}}}],["16px",{"_index":2005,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["18.7",{"_index":1957,"title":{},"body":{"components/MenuViewComponent.html":{}}}],["18/19",{"_index":2453,"title":{},"body":{"coverage.html":{}}}],["184",{"_index":478,"title":{},"body":{"components/CartModalComponent.html":{},"components/MenuItemComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["18px",{"_index":983,"title":{},"body":{"components/CustomerViewComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["1px",{"_index":461,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["1rem",{"_index":991,"title":{},"body":{"components/CustomerViewComponent.html":{},"components/LearnMoreComponent.html":{}}}],["2",{"_index":413,"title":{"interfaces/MenuItem-2.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ProfileComponent.html":{},"components/ShoppingCartComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":2492,"title":{},"body":{"dependencies.html":{}}}],["2.6em",{"_index":1909,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["2/2",{"_index":2432,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":420,"title":{},"body":{"components/CartModalComponent.html":{},"components/CustomerViewComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{}}}],["20/20",{"_index":2439,"title":{},"body":{"coverage.html":{}}}],["2000",{"_index":1991,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["200px",{"_index":971,"title":{},"body":{"components/CustomerViewComponent.html":{},"components/MenuItemComponent.html":{},"components/NavMenuComponent.html":{}}}],["2023",{"_index":1617,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["20px",{"_index":417,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/LearnMoreComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["21.5.2",{"_index":2489,"title":{},"body":{"dependencies.html":{}}}],["21/21",{"_index":2444,"title":{},"body":{"coverage.html":{}}}],["23/24",{"_index":2426,"title":{},"body":{"coverage.html":{}}}],["234",{"_index":1961,"title":{},"body":{"components/MenuViewComponent.html":{}}}],["238",{"_index":1962,"title":{},"body":{"components/MenuViewComponent.html":{}}}],["242323",{"_index":981,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["24px",{"_index":1270,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["250",{"_index":1959,"title":{},"body":{"components/MenuViewComponent.html":{}}}],["250px",{"_index":990,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["255",{"_index":660,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/NavMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["25px",{"_index":483,"title":{},"body":{"components/CartModalComponent.html":{}}}],["25rem",{"_index":2006,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["26",{"_index":2540,"title":{},"body":{"overview.html":{}}}],["267839295",{"_index":838,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["273.15",{"_index":885,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["28d",{"_index":859,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["28px",{"_index":470,"title":{},"body":{"components/CartModalComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["2px",{"_index":2032,"title":{},"body":{"components/NavMenuComponent.html":{},"components/SlushMenuComponent.html":{}}}],["2rem",{"_index":980,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["3",{"_index":1848,"title":{"interfaces/MenuItem-3.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableConfig-3.html":{}},"body":{}}],["3.12.0",{"_index":2474,"title":{},"body":{"dependencies.html":{}}}],["3.7.1",{"_index":2485,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":2431,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":880,"title":{},"body":{"components/CustomerViewComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"overview.html":{}}}],["300px",{"_index":2285,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["30px",{"_index":1019,"title":{},"body":{"components/CustomerViewComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["31/33",{"_index":2430,"title":{},"body":{"coverage.html":{}}}],["32).tofixed(2",{"_index":888,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["37.8",{"_index":1958,"title":{},"body":{"components/MenuViewComponent.html":{}}}],["380px",{"_index":2292,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["3rem",{"_index":766,"title":{},"body":{"components/ContactUsComponent.html":{},"components/LearnMoreComponent.html":{}}}],["4",{"_index":482,"title":{"interfaces/MenuItem-4.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableConfig-4.html":{}},"body":{"components/CartModalComponent.html":{},"components/ShoppingCartComponent.html":{},"overview.html":{}}}],["4.18.2",{"_index":2477,"title":{},"body":{"dependencies.html":{}}}],["4.5rem",{"_index":976,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["4/4",{"_index":2443,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":2448,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":709,"title":{},"body":{"components/ConfirmationPopupComponent.html":{},"components/CustomerViewComponent.html":{}}}],["400px",{"_index":1255,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["40px",{"_index":1014,"title":{},"body":{"components/CustomerViewComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["450px",{"_index":995,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["4caf50",{"_index":472,"title":{},"body":{"components/CartModalComponent.html":{},"components/MenuItemComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["4px",{"_index":628,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["5",{"_index":887,"title":{"interfaces/MenuItem-5.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-5.html":{}},"body":{"components/CustomerViewComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"overview.html":{}}}],["5.3.2",{"_index":2471,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":2434,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":997,"title":{},"body":{"components/CustomerViewComponent.html":{},"components/MenuItemComponent.html":{},"components/NavMenuComponent.html":{}}}],["500px",{"_index":638,"title":{},"body":{"components/CheckoutPopupComponent.html":{}}}],["50px",{"_index":985,"title":{},"body":{"components/CustomerViewComponent.html":{},"components/MenuItemComponent.html":{},"components/NavMenuComponent.html":{}}}],["5124",{"_index":759,"title":{},"body":{"components/ContactUsComponent.html":{}}}],["55px",{"_index":1275,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"components/MenuItemComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["58/58",{"_index":2442,"title":{},"body":{"coverage.html":{}}}],["59",{"_index":1457,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["5px",{"_index":627,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["5rem",{"_index":979,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["6",{"_index":998,"title":{"interfaces/MenuItem-6.html":{}},"body":{"components/CustomerViewComponent.html":{},"components/MenuItemComponent.html":{}}}],["6/6",{"_index":2437,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":2435,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":878,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["600px",{"_index":2038,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["60px",{"_index":970,"title":{},"body":{"components/CustomerViewComponent.html":{},"components/MenuViewComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["6rem",{"_index":765,"title":{},"body":{"components/ContactUsComponent.html":{},"components/LearnMoreComponent.html":{}}}],["7",{"_index":1878,"title":{"interfaces/MenuItem-7.html":{}},"body":{}}],["7.5px",{"_index":1018,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["7.8.0",{"_index":2490,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":2438,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":1011,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["704",{"_index":758,"title":{},"body":{"components/ContactUsComponent.html":{}}}],["75px",{"_index":473,"title":{},"body":{"components/CartModalComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["75rem",{"_index":2007,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["768px",{"_index":2004,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["8",{"_index":2539,"title":{},"body":{"overview.html":{}}}],["8.0.0",{"_index":2470,"title":{},"body":{"dependencies.html":{}}}],["8.11.3",{"_index":2487,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":2446,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":2450,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1227,"title":{},"body":{"components/EditItemPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"coverage.html":{}}}],["800px",{"_index":2037,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["80vh",{"_index":632,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["81",{"_index":485,"title":{},"body":{"components/CartModalComponent.html":{},"components/ShoppingCartComponent.html":{},"coverage.html":{}}}],["83",{"_index":2440,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":474,"title":{},"body":{"components/CartModalComponent.html":{},"coverage.html":{}}}],["88",{"_index":2449,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":629,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["9",{"_index":886,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["9/11",{"_index":2451,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":2428,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":469,"title":{},"body":{"components/CartModalComponent.html":{},"components/MenuViewComponent.html":{}}}],["90px",{"_index":969,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["92",{"_index":479,"title":{},"body":{"components/CartModalComponent.html":{},"components/MenuItemComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["93",{"_index":2429,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":2452,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":2425,"title":{},"body":{"coverage.html":{}}}],["979",{"_index":757,"title":{},"body":{"components/ContactUsComponent.html":{}}}],["999",{"_index":1458,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["_",{"_index":1525,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["a.navbar",{"_index":1998,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["aaabaa",{"_index":1918,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["aboutme",{"_index":1017,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["aboutmetext",{"_index":1020,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["above",{"_index":1529,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["absolute",{"_index":467,"title":{},"body":{"components/CartModalComponent.html":{},"components/CustomerViewComponent.html":{},"components/NavMenuComponent.html":{}}}],["acacac",{"_index":2284,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["accepting",{"_index":1691,"title":{},"body":{"components/LearnMoreComponent.html":{}}}],["access",{"_index":1311,"title":{},"body":{"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"injectables/MagnifierService.html":{}}}],["accessibility",{"_index":1316,"title":{},"body":{"components/GetRoleComponent.html":{}}}],["accordingly",{"_index":2367,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["action",{"_index":688,"title":{},"body":{"components/ConfirmationPopupComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/ManagerPopupComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{}}}],["actionbuttons",{"_index":654,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/RestockReportPopupComponent.html":{}}}],["actions",{"_index":677,"title":{},"body":{"components/ConfirmationPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableConfig-3.html":{}}}],["activatedroute",{"_index":1788,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{}}}],["active",{"_index":11,"title":{},"body":{"injectables/ActiveComponentService.html":{},"components/CartModalComponent.html":{},"interfaces/MenuItem-3.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["activecomponent",{"_index":22,"title":{},"body":{"injectables/ActiveComponentService.html":{}}}],["activecomponentservice",{"_index":1,"title":{"injectables/ActiveComponentService.html":{}},"body":{"injectables/ActiveComponentService.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-3.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{},"coverage.html":{}}}],["activecomponentsource",{"_index":24,"title":{},"body":{"injectables/ActiveComponentService.html":{}}}],["actual",{"_index":2273,"title":{},"body":{"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["actual_component",{"_index":288,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{}}}],["add",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"injectables/IngredientsService.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"injectables/InventoryService.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"injectables/MenuService.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"index.html":{}}}],["add:hover",{"_index":2193,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["added",{"_index":516,"title":{},"body":{"injectables/CartService.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["added_toppings",{"_index":780,"title":{},"body":{"interfaces/CustomerMenuItem.html":{},"components/EmployeeCreationsMenuComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-2.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["addedingredientname",{"_index":2121,"title":{},"body":{"components/QuickAddPopupComponent.html":{}}}],["addedingredientquantity",{"_index":2122,"title":{},"body":{"components/QuickAddPopupComponent.html":{}}}],["addedinventoryitemname",{"_index":2123,"title":{},"body":{"components/QuickAddPopupComponent.html":{}}}],["addedinventoryitemquantity",{"_index":2124,"title":{},"body":{"components/QuickAddPopupComponent.html":{}}}],["addedmenuitemingredients",{"_index":2125,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["addedmenuitemname",{"_index":2126,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["addedmenuitemprice",{"_index":2127,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["addedmenuitemtype",{"_index":2128,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["addedtoppings",{"_index":1807,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{}}}],["adding",{"_index":1232,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"injectables/InventoryService.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["addingredient",{"_index":1347,"title":{},"body":{"injectables/IngredientsService.html":{}}}],["addingredient(ingredient",{"_index":1354,"title":{},"body":{"injectables/IngredientsService.html":{}}}],["addinventoryitem",{"_index":1640,"title":{},"body":{"injectables/InventoryService.html":{}}}],["addinventoryitem(inventoryitem",{"_index":1646,"title":{},"body":{"injectables/InventoryService.html":{}}}],["additem",{"_index":503,"title":{},"body":{"injectables/CartService.html":{},"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["additem(item",{"_index":514,"title":{},"body":{"injectables/CartService.html":{}}}],["addition",{"_index":2139,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["additional",{"_index":499,"title":{},"body":{"injectables/CartService.html":{},"components/CustomerViewComponent.html":{},"injectables/DataService.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/LearnMoreComponent.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{}}}],["additionalitems",{"_index":1471,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["addmenuitem",{"_index":1920,"title":{},"body":{"injectables/MenuService.html":{}}}],["addmenuitem(menuitem",{"_index":1929,"title":{},"body":{"injectables/MenuService.html":{}}}],["adds",{"_index":1823,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["adjust",{"_index":1391,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/MenuItemComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["adventure",{"_index":956,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["ai0zne",{"_index":862,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["align",{"_index":442,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["aligns",{"_index":2017,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["allow",{"_index":449,"title":{},"body":{"components/CartModalComponent.html":{}}}],["allowing",{"_index":2208,"title":{},"body":{"components/RestockReportPopupComponent.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-5.html":{}}}],["allows",{"_index":329,"title":{},"body":{"components/CartModalComponent.html":{},"components/LogoutButtonComponent.html":{},"injectables/MagnifierService.html":{},"components/NavMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["along",{"_index":1866,"title":{},"body":{"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-7.html":{},"components/MilkTeaMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["amazing",{"_index":895,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["amount",{"_index":1547,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"classes/OrderHistory.html":{},"interfaces/OrderItem.html":{},"classes/Orders.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["angular",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"injectables/DataService.html":{},"components/EditItemPopupComponent.html":{},"components/GetRoleComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{},"components/WeatherComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular's",{"_index":1730,"title":{},"body":{"components/LogoutButtonComponent.html":{}}}],["angular/animations",{"_index":2458,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"components/LogoutButtonComponent.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"injectables/CartService.html":{},"components/ContactUsComponent.html":{},"injectables/CustomersService.html":{},"injectables/DataService.html":{},"injectables/EmployeesService.html":{},"injectables/IngredientsService.html":{},"injectables/InventoryService.html":{},"injectables/MenuService.html":{},"injectables/OrderHistoryService.html":{},"injectables/OrdersService.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{},"injectables/TeamMemberService.html":{},"components/WeatherComponent.html":{}}}],["angular/compiler",{"_index":2460,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":48,"title":{},"body":{"injectables/ActiveComponentService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"pipes/CapitalizeAndReplacePipe.html":{},"pipes/CapitalizePipe.html":{},"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"injectables/CustomersService.html":{},"injectables/DataService.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"injectables/EmployeesService.html":{},"pipes/FormatCamelCasePipe.html":{},"components/GetRoleComponent.html":{},"injectables/IngredientsService.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"injectables/InventoryService.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"injectables/MagnifierService.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"injectables/MenuService.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"injectables/OrderHistoryService.html":{},"interfaces/OrderItem.html":{},"injectables/OrdersService.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"pipes/ReplacePipe.html":{},"pipes/ReplaceUnderscoresPipe.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{},"injectables/TeamMemberService.html":{},"components/WeatherComponent.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":2461,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"components/EditItemPopupComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{},"dependencies.html":{}}}],["another",{"_index":2196,"title":{},"body":{"pipes/ReplacePipe.html":{}}}],["api",{"_index":1036,"title":{},"body":{"injectables/CustomersService.html":{},"injectables/EmployeesService.html":{},"injectables/InventoryService.html":{},"injectables/OrderHistoryService.html":{},"injectables/TeamMemberService.html":{},"components/WeatherComponent.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":2547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{},"components/WeatherComponent.html":{}}}],["app.component",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appetite",{"_index":1673,"title":{},"body":{"components/LearnMoreComponent.html":{}}}],["applicable",{"_index":1882,"title":{},"body":{"interfaces/MenuItem-7.html":{},"components/SmoothieMenuComponent.html":{}}}],["application",{"_index":13,"title":{},"body":{"injectables/ActiveComponentService.html":{},"components/AuthenticationButtonComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LogoutButtonComponent.html":{},"injectables/MagnifierService.html":{},"components/NavMenuComponent.html":{},"index.html":{}}}],["application's",{"_index":719,"title":{},"body":{"components/ContactUsComponent.html":{}}}],["appmodule",{"_index":59,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":825,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["approutingmodule",{"_index":105,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["aqua",{"_index":1274,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["arial",{"_index":2026,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["aromatic",{"_index":915,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["around",{"_index":1258,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["array",{"_index":532,"title":{},"body":{"injectables/CartService.html":{},"components/EmployeeCreationsMenuComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["array.isarray(this.thing.ingredients",{"_index":1197,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["artifacts",{"_index":2518,"title":{},"body":{"index.html":{}}}],["assign",{"_index":884,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["assigns",{"_index":833,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["associated",{"_index":1813,"title":{},"body":{"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-3.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["async",{"_index":505,"title":{},"body":{"injectables/CartService.html":{}}}],["auth",{"_index":259,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/ContactUsComponent.html":{},"injectables/DataService.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/SignupButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["auth.clientid",{"_index":2552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth.domain",{"_index":2550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth0",{"_index":1700,"title":{},"body":{"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/SignupButtonComponent.html":{}}}],["auth0's",{"_index":1709,"title":{},"body":{"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ProfileComponent.html":{}}}],["auth0/auth0",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/ContactUsComponent.html":{},"injectables/DataService.html":{},"components/GetRoleComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/SignupButtonComponent.html":{},"dependencies.html":{}}}],["authentic",{"_index":1686,"title":{},"body":{"components/LearnMoreComponent.html":{}}}],["authentication",{"_index":241,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"injectables/DataService.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{}}}],["authenticationbuttoncomponent",{"_index":72,"title":{"components/AuthenticationButtonComponent.html":{}},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authguard",{"_index":222,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["authmodule",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["authmodule.forroot",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["authservice",{"_index":251,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/ContactUsComponent.html":{},"injectables/DataService.html":{},"components/GetRoleComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/SignupButtonComponent.html":{}}}],["auto",{"_index":635,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["automatically",{"_index":2510,"title":{},"body":{"index.html":{}}}],["available",{"_index":534,"title":{},"body":{"injectables/CartService.html":{},"injectables/DataService.html":{},"components/EmployeeCreationsMenuComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"modules.html":{}}}],["await",{"_index":568,"title":{},"body":{"injectables/CartService.html":{}}}],["awaiting",{"_index":2176,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["back",{"_index":1792,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{}}}],["backbutton",{"_index":1917,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["backdrop",{"_index":621,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["backend",{"_index":524,"title":{},"body":{"injectables/CartService.html":{},"components/ContactUsComponent.html":{},"injectables/DataService.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["background",{"_index":423,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["banh",{"_index":893,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["base",{"_index":1047,"title":{},"body":{"injectables/CustomersService.html":{},"injectables/EmployeesService.html":{},"injectables/InventoryService.html":{},"injectables/OrderHistoryService.html":{},"injectables/OrdersService.html":{},"injectables/TeamMemberService.html":{}}}],["based",{"_index":256,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/GetRoleComponent.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"components/NavMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/WeatherComponent.html":{}}}],["baseurl",{"_index":1040,"title":{},"body":{"injectables/CustomersService.html":{},"injectables/EmployeesService.html":{},"injectables/IngredientsService.html":{},"injectables/InventoryService.html":{},"injectables/MenuService.html":{},"injectables/OrderHistoryService.html":{},"injectables/OrdersService.html":{},"injectables/TeamMemberService.html":{}}}],["become",{"_index":2178,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["before",{"_index":1913,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["behaviorsubject",{"_index":15,"title":{},"body":{"injectables/ActiveComponentService.html":{},"injectables/CartService.html":{},"injectables/MagnifierService.html":{}}}],["behaviorsubject(false",{"_index":1756,"title":{},"body":{"injectables/MagnifierService.html":{}}}],["behaviorsubject(initialcartitems",{"_index":547,"title":{},"body":{"injectables/CartService.html":{}}}],["behind",{"_index":898,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["being",{"_index":1152,"title":{},"body":{"components/EditItemPopupComponent.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["belongs",{"_index":2360,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["between",{"_index":438,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"injectables/MagnifierService.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"miscellaneous/variables.html":{}}}],["beverage",{"_index":2171,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["bi",{"_index":974,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["black",{"_index":1001,"title":{},"body":{"components/CustomerViewComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["blend",{"_index":913,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["blending",{"_index":938,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["bliss",{"_index":904,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["block",{"_index":448,"title":{},"body":{"components/CartModalComponent.html":{},"components/MenuItemComponent.html":{},"components/NavMenuComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["board",{"_index":1997,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["boba",{"_index":945,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["bold",{"_index":648,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/CustomerViewComponent.html":{},"components/ManagerPopupComponent.html":{},"components/RestockReportPopupComponent.html":{}}}],["bonappetea",{"_index":1996,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["boolean",{"_index":873,"title":{},"body":{"components/CustomerViewComponent.html":{},"injectables/DataService.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"interfaces/OrderItem.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{}}}],["bootstrap",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":460,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["bottom",{"_index":453,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/CustomerViewComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["bound",{"_index":541,"title":{},"body":{"injectables/CartService.html":{},"injectables/DataService.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/SignupButtonComponent.html":{}}}],["box",{"_index":425,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/NavMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/SlushMenuComponent.html":{}}}],["brand",{"_index":1999,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["break",{"_index":1563,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["bring",{"_index":962,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["browse",{"_index":2536,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browserify",{"_index":2473,"title":{},"body":{"dependencies.html":{}}}],["browsermodule",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":1015,"title":{},"body":{"components/CustomerViewComponent.html":{},"components/LearnMoreComponent.html":{},"components/MenuItemComponent.html":{}}}],["bubble",{"_index":891,"title":{},"body":{"components/CustomerViewComponent.html":{},"components/LearnMoreComponent.html":{}}}],["buds",{"_index":921,"title":{},"body":{"components/CustomerViewComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["build",{"_index":2517,"title":{},"body":{"index.html":{}}}],["bursting",{"_index":927,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["business",{"_index":2326,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["button",{"_index":242,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/MenuItemComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"components/SignupButtonComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["button'},{'name",{"_index":266,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{}}}],["button.cancel",{"_index":480,"title":{},"body":{"components/CartModalComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["button.component",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["button.component.html",{"_index":250,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/SignupButtonComponent.html":{}}}],["button.component.ts",{"_index":237,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/SignupButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:15",{"_index":1706,"title":{},"body":{"components/LoginButtonComponent.html":{},"components/SignupButtonComponent.html":{}}}],["button.component.ts:17",{"_index":1725,"title":{},"body":{"components/LogoutButtonComponent.html":{}}}],["button.component.ts:21",{"_index":1712,"title":{},"body":{"components/LoginButtonComponent.html":{},"components/SignupButtonComponent.html":{}}}],["button.component.ts:25",{"_index":1741,"title":{},"body":{"components/LogoutButtonComponent.html":{}}}],["button.component.ts:26",{"_index":1711,"title":{},"body":{"components/LoginButtonComponent.html":{}}}],["button.component.ts:27",{"_index":2310,"title":{},"body":{"components/SignupButtonComponent.html":{}}}],["button.component.ts:32",{"_index":1740,"title":{},"body":{"components/LogoutButtonComponent.html":{}}}],["button.component.ts:34",{"_index":1707,"title":{},"body":{"components/LoginButtonComponent.html":{}}}],["button.component.ts:36",{"_index":2305,"title":{},"body":{"components/SignupButtonComponent.html":{}}}],["button.component.ts:40",{"_index":1733,"title":{},"body":{"components/LogoutButtonComponent.html":{}}}],["button.continue",{"_index":471,"title":{},"body":{"components/CartModalComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["button.small",{"_index":486,"title":{},"body":{"components/CartModalComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["button/authentication",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"coverage.html":{}}}],["button/login",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"components/LoginButtonComponent.html":{},"coverage.html":{}}}],["button/logout",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"components/LogoutButtonComponent.html":{},"coverage.html":{}}}],["button/signup",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"components/SignupButtonComponent.html":{},"coverage.html":{}}}],["buttonhold",{"_index":1013,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["buttons",{"_index":712,"title":{},"body":{"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["bánh",{"_index":1679,"title":{},"body":{"components/LearnMoreComponent.html":{}}}],["c2ebff",{"_index":1263,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["cafe",{"_index":1684,"title":{},"body":{"components/LearnMoreComponent.html":{}}}],["calc(100",{"_index":1256,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["calculates",{"_index":368,"title":{},"body":{"components/CartModalComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{}}}],["calculatetotal",{"_index":338,"title":{},"body":{"components/CartModalComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{}}}],["call",{"_index":255,"title":{},"body":{"components/AuthenticationButtonComponent.html":{}}}],["called",{"_index":539,"title":{},"body":{"injectables/CartService.html":{},"injectables/DataService.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"components/SignupButtonComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["calling",{"_index":1736,"title":{},"body":{"components/LogoutButtonComponent.html":{}}}],["calls",{"_index":1708,"title":{},"body":{"components/LoginButtonComponent.html":{},"interfaces/MenuItem-3.html":{},"components/MenuViewComponent.html":{},"components/SignupButtonComponent.html":{}}}],["camel",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"pipes/FormatCamelCasePipe.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"coverage.html":{}}}],["camelcase",{"_index":1532,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["canactivate",{"_index":229,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["cancel",{"_index":332,"title":{},"body":{"components/CartModalComponent.html":{},"components/EditItemPopupComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["cancel:hover",{"_index":1229,"title":{},"body":{"components/EditItemPopupComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["cancelclicked",{"_index":346,"title":{},"body":{"components/CartModalComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["canceling",{"_index":2213,"title":{},"body":{"components/SeasonalItemPopupComponent.html":{}}}],["cancelling",{"_index":2137,"title":{},"body":{"components/QuickAddPopupComponent.html":{}}}],["cancels",{"_index":2376,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["capabilities",{"_index":2533,"title":{},"body":{"index.html":{}}}],["capitalize",{"_index":318,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["capitalizeandreplace",{"_index":304,"title":{},"body":{"pipes/CapitalizeAndReplacePipe.html":{},"components/ShoppingCartComponent.html":{}}}],["capitalizeandreplacepipe",{"_index":73,"title":{"pipes/CapitalizeAndReplacePipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/CapitalizeAndReplacePipe.html":{},"coverage.html":{},"overview.html":{}}}],["capitalized",{"_index":1299,"title":{},"body":{"pipes/FormatCamelCasePipe.html":{},"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["capitalizepipe",{"_index":74,"title":{"pipes/CapitalizePipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/CapitalizePipe.html":{},"coverage.html":{},"overview.html":{}}}],["capitalizing",{"_index":297,"title":{},"body":{"pipes/CapitalizeAndReplacePipe.html":{},"pipes/CapitalizePipe.html":{},"components/QuickAddPopupComponent.html":{}}}],["cart",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{},"components/WeatherComponent.html":{}}}],["cart'},{'name",{"_index":284,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{}}}],["cart.component",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["cart.component.html",{"_index":2229,"title":{},"body":{"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["cart.component.scss",{"_index":2228,"title":{},"body":{"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["cart.component.ts",{"_index":2223,"title":{},"body":{"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{},"coverage.html":{}}}],["cart.component.ts:100",{"_index":2246,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:111",{"_index":2251,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:117",{"_index":2250,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:163",{"_index":2248,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:179",{"_index":2241,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:188",{"_index":2247,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:197",{"_index":2240,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:48",{"_index":2237,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:52",{"_index":2239,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:56",{"_index":2238,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:60",{"_index":2252,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:64",{"_index":2257,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:68",{"_index":2256,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:72",{"_index":2255,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:76",{"_index":2253,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:81",{"_index":2236,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart.component.ts:91",{"_index":2254,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["cart/checkout",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"components/CheckoutPopupComponent.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableConfig-4.html":{},"coverage.html":{}}}],["cart/shopping",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{},"coverage.html":{}}}],["cartitems",{"_index":378,"title":{},"body":{"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["cartitemssubject",{"_index":502,"title":{},"body":{"injectables/CartService.html":{}}}],["cartmodalcomponent",{"_index":75,"title":{"components/CartModalComponent.html":{}},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cartservice",{"_index":138,"title":{"injectables/CartService.html":{}},"body":{"modules/AppModule.html":{},"components/CartModalComponent.html":{},"injectables/CartService.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{},"coverage.html":{}}}],["cartservice's",{"_index":377,"title":{},"body":{"components/CartModalComponent.html":{}}}],["cartsub",{"_index":2334,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["cartsubscription",{"_index":2230,"title":{},"body":{"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["carttotal",{"_index":2231,"title":{},"body":{"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{}}}],["case",{"_index":1296,"title":{},"body":{"pipes/FormatCamelCasePipe.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["case.pipe",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{}}}],["case.pipe.ts",{"_index":1295,"title":{},"body":{"pipes/FormatCamelCasePipe.html":{},"coverage.html":{}}}],["case.pipe.ts:10",{"_index":1302,"title":{},"body":{"pipes/FormatCamelCasePipe.html":{}}}],["cashier",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"injectables/DataService.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"components/WeatherComponent.html":{}}}],["cashier's",{"_index":2319,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["cashierviewcomponent",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["catch",{"_index":571,"title":{},"body":{"injectables/CartService.html":{}}}],["categories",{"_index":1849,"title":{},"body":{"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["center",{"_index":455,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["ceo",{"_index":1089,"title":{},"body":{"injectables/DataService.html":{}}}],["certain",{"_index":1317,"title":{},"body":{"components/GetRoleComponent.html":{}}}],["cfo",{"_index":1088,"title":{},"body":{"injectables/DataService.html":{}}}],["change",{"_index":1814,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{},"index.html":{}}}],["change)=\"ontoppingchange(topping.menu_item_id",{"_index":1843,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{}}}],["changed",{"_index":1817,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{}}}],["changes",{"_index":1166,"title":{},"body":{"components/EditItemPopupComponent.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{}}}],["changes['thing",{"_index":1186,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["characters",{"_index":2195,"title":{},"body":{"pipes/ReplacePipe.html":{}}}],["check",{"_index":1074,"title":{},"body":{"injectables/DataService.html":{},"components/GetRoleComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{},"index.html":{}}}],["checkbox",{"_index":1812,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["checkbox.checked",{"_index":1822,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["checked",{"_index":2364,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["checkifuseriscashier",{"_index":1058,"title":{},"body":{"injectables/DataService.html":{}}}],["checkifuseriscashier(user",{"_index":1065,"title":{},"body":{"injectables/DataService.html":{}}}],["checkifuserismanager",{"_index":1059,"title":{},"body":{"injectables/DataService.html":{}}}],["checkifuserismanager(user",{"_index":1067,"title":{},"body":{"injectables/DataService.html":{}}}],["checkout",{"_index":269,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-4.html":{},"components/WeatherComponent.html":{}}}],["checkoutpopupcomponent",{"_index":77,"title":{"components/CheckoutPopupComponent.html":{}},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableConfig-4.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["chewy",{"_index":952,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["choice",{"_index":678,"title":{},"body":{"components/ConfirmationPopupComponent.html":{},"index.html":{}}}],["class",{"_index":53,"title":{"classes/Customers.html":{},"classes/Employees.html":{},"classes/Ingredients.html":{},"classes/Inventory.html":{},"classes/Menu.html":{},"classes/OrderHistory.html":{},"classes/Orders.html":{},"classes/TeamMember.html":{}},"body":{"injectables/ActiveComponentService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"pipes/CapitalizeAndReplacePipe.html":{},"pipes/CapitalizePipe.html":{},"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"classes/Customers.html":{},"injectables/CustomersService.html":{},"injectables/DataService.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"classes/Employees.html":{},"injectables/EmployeesService.html":{},"pipes/FormatCamelCasePipe.html":{},"components/GetRoleComponent.html":{},"classes/Ingredients.html":{},"injectables/IngredientsService.html":{},"classes/Inventory.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"injectables/InventoryService.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"injectables/MagnifierService.html":{},"components/ManagerPopupComponent.html":{},"classes/Menu.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"injectables/MenuService.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"classes/OrderHistory.html":{},"injectables/OrderHistoryService.html":{},"interfaces/OrderItem.html":{},"classes/Orders.html":{},"injectables/OrdersService.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"pipes/ReplacePipe.html":{},"pipes/ReplaceUnderscoresPipe.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{},"classes/TeamMember.html":{},"injectables/TeamMemberService.html":{},"components/WeatherComponent.html":{},"coverage.html":{}}}],["classes",{"_index":1022,"title":{},"body":{"classes/Customers.html":{},"classes/Employees.html":{},"classes/Ingredients.html":{},"classes/Inventory.html":{},"classes/Menu.html":{},"classes/OrderHistory.html":{},"classes/Orders.html":{},"classes/TeamMember.html":{},"overview.html":{}}}],["classic",{"_index":950,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["clean",{"_index":2243,"title":{},"body":{"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["clear",{"_index":518,"title":{},"body":{"injectables/CartService.html":{}}}],["clearcart",{"_index":504,"title":{},"body":{"injectables/CartService.html":{}}}],["clearing",{"_index":2373,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["clears",{"_index":382,"title":{},"body":{"components/CartModalComponent.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["cli",{"_index":2500,"title":{},"body":{"index.html":{}}}],["click",{"_index":257,"title":{},"body":{"components/AuthenticationButtonComponent.html":{}}}],["clickexcessreport",{"_index":1628,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["clicking",{"_index":2035,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["clickipreport",{"_index":1634,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["clickppreport",{"_index":1632,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["clickrestockreport",{"_index":1630,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["clicks",{"_index":364,"title":{},"body":{"components/CartModalComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["clicksalesreport",{"_index":1624,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["clientid",{"_index":2551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["close",{"_index":592,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{}}}],["close:hover",{"_index":650,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/RestockReportPopupComponent.html":{}}}],["closely",{"_index":2323,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["closepopup",{"_index":589,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{}}}],["closerestockpopup",{"_index":2210,"title":{},"body":{"components/RestockReportPopupComponent.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-5.html":{}}}],["closing",{"_index":1128,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["cloudy",{"_index":869,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["cloudyimageurl",{"_index":794,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["cluster_appmodule",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":820,"title":{},"body":{"components/CustomerViewComponent.html":{},"index.html":{}}}],["coffee",{"_index":1252,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"interfaces/MenuItem-3.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["coffeeitems",{"_index":2331,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["col.header",{"_index":1775,"title":{},"body":{"components/ManagerPopupComponent.html":{},"components/RestockReportPopupComponent.html":{}}}],["collapse",{"_index":639,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["college",{"_index":965,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["color",{"_index":465,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["column",{"_index":434,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/ManagerPopupComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{}}}],["column's",{"_index":1386,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["columns",{"_index":600,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/ManagerPopupComponent.html":{},"interfaces/OrderItem.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{}}}],["combo",{"_index":2022,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["command",{"_index":2530,"title":{},"body":{"index.html":{}}}],["commands",{"_index":2560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["commas",{"_index":303,"title":{},"body":{"pipes/CapitalizeAndReplacePipe.html":{}}}],["common",{"_index":1731,"title":{},"body":{"components/LogoutButtonComponent.html":{}}}],["commonmodule",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["communicates",{"_index":1034,"title":{},"body":{"injectables/CustomersService.html":{}}}],["component",{"_index":12,"title":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{}},"body":{"injectables/ActiveComponentService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"index.html":{}}}],["component's",{"_index":18,"title":{},"body":{"injectables/ActiveComponentService.html":{}}}],["component_template",{"_index":264,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{}}}],["componentname",{"_index":36,"title":{},"body":{"injectables/ActiveComponentService.html":{}}}],["components",{"_index":232,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{},"overview.html":{}}}],["components/authentication",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["components/get",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"components/NavMenuComponent.html":{}}}],["components/login",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["components/logout",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["components/signup",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["concoction",{"_index":2186,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["condition",{"_index":852,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["conditions",{"_index":789,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["configs",{"_index":1541,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["configuration",{"_index":598,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/GetRoleComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/ManagerPopupComponent.html":{},"interfaces/OrderItem.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/ShoppingCartComponent.html":{},"components/SignupButtonComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{}}}],["confirm",{"_index":676,"title":{},"body":{"components/ConfirmationPopupComponent.html":{}}}],["confirmaction",{"_index":679,"title":{},"body":{"components/ConfirmationPopupComponent.html":{}}}],["confirmation",{"_index":271,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{},"components/WeatherComponent.html":{}}}],["confirmationpopupcomponent",{"_index":78,"title":{"components/ConfirmationPopupComponent.html":{}},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["confirmations",{"_index":1579,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["confirmed",{"_index":619,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{}}}],["confirming",{"_index":574,"title":{},"body":{"injectables/CartService.html":{}}}],["confirmorder",{"_index":506,"title":{},"body":{"injectables/CartService.html":{}}}],["confirmorder(customerid",{"_index":519,"title":{},"body":{"injectables/CartService.html":{}}}],["confirms",{"_index":694,"title":{},"body":{"components/ConfirmationPopupComponent.html":{}}}],["console",{"_index":1329,"title":{},"body":{"components/GetRoleComponent.html":{}}}],["console.error('error",{"_index":573,"title":{},"body":{"injectables/CartService.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/MenuItem-3.html":{},"components/MenuViewComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{}}}],["console.error(error",{"_index":755,"title":{},"body":{"components/ContactUsComponent.html":{},"components/WeatherComponent.html":{}}}],["console.log(\"checking",{"_index":1091,"title":{},"body":{"injectables/DataService.html":{}}}],["console.log(\"ingredient",{"_index":1509,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["console.log(\"passed",{"_index":1513,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["console.log('adding",{"_index":1595,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["console.log('clickexcessreport",{"_index":1629,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["console.log('clickipreport",{"_index":1635,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["console.log('clickppreport",{"_index":1633,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["console.log('clicksalesreport",{"_index":1627,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["console.log('clickstockreport",{"_index":1631,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["console.log('deleting",{"_index":1577,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/ManagerPopupComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-3.html":{}}}],["console.log('editing",{"_index":1571,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/ManagerPopupComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-3.html":{}}}],["console.log('employees",{"_index":1109,"title":{},"body":{"injectables/DataService.html":{}}}],["console.log('is",{"_index":1113,"title":{},"body":{"injectables/DataService.html":{}}}],["console.log('matching",{"_index":1110,"title":{},"body":{"injectables/DataService.html":{}}}],["console.log('order",{"_index":2269,"title":{},"body":{"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{}}}],["console.log('quick",{"_index":1603,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["console.log('seasonal",{"_index":1610,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["console.log('user",{"_index":1108,"title":{},"body":{"injectables/DataService.html":{}}}],["console.log(data",{"_index":1335,"title":{},"body":{"components/GetRoleComponent.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{}}}],["console.log(enddate",{"_index":1461,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["console.log(initialinventory",{"_index":1498,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["console.log(inventory_ingrident_map",{"_index":1486,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["console.log(itemsinrange",{"_index":1468,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["console.log(ogingrdientmap",{"_index":1493,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["console.log(orditems",{"_index":1459,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["console.log(profile?.given_name",{"_index":2116,"title":{},"body":{"components/ProfileComponent.html":{}}}],["console.log(response",{"_index":754,"title":{},"body":{"components/ContactUsComponent.html":{}}}],["console.log(startdate",{"_index":1460,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["console.log(this.data",{"_index":1873,"title":{},"body":{"interfaces/MenuItem-5.html":{},"components/SignatureMilkTeaMenuComponent.html":{}}}],["console.log(this.flavoredteadata",{"_index":1877,"title":{},"body":{"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["console.log(this.magnifierenabled",{"_index":876,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["console.log(this.selectedtoppings",{"_index":1828,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{}}}],["console.log(user",{"_index":1079,"title":{},"body":{"injectables/DataService.html":{}}}],["console.log(user.first_name",{"_index":1093,"title":{},"body":{"injectables/DataService.html":{}}}],["console.log(user.last_name",{"_index":1094,"title":{},"body":{"injectables/DataService.html":{}}}],["const",{"_index":227,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CartService.html":{},"components/ContactUsComponent.html":{},"injectables/DataService.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"interfaces/OrderItem.html":{},"injectables/OrdersService.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"components/WeatherComponent.html":{}}}],["construction",{"_index":253,"title":{},"body":{"components/AuthenticationButtonComponent.html":{}}}],["constructor",{"_index":348,"title":{},"body":{"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"injectables/CustomersService.html":{},"injectables/DataService.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"injectables/EmployeesService.html":{},"components/GetRoleComponent.html":{},"injectables/IngredientsService.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"injectables/InventoryService.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"injectables/MenuService.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"injectables/OrderHistoryService.html":{},"interfaces/OrderItem.html":{},"injectables/OrdersService.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"injectables/TeamMemberService.html":{},"components/WeatherComponent.html":{}}}],["constructor(activecomponentservice",{"_index":1888,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["constructor(auth",{"_index":730,"title":{},"body":{"components/ContactUsComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/SignupButtonComponent.html":{}}}],["constructor(cartservice",{"_index":349,"title":{},"body":{"components/CartModalComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["constructor(dataservice",{"_index":1321,"title":{},"body":{"components/GetRoleComponent.html":{}}}],["constructor(http",{"_index":508,"title":{},"body":{"injectables/CartService.html":{},"injectables/CustomersService.html":{},"injectables/DataService.html":{},"injectables/EmployeesService.html":{},"injectables/IngredientsService.html":{},"injectables/InventoryService.html":{},"injectables/MenuService.html":{},"injectables/OrderHistoryService.html":{},"injectables/OrdersService.html":{},"injectables/TeamMemberService.html":{},"components/WeatherComponent.html":{}}}],["constructor(magnifierservice",{"_index":804,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["constructor(menuservice",{"_index":1144,"title":{},"body":{"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["constructor(private",{"_index":396,"title":{},"body":{"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/CustomerViewComponent.html":{},"injectables/CustomersService.html":{},"components/EditItemPopupComponent.html":{},"injectables/EmployeesService.html":{},"components/GetRoleComponent.html":{},"injectables/IngredientsService.html":{},"injectables/InventoryService.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"injectables/MenuService.html":{},"components/MilkTeaMenuComponent.html":{},"injectables/OrderHistoryService.html":{},"injectables/OrdersService.html":{},"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{},"injectables/TeamMemberService.html":{},"components/WeatherComponent.html":{}}}],["constructor(public",{"_index":1713,"title":{},"body":{"components/LoginButtonComponent.html":{},"components/ProfileComponent.html":{},"components/SignupButtonComponent.html":{}}}],["constructs",{"_index":1726,"title":{},"body":{"components/LogoutButtonComponent.html":{},"components/QuickAddPopupComponent.html":{}}}],["contact",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{}}}],["contactservice",{"_index":735,"title":{},"body":{"components/ContactUsComponent.html":{}}}],["contactuscomponent",{"_index":79,"title":{"components/ContactUsComponent.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["container",{"_index":764,"title":{},"body":{"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/LearnMoreComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["containing",{"_index":1167,"title":{},"body":{"components/EditItemPopupComponent.html":{},"injectables/EmployeesService.html":{},"injectables/TeamMemberService.html":{}}}],["contains",{"_index":2048,"title":{},"body":{"classes/OrderHistory.html":{}}}],["content",{"_index":436,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/LearnMoreComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{}}}],["continuation",{"_index":2226,"title":{},"body":{"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["continue",{"_index":366,"title":{},"body":{"components/CartModalComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["continueclicked",{"_index":347,"title":{},"body":{"components/CartModalComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["control",{"_index":807,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["controls",{"_index":1315,"title":{},"body":{"components/GetRoleComponent.html":{}}}],["converted",{"_index":815,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["converts",{"_index":810,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["converttofahrenheit",{"_index":800,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["converttofahrenheit(kelvintemp",{"_index":808,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["converttofahrenheit(weatherdata.main.temp",{"_index":967,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["cool",{"_index":1626,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["coordinates",{"_index":2402,"title":{},"body":{"components/WeatherComponent.html":{}}}],["copy",{"_index":1481,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["corresponding",{"_index":829,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["cost",{"_index":583,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableConfig-4.html":{}}}],["count",{"_index":1511,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["counts",{"_index":1499,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["cover",{"_index":977,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["coverage",{"_index":2421,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creamy",{"_index":903,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["create",{"_index":1480,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["created",{"_index":2270,"title":{},"body":{"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["creating",{"_index":743,"title":{},"body":{"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["creation",{"_index":1055,"title":{},"body":{"injectables/DataService.html":{},"components/EmployeeCreationsMenuComponent.html":{},"interfaces/MenuItem.html":{},"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["creations",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{},"components/WeatherComponent.html":{},"coverage.html":{}}}],["crud",{"_index":1039,"title":{},"body":{"injectables/CustomersService.html":{},"injectables/MenuService.html":{}}}],["crypto",{"_index":2472,"title":{},"body":{"dependencies.html":{}}}],["culinary",{"_index":2180,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["cups",{"_index":1474,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["currency:'usd':'symbol':'1.2",{"_index":412,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["currency:\\'usd\\':\\'symbol\\':\\'1.2",{"_index":494,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["current",{"_index":687,"title":{},"body":{"components/ConfirmationPopupComponent.html":{},"components/CustomerViewComponent.html":{},"injectables/DataService.html":{},"components/EditItemPopupComponent.html":{},"components/GetRoleComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"injectables/MagnifierService.html":{},"interfaces/MenuItem-3.html":{},"components/MenuViewComponent.html":{},"interfaces/OrderItem.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"miscellaneous/variables.html":{}}}],["currentaction",{"_index":681,"title":{},"body":{"components/ConfirmationPopupComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["currentcount",{"_index":1506,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["currentitems",{"_index":553,"title":{},"body":{"injectables/CartService.html":{}}}],["currentitems.splice(index",{"_index":558,"title":{},"body":{"injectables/CartService.html":{}}}],["currently",{"_index":10,"title":{},"body":{"injectables/ActiveComponentService.html":{},"components/CartModalComponent.html":{}}}],["currentuseriscashier",{"_index":1056,"title":{},"body":{"injectables/DataService.html":{}}}],["currentuserismanager",{"_index":1057,"title":{},"body":{"injectables/DataService.html":{}}}],["cursor",{"_index":645,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/RestockReportPopupComponent.html":{}}}],["customer",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"interfaces/CustomerMenuItem.html":{},"components/CustomerViewComponent.html":{},"classes/Customers.html":{},"injectables/CustomersService.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem-2.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"classes/OrderHistory.html":{},"classes/Orders.html":{},"injectables/OrdersService.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{}}}],["customer_id",{"_index":1024,"title":{},"body":{"classes/Customers.html":{},"classes/OrderHistory.html":{},"classes/Orders.html":{},"injectables/OrdersService.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["customeremail",{"_index":726,"title":{},"body":{"components/ContactUsComponent.html":{}}}],["customerfeedback",{"_index":727,"title":{},"body":{"components/ContactUsComponent.html":{}}}],["customerid",{"_index":525,"title":{},"body":{"injectables/CartService.html":{},"injectables/OrdersService.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{}}}],["customermenuitem",{"_index":767,"title":{"interfaces/CustomerMenuItem.html":{}},"body":{"interfaces/CustomerMenuItem.html":{},"interfaces/MenuItem-2.html":{},"coverage.html":{}}}],["customername",{"_index":728,"title":{},"body":{"components/ContactUsComponent.html":{}}}],["customers",{"_index":786,"title":{"classes/Customers.html":{}},"body":{"components/CustomerViewComponent.html":{},"classes/Customers.html":{},"injectables/CustomersService.html":{},"coverage.html":{}}}],["customersservice",{"_index":1032,"title":{"injectables/CustomersService.html":{}},"body":{"injectables/CustomersService.html":{},"coverage.html":{}}}],["customerviewcomponent",{"_index":80,"title":{"components/CustomerViewComponent.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["customization",{"_index":2321,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["dashboard",{"_index":1398,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["data",{"_index":523,"title":{},"body":{"injectables/CartService.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"injectables/CustomersService.html":{},"injectables/DataService.html":{},"interfaces/DataType.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"injectables/EmployeesService.html":{},"components/GetRoleComponent.html":{},"injectables/IngredientsService.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"injectables/OrderHistoryService.html":{},"interfaces/OrderItem.html":{},"injectables/OrdersService.html":{},"components/ProfileComponent.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-5.html":{},"injectables/TeamMemberService.html":{},"components/WeatherComponent.html":{}}}],["data.foreach((ingredient",{"_index":2156,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["data.foreach((item",{"_index":1477,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["data.map((item",{"_index":2152,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["data[0].lat",{"_index":2415,"title":{},"body":{"components/WeatherComponent.html":{}}}],["data[0].lon",{"_index":2417,"title":{},"body":{"components/WeatherComponent.html":{}}}],["database",{"_index":2559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dataservice",{"_index":1049,"title":{"injectables/DataService.html":{}},"body":{"injectables/DataService.html":{},"components/GetRoleComponent.html":{},"components/NavMenuComponent.html":{},"coverage.html":{}}}],["datatype",{"_index":1117,"title":{"interfaces/DataType.html":{}},"body":{"interfaces/DataType.html":{},"coverage.html":{}}}],["date",{"_index":1550,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"classes/OrderHistory.html":{},"interfaces/OrderItem.html":{},"classes/Orders.html":{},"interfaces/SalesSummary.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{}}}],["date(end",{"_index":1455,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["date(order.order_timestamp",{"_index":1465,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["date(start",{"_index":1452,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["day",{"_index":924,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["ddd",{"_index":643,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["debugging",{"_index":1107,"title":{},"body":{"injectables/DataService.html":{}}}],["decides",{"_index":2556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decline",{"_index":682,"title":{},"body":{"components/ConfirmationPopupComponent.html":{}}}],["declineaction",{"_index":680,"title":{},"body":{"components/ConfirmationPopupComponent.html":{}}}],["declined",{"_index":700,"title":{},"body":{"components/ConfirmationPopupComponent.html":{}}}],["declines",{"_index":696,"title":{},"body":{"components/ConfirmationPopupComponent.html":{}}}],["decoration",{"_index":1006,"title":{},"body":{"components/CustomerViewComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["decorator",{"_index":393,"title":{},"body":{"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"injectables/DataService.html":{},"components/EditItemPopupComponent.html":{},"components/GetRoleComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{},"components/WeatherComponent.html":{}}}],["default",{"_index":40,"title":{},"body":{"injectables/ActiveComponentService.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"injectables/CustomersService.html":{},"injectables/DataService.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"injectables/EmployeesService.html":{},"injectables/IngredientsService.html":{},"injectables/InventoryService.html":{},"injectables/MagnifierService.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem-3.html":{},"components/MenuItemComponent.html":{},"injectables/MenuService.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"injectables/OrderHistoryService.html":{},"injectables/OrdersService.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"injectables/TeamMemberService.html":{},"components/WeatherComponent.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":496,"title":{},"body":{"injectables/CartService.html":{},"injectables/DataService.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["defined",{"_index":29,"title":{},"body":{"injectables/ActiveComponentService.html":{},"pipes/CapitalizeAndReplacePipe.html":{},"pipes/CapitalizePipe.html":{},"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"classes/Customers.html":{},"injectables/CustomersService.html":{},"injectables/DataService.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"classes/Employees.html":{},"injectables/EmployeesService.html":{},"pipes/FormatCamelCasePipe.html":{},"components/GetRoleComponent.html":{},"classes/Ingredients.html":{},"injectables/IngredientsService.html":{},"classes/Inventory.html":{},"interfaces/InventoryMap.html":{},"injectables/InventoryService.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"injectables/MagnifierService.html":{},"components/ManagerPopupComponent.html":{},"classes/Menu.html":{},"components/MenuItemComponent.html":{},"injectables/MenuService.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"classes/OrderHistory.html":{},"injectables/OrderHistoryService.html":{},"classes/Orders.html":{},"injectables/OrdersService.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"pipes/ReplacePipe.html":{},"pipes/ReplaceUnderscoresPipe.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"classes/TeamMember.html":{},"injectables/TeamMemberService.html":{},"components/WeatherComponent.html":{}}}],["defines",{"_index":2075,"title":{},"body":{"classes/Orders.html":{}}}],["delay",{"_index":1992,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["delegates",{"_index":2358,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["delete",{"_index":655,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"injectables/IngredientsService.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"injectables/InventoryService.html":{},"components/ManagerPopupComponent.html":{},"injectables/MenuService.html":{},"interfaces/OrderItem.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-3.html":{}}}],["delete:hover",{"_index":658,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/RestockReportPopupComponent.html":{}}}],["deleted",{"_index":1768,"title":{},"body":{"components/ManagerPopupComponent.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableConfig-3.html":{}}}],["deleteingredient",{"_index":1348,"title":{},"body":{"injectables/IngredientsService.html":{}}}],["deleteingredient(id",{"_index":1356,"title":{},"body":{"injectables/IngredientsService.html":{}}}],["deleteinventoryitem",{"_index":1641,"title":{},"body":{"injectables/InventoryService.html":{}}}],["deleteinventoryitem(id",{"_index":1648,"title":{},"body":{"injectables/InventoryService.html":{}}}],["deletemenuitem",{"_index":1921,"title":{},"body":{"injectables/MenuService.html":{}}}],["deletemenuitem(id",{"_index":1931,"title":{},"body":{"injectables/MenuService.html":{}}}],["deleterow",{"_index":1760,"title":{},"body":{"components/ManagerPopupComponent.html":{}}}],["deleterow(item",{"_index":1576,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["deleterow(row",{"_index":1766,"title":{},"body":{"components/ManagerPopupComponent.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableConfig-3.html":{}}}],["deleting",{"_index":1639,"title":{},"body":{"injectables/InventoryService.html":{}}}],["delicious",{"_index":1685,"title":{},"body":{"components/LearnMoreComponent.html":{}}}],["deliciously",{"_index":942,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["delightful",{"_index":948,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["delights",{"_index":934,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["dependencies",{"_index":61,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":537,"title":{},"body":{"injectables/CartService.html":{},"injectables/DataService.html":{}}}],["describes",{"_index":1778,"title":{},"body":{"classes/Menu.html":{}}}],["describing",{"_index":603,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{}}}],["description",{"_index":7,"title":{},"body":{"injectables/ActiveComponentService.html":{},"components/AuthenticationButtonComponent.html":{},"pipes/CapitalizeAndReplacePipe.html":{},"pipes/CapitalizePipe.html":{},"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"interfaces/CustomerMenuItem.html":{},"components/CustomerViewComponent.html":{},"classes/Customers.html":{},"injectables/CustomersService.html":{},"injectables/DataService.html":{},"interfaces/DataType.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"classes/Employees.html":{},"injectables/EmployeesService.html":{},"pipes/FormatCamelCasePipe.html":{},"components/GetRoleComponent.html":{},"classes/Ingredients.html":{},"injectables/IngredientsService.html":{},"classes/Inventory.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"injectables/InventoryService.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"injectables/MagnifierService.html":{},"components/ManagerPopupComponent.html":{},"classes/Menu.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-2.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"injectables/MenuService.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"classes/OrderHistory.html":{},"injectables/OrderHistoryService.html":{},"interfaces/OrderItem.html":{},"classes/Orders.html":{},"injectables/OrdersService.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"pipes/ReplacePipe.html":{},"pipes/ReplaceUnderscoresPipe.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{},"classes/TeamMember.html":{},"injectables/TeamMemberService.html":{},"components/WeatherComponent.html":{}}}],["descriptions",{"_index":1660,"title":{},"body":{"components/LearnMoreComponent.html":{}}}],["designed",{"_index":578,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{}}}],["destroyed",{"_index":2380,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["detailed",{"_index":1659,"title":{},"body":{"components/LearnMoreComponent.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{}}}],["details",{"_index":582,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"classes/OrderHistory.html":{},"classes/Orders.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-4.html":{}}}],["determine",{"_index":828,"title":{},"body":{"components/CustomerViewComponent.html":{},"components/GetRoleComponent.html":{}}}],["determined",{"_index":2375,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["determines",{"_index":824,"title":{},"body":{"components/CustomerViewComponent.html":{},"components/GetRoleComponent.html":{}}}],["dev",{"_index":2507,"title":{},"body":{"index.html":{}}}],["development",{"_index":2503,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":674,"title":{},"body":{"components/ConfirmationPopupComponent.html":{}}}],["different",{"_index":788,"title":{},"body":{"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"interfaces/MenuItem-3.html":{},"components/MenuViewComponent.html":{}}}],["direction",{"_index":433,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/LearnMoreComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["directive",{"_index":262,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"injectables/DataService.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{}}}],["directives",{"_index":287,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2516,"title":{},"body":{"index.html":{}}}],["directly",{"_index":2309,"title":{},"body":{"components/SignupButtonComponent.html":{}}}],["directory",{"_index":2520,"title":{},"body":{"index.html":{}}}],["display",{"_index":431,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/LearnMoreComponent.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{}}}],["displayed",{"_index":594,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/CustomerViewComponent.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{},"components/WeatherComponent.html":{}}}],["displaying",{"_index":327,"title":{},"body":{"components/CartModalComponent.html":{},"components/CustomerViewComponent.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-7.html":{},"components/MilkTeaMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-5.html":{},"components/WeatherComponent.html":{}}}],["displays",{"_index":673,"title":{},"body":{"components/ConfirmationPopupComponent.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{}}}],["dist",{"_index":2519,"title":{},"body":{"index.html":{}}}],["doc",{"_index":1723,"title":{},"body":{"components/LogoutButtonComponent.html":{}}}],["document",{"_index":1724,"title":{},"body":{"components/LogoutButtonComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["documentation",{"_index":2422,"title":{},"body":{"coverage.html":{}}}],["documented",{"_index":1995,"title":{},"body":{"components/NavMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["dom",{"_index":234,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-3.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{},"components/WeatherComponent.html":{}}}],["domain",{"_index":2549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dotenv",{"_index":2475,"title":{},"body":{"dependencies.html":{}}}],["drinks",{"_index":899,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["during",{"_index":1488,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["dynamic",{"_index":2463,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":2374,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["e.g",{"_index":1861,"title":{},"body":{"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["e2e",{"_index":2528,"title":{},"body":{"index.html":{}}}],["e6e6e6",{"_index":1281,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["each",{"_index":298,"title":{},"body":{"pipes/CapitalizeAndReplacePipe.html":{},"pipes/CapitalizePipe.html":{},"components/CustomerViewComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"pipes/FormatCamelCasePipe.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableConfig-3.html":{}}}],["ease",{"_index":2288,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["edit",{"_index":273,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"injectables/IngredientsService.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"injectables/InventoryService.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"injectables/MenuService.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-3.html":{},"components/WeatherComponent.html":{}}}],["edit:hover",{"_index":661,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/RestockReportPopupComponent.html":{}}}],["edited",{"_index":1154,"title":{},"body":{"components/EditItemPopupComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/ManagerPopupComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-3.html":{}}}],["editedingredientname",{"_index":1130,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["editedingredientquantity",{"_index":1131,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["editedinventoryitemname",{"_index":1132,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["editedinventoryitemquantity",{"_index":1133,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["editeditem",{"_index":1583,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["editedmenuitemname",{"_index":1134,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["editedmenuitemprice",{"_index":1135,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["editedmenuitemtype",{"_index":1136,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["editing",{"_index":1124,"title":{},"body":{"components/EditItemPopupComponent.html":{},"injectables/InventoryService.html":{}}}],["editingredient",{"_index":1349,"title":{},"body":{"injectables/IngredientsService.html":{}}}],["editingredient(id",{"_index":1358,"title":{},"body":{"injectables/IngredientsService.html":{}}}],["editinventoryitem",{"_index":1642,"title":{},"body":{"injectables/InventoryService.html":{}}}],["editinventoryitem(id",{"_index":1650,"title":{},"body":{"injectables/InventoryService.html":{}}}],["edititempopupcomponent",{"_index":81,"title":{"components/EditItemPopupComponent.html":{}},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editmenuitem",{"_index":1922,"title":{},"body":{"injectables/MenuService.html":{}}}],["editmenuitem(id",{"_index":1933,"title":{},"body":{"injectables/MenuService.html":{}}}],["editrow",{"_index":1761,"title":{},"body":{"components/ManagerPopupComponent.html":{}}}],["editrow(item",{"_index":1570,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["editrow(row",{"_index":1769,"title":{},"body":{"components/ManagerPopupComponent.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableConfig-3.html":{}}}],["edits",{"_index":1172,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["edittype",{"_index":1142,"title":{},"body":{"components/EditItemPopupComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["eee",{"_index":463,"title":{},"body":{"components/CartModalComponent.html":{}}}],["effect",{"_index":2041,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["effectively",{"_index":1739,"title":{},"body":{"components/LogoutButtonComponent.html":{}}}],["element",{"_index":261,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{}}}],["elements",{"_index":1422,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["email",{"_index":738,"title":{},"body":{"components/ContactUsComponent.html":{}}}],["emit",{"_index":2420,"title":{},"body":{"components/WeatherComponent.html":{}}}],["emits",{"_index":381,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{}}}],["emitter",{"_index":361,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{}}}],["emitters",{"_index":1763,"title":{},"body":{"components/ManagerPopupComponent.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableConfig-3.html":{}}}],["employee",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"injectables/DataService.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"classes/Employees.html":{},"injectables/EmployeesService.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"classes/OrderHistory.html":{},"classes/Orders.html":{},"injectables/OrdersService.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{},"components/WeatherComponent.html":{}}}],["employee's",{"_index":1103,"title":{},"body":{"injectables/DataService.html":{}}}],["employee.first_name",{"_index":1099,"title":{},"body":{"injectables/DataService.html":{}}}],["employee.last_name",{"_index":1101,"title":{},"body":{"injectables/DataService.html":{}}}],["employee.position",{"_index":1087,"title":{},"body":{"injectables/DataService.html":{}}}],["employee_creations",{"_index":2355,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["employee_id",{"_index":1283,"title":{},"body":{"classes/Employees.html":{},"classes/OrderHistory.html":{},"classes/Orders.html":{},"injectables/OrdersService.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["employeecreations",{"_index":2344,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["employeecreationsitems",{"_index":2333,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["employeecreationsmenucomponent",{"_index":82,"title":{"components/EmployeeCreationsMenuComponent.html":{}},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["employeeid",{"_index":2096,"title":{},"body":{"injectables/OrdersService.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{}}}],["employees",{"_index":1070,"title":{"classes/Employees.html":{}},"body":{"injectables/DataService.html":{},"classes/Employees.html":{},"injectables/EmployeesService.html":{},"coverage.html":{}}}],["employees.filter(employee",{"_index":1086,"title":{},"body":{"injectables/DataService.html":{}}}],["employees.find(employee",{"_index":1098,"title":{},"body":{"injectables/DataService.html":{}}}],["employeesservice",{"_index":1288,"title":{"injectables/EmployeesService.html":{}},"body":{"injectables/EmployeesService.html":{},"coverage.html":{}}}],["empty",{"_index":620,"title":{},"body":{"components/CheckoutPopupComponent.html":{}}}],["enables",{"_index":1053,"title":{},"body":{"injectables/DataService.html":{},"components/EmployeeCreationsMenuComponent.html":{},"interfaces/MenuItem.html":{},"components/MenuItemComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["end",{"_index":1406,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/MenuItemComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{},"index.html":{}}}],["enddate",{"_index":1454,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["enddate.setutchours(23",{"_index":1456,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["endpoint",{"_index":1037,"title":{},"body":{"injectables/CustomersService.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["energize",{"_index":923,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["ensure",{"_index":1993,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["ensures",{"_index":300,"title":{},"body":{"pipes/CapitalizeAndReplacePipe.html":{}}}],["enter",{"_index":760,"title":{},"body":{"components/ContactUsComponent.html":{}}}],["entered",{"_index":1987,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["env",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["env.auth",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"injectables/CustomersService.html":{},"injectables/EmployeesService.html":{},"injectables/IngredientsService.html":{},"injectables/InventoryService.html":{},"injectables/MenuService.html":{},"injectables/OrderHistoryService.html":{},"injectables/OrdersService.html":{},"injectables/TeamMemberService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl}/customers",{"_index":1046,"title":{},"body":{"injectables/CustomersService.html":{}}}],["environment.apiurl}/employees",{"_index":1293,"title":{},"body":{"injectables/EmployeesService.html":{}}}],["environment.apiurl}/ingredients",{"_index":1364,"title":{},"body":{"injectables/IngredientsService.html":{}}}],["environment.apiurl}/inventory",{"_index":1655,"title":{},"body":{"injectables/InventoryService.html":{}}}],["environment.apiurl}/menu",{"_index":1943,"title":{},"body":{"injectables/MenuService.html":{}}}],["environment.apiurl}/order",{"_index":2071,"title":{},"body":{"injectables/OrderHistoryService.html":{}}}],["environment.apiurl}/orders",{"_index":2098,"title":{},"body":{"injectables/OrdersService.html":{}}}],["environment.apiurl}/teammembers",{"_index":2399,"title":{},"body":{"injectables/TeamMemberService.html":{}}}],["environments/environment",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"injectables/CustomersService.html":{},"injectables/EmployeesService.html":{},"injectables/IngredientsService.html":{},"injectables/InventoryService.html":{},"injectables/MenuService.html":{},"injectables/OrderHistoryService.html":{},"injectables/OrdersService.html":{},"injectables/TeamMemberService.html":{}}}],["error",{"_index":572,"title":{},"body":{"injectables/CartService.html":{},"components/ContactUsComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/MenuItem-3.html":{},"components/MenuViewComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"components/WeatherComponent.html":{}}}],["errors",{"_index":1855,"title":{},"body":{"interfaces/MenuItem-3.html":{},"components/MenuViewComponent.html":{}}}],["escape",{"_index":937,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["etc",{"_index":1850,"title":{},"body":{"interfaces/MenuItem-3.html":{},"components/MenuViewComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["event",{"_index":360,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-3.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{}}}],["event.target",{"_index":1819,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["event.target.checked",{"_index":1844,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{}}}],["eventemitter",{"_index":359,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{},"components/WeatherComponent.html":{}}}],["events",{"_index":258,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/NavMenuComponent.html":{},"components/QuickAddPopupComponent.html":{}}}],["ewbci",{"_index":860,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["example",{"_index":1916,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["excess",{"_index":1555,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["excessingredients",{"_index":1514,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["excessreport",{"_index":1554,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["execute",{"_index":2525,"title":{},"body":{"index.html":{}}}],["exit",{"_index":618,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/RestockReportPopupComponent.html":{}}}],["exit:hover",{"_index":667,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/RestockReportPopupComponent.html":{}}}],["exotic",{"_index":941,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["experience",{"_index":944,"title":{},"body":{"components/CustomerViewComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["experimental",{"_index":2174,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["exploration",{"_index":2181,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["export",{"_index":52,"title":{},"body":{"injectables/ActiveComponentService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"pipes/CapitalizeAndReplacePipe.html":{},"pipes/CapitalizePipe.html":{},"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"interfaces/CustomerMenuItem.html":{},"components/CustomerViewComponent.html":{},"classes/Customers.html":{},"injectables/CustomersService.html":{},"injectables/DataService.html":{},"interfaces/DataType.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"classes/Employees.html":{},"injectables/EmployeesService.html":{},"pipes/FormatCamelCasePipe.html":{},"components/GetRoleComponent.html":{},"classes/Ingredients.html":{},"injectables/IngredientsService.html":{},"classes/Inventory.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"injectables/InventoryService.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"injectables/MagnifierService.html":{},"components/ManagerPopupComponent.html":{},"classes/Menu.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-2.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"injectables/MenuService.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"classes/OrderHistory.html":{},"injectables/OrderHistoryService.html":{},"interfaces/OrderItem.html":{},"classes/Orders.html":{},"injectables/OrdersService.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"pipes/ReplacePipe.html":{},"pipes/ReplaceUnderscoresPipe.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{},"classes/TeamMember.html":{},"injectables/TeamMemberService.html":{},"components/WeatherComponent.html":{}}}],["exports",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["express",{"_index":1245,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{},"dependencies.html":{}}}],["f",{"_index":837,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["f2f2f2",{"_index":644,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["f3f3f3",{"_index":653,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/RestockReportPopupComponent.html":{}}}],["f9fbf9",{"_index":464,"title":{},"body":{"components/CartModalComponent.html":{}}}],["fa0202",{"_index":488,"title":{},"body":{"components/CartModalComponent.html":{}}}],["fahrenheit",{"_index":813,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["failed",{"_index":1857,"title":{},"body":{"interfaces/MenuItem-3.html":{},"components/MenuViewComponent.html":{}}}],["false",{"_index":850,"title":{},"body":{"components/CustomerViewComponent.html":{},"injectables/DataService.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":2025,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["favorite",{"_index":2386,"title":{},"body":{"classes/TeamMember.html":{}}}],["favorite_movie",{"_index":2388,"title":{},"body":{"classes/TeamMember.html":{}}}],["fb",{"_index":740,"title":{},"body":{"components/ContactUsComponent.html":{}}}],["fbf9f3",{"_index":1906,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["feature",{"_index":785,"title":{},"body":{"components/CustomerViewComponent.html":{},"injectables/MagnifierService.html":{},"components/NavMenuComponent.html":{}}}],["features",{"_index":1661,"title":{},"body":{"components/LearnMoreComponent.html":{}}}],["feedback",{"_index":718,"title":{},"body":{"components/ContactUsComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["fetch",{"_index":379,"title":{},"body":{"components/CartModalComponent.html":{},"injectables/CartService.html":{},"injectables/DataService.html":{},"components/EmployeeCreationsMenuComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{},"injectables/TeamMemberService.html":{}}}],["fetches",{"_index":1240,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"injectables/EmployeesService.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{},"components/WeatherComponent.html":{}}}],["fetching",{"_index":1052,"title":{},"body":{"injectables/DataService.html":{},"components/GetRoleComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"injectables/InventoryService.html":{},"interfaces/OrderItem.html":{},"injectables/OrdersService.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{},"components/WeatherComponent.html":{}}}],["fetchmenuitemsbytype",{"_index":1236,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["fetchmenuitemsbytype(type",{"_index":1238,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["fff",{"_index":424,"title":{},"body":{"components/CartModalComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["fields",{"_index":1161,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ActiveComponentService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"pipes/CapitalizeAndReplacePipe.html":{},"pipes/CapitalizePipe.html":{},"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"interfaces/CustomerMenuItem.html":{},"components/CustomerViewComponent.html":{},"classes/Customers.html":{},"injectables/CustomersService.html":{},"injectables/DataService.html":{},"interfaces/DataType.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"classes/Employees.html":{},"injectables/EmployeesService.html":{},"pipes/FormatCamelCasePipe.html":{},"components/GetRoleComponent.html":{},"classes/Ingredients.html":{},"injectables/IngredientsService.html":{},"classes/Inventory.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"injectables/InventoryService.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"injectables/MagnifierService.html":{},"components/ManagerPopupComponent.html":{},"classes/Menu.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-2.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"injectables/MenuService.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"classes/OrderHistory.html":{},"injectables/OrderHistoryService.html":{},"interfaces/OrderItem.html":{},"classes/Orders.html":{},"injectables/OrdersService.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"pipes/ReplacePipe.html":{},"pipes/ReplaceUnderscoresPipe.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{},"classes/TeamMember.html":{},"injectables/TeamMemberService.html":{},"components/WeatherComponent.html":{},"coverage.html":{}}}],["files",{"_index":2512,"title":{},"body":{"index.html":{}}}],["filter(key",{"_index":2160,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["final",{"_index":1111,"title":{},"body":{"injectables/DataService.html":{}}}],["finalizes",{"_index":2372,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["find",{"_index":1095,"title":{},"body":{"injectables/DataService.html":{},"pipes/ReplacePipe.html":{}}}],["firebase",{"_index":2478,"title":{},"body":{"dependencies.html":{}}}],["fires",{"_index":693,"title":{},"body":{"components/ConfirmationPopupComponent.html":{}}}],["first",{"_index":316,"title":{},"body":{"pipes/CapitalizePipe.html":{},"components/ContactUsComponent.html":{},"classes/Customers.html":{},"injectables/DataService.html":{},"interfaces/DataType.html":{},"classes/Employees.html":{},"components/SignupButtonComponent.html":{},"index.html":{}}}],["first_name",{"_index":1025,"title":{},"body":{"classes/Customers.html":{},"classes/Employees.html":{}}}],["firstletter",{"_index":313,"title":{},"body":{"pipes/CapitalizeAndReplacePipe.html":{}}}],["firstletter.touppercase()).replace(/,/g",{"_index":314,"title":{},"body":{"pipes/CapitalizeAndReplacePipe.html":{}}}],["fit",{"_index":975,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["fixed",{"_index":415,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["fixes",{"_index":1526,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["flavored",{"_index":1251,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["flavored_tea",{"_index":1862,"title":{},"body":{"interfaces/MenuItem-3.html":{},"components/MenuViewComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["flavoredtea",{"_index":2341,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["flavoredteadata",{"_index":1851,"title":{},"body":{"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuViewComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["flavoredteaitems",{"_index":2327,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["flavors",{"_index":906,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["flex",{"_index":432,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/LearnMoreComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["flexhold",{"_index":1903,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["fleximagehold",{"_index":1003,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["flextableimage",{"_index":2290,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["flow",{"_index":1702,"title":{},"body":{"components/LoginButtonComponent.html":{},"components/SignupButtonComponent.html":{}}}],["font",{"_index":443,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/CustomerViewComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["food",{"_index":1276,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"components/LearnMoreComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["footer",{"_index":999,"title":{},"body":{"components/CustomerViewComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["footerbuttons",{"_index":2291,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["forkjoin",{"_index":1384,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["form",{"_index":734,"title":{},"body":{"components/ContactUsComponent.html":{}}}],["format",{"_index":585,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableConfig-4.html":{}}}],["formatcamelcase",{"_index":1300,"title":{},"body":{"pipes/FormatCamelCasePipe.html":{},"components/MenuItemComponent.html":{}}}],["formatcamelcase(name",{"_index":1534,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["formatcamelcasearray(names",{"_index":1536,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["formatcamelcasepipe",{"_index":83,"title":{"pipes/FormatCamelCasePipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/FormatCamelCasePipe.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"coverage.html":{},"overview.html":{}}}],["formats",{"_index":2141,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["formatsingleunderscore",{"_index":2133,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["formatsingleunderscore(orditem",{"_index":1530,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["formatted",{"_index":1524,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["formatted.join",{"_index":1522,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["formatteditem",{"_index":1517,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["formatteditem.replace(/\\w\\s*/g",{"_index":1519,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["formbuilder",{"_index":741,"title":{},"body":{"components/ContactUsComponent.html":{},"components/EditItemPopupComponent.html":{}}}],["formdata",{"_index":747,"title":{},"body":{"components/ContactUsComponent.html":{}}}],["formgroup",{"_index":1181,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["formsmodule",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"components/EditItemPopupComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["fresh",{"_index":928,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["fruits",{"_index":931,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["full",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CustomerViewComponent.html":{}}}],["function",{"_index":1539,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{}}}],["function(str",{"_index":1307,"title":{},"body":{"pipes/FormatCamelCasePipe.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["functionalities",{"_index":1064,"title":{},"body":{"injectables/DataService.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/ManagerPopupComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-3.html":{}}}],["functionality",{"_index":244,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"injectables/IngredientsService.html":{},"components/LoginButtonComponent.html":{},"components/NavMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/SignupButtonComponent.html":{}}}],["further",{"_index":2534,"title":{},"body":{"index.html":{}}}],["fusion",{"_index":949,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["g",{"_index":2202,"title":{},"body":{"pipes/ReplacePipe.html":{}}}],["gadget",{"_index":2024,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["gap",{"_index":669,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["generate",{"_index":2514,"title":{},"body":{"index.html":{}}}],["generated",{"_index":2499,"title":{},"body":{"index.html":{}}}],["geographical",{"_index":2401,"title":{},"body":{"components/WeatherComponent.html":{}}}],["get(`https://api.openweathermap.org/geo/1.0/direct?q=college%20station&appid=a4a7ae9e4278c9df8a149e4138ab3c0c",{"_index":2412,"title":{},"body":{"components/WeatherComponent.html":{}}}],["getcustomers",{"_index":1041,"title":{},"body":{"injectables/CustomersService.html":{}}}],["getdata",{"_index":1060,"title":{},"body":{"injectables/DataService.html":{}}}],["getemployees",{"_index":1290,"title":{},"body":{"injectables/EmployeesService.html":{}}}],["getexcess(start",{"_index":1469,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["geting",{"_index":2064,"title":{},"body":{"injectables/OrderHistoryService.html":{}}}],["getingredientbyid",{"_index":1350,"title":{},"body":{"injectables/IngredientsService.html":{}}}],["getingredientbyid(id",{"_index":1360,"title":{},"body":{"injectables/IngredientsService.html":{}}}],["getingredientnames",{"_index":1351,"title":{},"body":{"injectables/IngredientsService.html":{}}}],["getingredients",{"_index":1352,"title":{},"body":{"injectables/IngredientsService.html":{},"injectables/OrderHistoryService.html":{}}}],["getingridents",{"_index":2065,"title":{},"body":{"injectables/OrderHistoryService.html":{}}}],["getinventory",{"_index":1643,"title":{},"body":{"injectables/InventoryService.html":{}}}],["getitembyid",{"_index":1644,"title":{},"body":{"injectables/InventoryService.html":{}}}],["getitembyid(id",{"_index":1653,"title":{},"body":{"injectables/InventoryService.html":{}}}],["getlowstock",{"_index":1427,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["getmagnifierstate",{"_index":1750,"title":{},"body":{"injectables/MagnifierService.html":{}}}],["getmenu",{"_index":1923,"title":{},"body":{"injectables/MenuService.html":{}}}],["getmenubytype",{"_index":1924,"title":{},"body":{"injectables/MenuService.html":{}}}],["getmenubytype(type",{"_index":1936,"title":{},"body":{"injectables/MenuService.html":{}}}],["getmenuitembyid",{"_index":1925,"title":{},"body":{"injectables/MenuService.html":{}}}],["getmenuitembyid(id",{"_index":1938,"title":{},"body":{"injectables/MenuService.html":{}}}],["getmenuitembyname",{"_index":1926,"title":{},"body":{"injectables/MenuService.html":{}}}],["getmenuitembyname(name",{"_index":1940,"title":{},"body":{"injectables/MenuService.html":{}}}],["getmenuitembyname(name:string",{"_index":1945,"title":{},"body":{"injectables/MenuService.html":{}}}],["getmenuitemtypes",{"_index":1927,"title":{},"body":{"injectables/MenuService.html":{}}}],["getorderhistory",{"_index":2066,"title":{},"body":{"injectables/OrderHistoryService.html":{}}}],["getorders",{"_index":2087,"title":{},"body":{"injectables/OrdersService.html":{}}}],["getrolecomponent",{"_index":84,"title":{"components/GetRoleComponent.html":{}},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gets",{"_index":818,"title":{},"body":{"components/CustomerViewComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["getteammembers",{"_index":2395,"title":{},"body":{"injectables/TeamMemberService.html":{}}}],["getting",{"_index":2495,"title":{"index.html":{}},"body":{}}],["getweathericon",{"_index":801,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["getweathericon(iconcode",{"_index":816,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["getweatherimage",{"_index":802,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["getweatherimage(humidity",{"_index":822,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["given",{"_index":388,"title":{},"body":{"components/CartModalComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["glass",{"_index":957,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["go",{"_index":1412,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"components/SignupButtonComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{},"index.html":{}}}],["goback",{"_index":1846,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{}}}],["goes",{"_index":1715,"title":{},"body":{"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{}}}],["goog",{"_index":2020,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["google",{"_index":986,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["google_translate_element",{"_index":2011,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["gradient(circle",{"_index":1956,"title":{},"body":{"components/MenuViewComponent.html":{}}}],["gradient(to",{"_index":1905,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["graph",{"_index":2537,"title":{},"body":{"modules.html":{}}}],["green",{"_index":1279,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["group",{"_index":744,"title":{},"body":{"components/ContactUsComponent.html":{}}}],["grow",{"_index":2280,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["h2",{"_index":454,"title":{},"body":{"components/CartModalComponent.html":{}}}],["h3",{"_index":1005,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["hand",{"_index":929,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["handle",{"_index":498,"title":{},"body":{"injectables/CartService.html":{},"injectables/DataService.html":{},"interfaces/MenuItem-3.html":{},"components/MenuViewComponent.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["handleimageerror",{"_index":1949,"title":{},"body":{"components/MenuViewComponent.html":{}}}],["handleimageerror(event",{"_index":1859,"title":{},"body":{"interfaces/MenuItem-3.html":{},"components/MenuViewComponent.html":{}}}],["handler",{"_index":2357,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["handles",{"_index":238,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"injectables/CustomersService.html":{},"components/EditItemPopupComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"injectables/InventoryService.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-3.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"injectables/OrdersService.html":{},"interfaces/SalesSummary.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{}}}],["handleweatherloaded",{"_index":803,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["handleweatherloaded(data",{"_index":830,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["handling",{"_index":1149,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["hdaaaw2.jpg",{"_index":865,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["header",{"_index":613,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ContactUsComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/ManagerPopupComponent.html":{},"interfaces/OrderItem.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{}}}],["headerbuttons",{"_index":668,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/RestockReportPopupComponent.html":{}}}],["healthful",{"_index":936,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["height",{"_index":421,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["hello",{"_index":2119,"title":{},"body":{"components/ProfileComponent.html":{}}}],["help",{"_index":1663,"title":{},"body":{"components/LearnMoreComponent.html":{},"index.html":{}}}],["here",{"_index":1328,"title":{},"body":{"components/GetRoleComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"components/SignupButtonComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"components/WeatherComponent.html":{}}}],["hidden",{"_index":973,"title":{},"body":{"components/CustomerViewComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["hint",{"_index":2302,"title":{},"body":{"components/SignupButtonComponent.html":{}}}],["history",{"_index":1399,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"classes/OrderHistory.html":{},"injectables/OrderHistoryService.html":{},"interfaces/OrderItem.html":{},"injectables/OrdersService.html":{},"interfaces/SalesSummary.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{}}}],["history.service",{"_index":1383,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["history.service.ts",{"_index":2062,"title":{},"body":{"injectables/OrderHistoryService.html":{},"coverage.html":{}}}],["history.service.ts:14",{"_index":2067,"title":{},"body":{"injectables/OrderHistoryService.html":{}}}],["history.service.ts:27",{"_index":2070,"title":{},"body":{"injectables/OrderHistoryService.html":{}}}],["history.service.ts:34",{"_index":2069,"title":{},"body":{"injectables/OrderHistoryService.html":{}}}],["history.service.ts:41",{"_index":2068,"title":{},"body":{"injectables/OrderHistoryService.html":{}}}],["history.ts",{"_index":2047,"title":{},"body":{"classes/OrderHistory.html":{},"coverage.html":{}}}],["history.ts:12",{"_index":2057,"title":{},"body":{"classes/OrderHistory.html":{}}}],["history.ts:16",{"_index":2058,"title":{},"body":{"classes/OrderHistory.html":{}}}],["history.ts:20",{"_index":2060,"title":{},"body":{"classes/OrderHistory.html":{}}}],["history.ts:24",{"_index":2055,"title":{},"body":{"classes/OrderHistory.html":{}}}],["history.ts:28",{"_index":2053,"title":{},"body":{"classes/OrderHistory.html":{}}}],["history.ts:8",{"_index":2059,"title":{},"body":{"classes/OrderHistory.html":{}}}],["history/create",{"_index":2102,"title":{},"body":{"injectables/OrdersService.html":{}}}],["hold",{"_index":1277,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["hook",{"_index":375,"title":{},"body":{"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/CustomerViewComponent.html":{},"injectables/DataService.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"components/WeatherComponent.html":{}}}],["hooks",{"_index":1670,"title":{},"body":{"components/LearnMoreComponent.html":{}}}],["horizontal",{"_index":450,"title":{},"body":{"components/CartModalComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["host",{"_index":2557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hosted",{"_index":1704,"title":{},"body":{"components/LoginButtonComponent.html":{}}}],["hover",{"_index":475,"title":{},"body":{"components/CartModalComponent.html":{},"components/MenuItemComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["html",{"_index":260,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{}}}],["html2canvas",{"_index":2480,"title":{},"body":{"dependencies.html":{}}}],["htmlinputelement",{"_index":1820,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["http",{"_index":511,"title":{},"body":{"injectables/CartService.html":{},"components/ContactUsComponent.html":{},"injectables/CustomersService.html":{},"injectables/DataService.html":{},"injectables/EmployeesService.html":{},"injectables/IngredientsService.html":{},"injectables/InventoryService.html":{},"injectables/MenuService.html":{},"injectables/OrderHistoryService.html":{},"injectables/OrdersService.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{},"injectables/TeamMemberService.html":{},"components/WeatherComponent.html":{}}}],["http://localhost:3000/api",{"_index":2555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:3000/api/inventory/update",{"_index":2100,"title":{},"body":{"injectables/OrdersService.html":{}}}],["http://localhost:3000/api/order",{"_index":2101,"title":{},"body":{"injectables/OrdersService.html":{}}}],["http://localhost:4200",{"_index":2509,"title":{},"body":{"index.html":{}}}],["http://openweathermap.org/img/wn/${iconcode}.png",{"_index":889,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["httpclient",{"_index":509,"title":{},"body":{"injectables/CartService.html":{},"components/ContactUsComponent.html":{},"injectables/CustomersService.html":{},"injectables/DataService.html":{},"injectables/EmployeesService.html":{},"injectables/IngredientsService.html":{},"injectables/InventoryService.html":{},"injectables/MenuService.html":{},"injectables/OrderHistoryService.html":{},"injectables/OrdersService.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{},"injectables/TeamMemberService.html":{},"components/WeatherComponent.html":{}}}],["httpclientmodule",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["https://i.ibb.co/0fchgtr/360",{"_index":836,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["https://i.ibb.co/c8qsfjz/360",{"_index":857,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["https://i.ibb.co/dcqh1cn/download.jpg",{"_index":855,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["https://lh3.googleusercontent.com/pw/adcrehefjzfwed7qcbcsg",{"_index":2165,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["humidity",{"_index":826,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["icon",{"_index":819,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["iconcode",{"_index":821,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["icons",{"_index":890,"title":{},"body":{"components/CustomerViewComponent.html":{},"dependencies.html":{}}}],["id",{"_index":772,"title":{},"body":{"interfaces/CustomerMenuItem.html":{},"classes/Customers.html":{},"components/EmployeeCreationsMenuComponent.html":{},"classes/Employees.html":{},"classes/Ingredients.html":{},"injectables/IngredientsService.html":{},"classes/Inventory.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"injectables/InventoryService.html":{},"classes/Menu.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-2.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"injectables/MenuService.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"classes/OrderHistory.html":{},"interfaces/OrderItem.html":{},"classes/Orders.html":{},"injectables/OrdersService.html":{},"interfaces/SalesSummary.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{},"classes/TeamMember.html":{}}}],["identifier",{"_index":2363,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{},"coverage.html":{}}}],["identifies",{"_index":2313,"title":{},"body":{"components/SignupButtonComponent.html":{}}}],["ids",{"_index":2051,"title":{},"body":{"classes/OrderHistory.html":{},"classes/Orders.html":{}}}],["if(count",{"_index":1516,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["ignore",{"_index":1503,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{}}}],["im",{"_index":1278,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["image",{"_index":773,"title":{},"body":{"interfaces/CustomerMenuItem.html":{},"components/CustomerViewComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"classes/Menu.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-2.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["imagecard",{"_index":1008,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["img",{"_index":984,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["immediately",{"_index":1832,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{}}}],["implementation",{"_index":1714,"title":{},"body":{"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{}}}],["implements",{"_index":309,"title":{},"body":{"pipes/CapitalizeAndReplacePipe.html":{},"pipes/CapitalizePipe.html":{},"components/CustomerViewComponent.html":{},"injectables/DataService.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"pipes/FormatCamelCasePipe.html":{},"components/GetRoleComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/ProfileComponent.html":{},"pipes/ReplacePipe.html":{},"pipes/ReplaceUnderscoresPipe.html":{},"interfaces/SalesSummary.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"components/WeatherComponent.html":{},"index.html":{}}}],["import",{"_index":47,"title":{},"body":{"injectables/ActiveComponentService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"pipes/CapitalizeAndReplacePipe.html":{},"pipes/CapitalizePipe.html":{},"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"injectables/CustomersService.html":{},"injectables/DataService.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"injectables/EmployeesService.html":{},"pipes/FormatCamelCasePipe.html":{},"components/GetRoleComponent.html":{},"injectables/IngredientsService.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"injectables/InventoryService.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"injectables/MagnifierService.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"injectables/MenuService.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"injectables/OrderHistoryService.html":{},"interfaces/OrderItem.html":{},"injectables/OrdersService.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"pipes/ReplacePipe.html":{},"pipes/ReplaceUnderscoresPipe.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{},"injectables/TeamMemberService.html":{},"components/WeatherComponent.html":{}}}],["important",{"_index":2023,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["imports",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["include",{"_index":1668,"title":{},"body":{"components/LearnMoreComponent.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{}}}],["includes",{"_index":787,"title":{},"body":{"components/CustomerViewComponent.html":{},"components/LearnMoreComponent.html":{},"components/NavMenuComponent.html":{},"components/SignupButtonComponent.html":{}}}],["including",{"_index":599,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"classes/Inventory.html":{},"injectables/InventoryService.html":{},"components/LoginButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"classes/OrderHistory.html":{},"classes/Orders.html":{},"injectables/OrdersService.html":{},"components/RestockReportPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"injectables/ActiveComponentService.html":{},"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"interfaces/CustomerMenuItem.html":{},"components/CustomerViewComponent.html":{},"classes/Customers.html":{},"injectables/CustomersService.html":{},"injectables/DataService.html":{},"interfaces/DataType.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"classes/Employees.html":{},"injectables/EmployeesService.html":{},"components/GetRoleComponent.html":{},"classes/Ingredients.html":{},"injectables/IngredientsService.html":{},"classes/Inventory.html":{},"interfaces/InventoryItem.html":{},"injectables/InventoryService.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"injectables/MagnifierService.html":{},"components/ManagerPopupComponent.html":{},"classes/Menu.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-2.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"injectables/MenuService.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"classes/OrderHistory.html":{},"injectables/OrderHistoryService.html":{},"interfaces/OrderItem.html":{},"classes/Orders.html":{},"injectables/OrdersService.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{},"classes/TeamMember.html":{},"injectables/TeamMemberService.html":{},"components/WeatherComponent.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":1636,"title":{},"body":{"interfaces/InventoryMap.html":{},"interfaces/SalesSummary.html":{}}}],["indicating",{"_index":698,"title":{},"body":{"components/ConfirmationPopupComponent.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{}}}],["indulge",{"_index":902,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ActiveComponentService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"pipes/CapitalizeAndReplacePipe.html":{},"pipes/CapitalizePipe.html":{},"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"interfaces/CustomerMenuItem.html":{},"components/CustomerViewComponent.html":{},"classes/Customers.html":{},"injectables/CustomersService.html":{},"injectables/DataService.html":{},"interfaces/DataType.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"classes/Employees.html":{},"injectables/EmployeesService.html":{},"pipes/FormatCamelCasePipe.html":{},"components/GetRoleComponent.html":{},"classes/Ingredients.html":{},"injectables/IngredientsService.html":{},"classes/Inventory.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"injectables/InventoryService.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"injectables/MagnifierService.html":{},"components/ManagerPopupComponent.html":{},"classes/Menu.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-2.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"injectables/MenuService.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"classes/OrderHistory.html":{},"injectables/OrderHistoryService.html":{},"interfaces/OrderItem.html":{},"classes/Orders.html":{},"injectables/OrdersService.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"pipes/ReplacePipe.html":{},"pipes/ReplaceUnderscoresPipe.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{},"classes/TeamMember.html":{},"injectables/TeamMemberService.html":{},"components/WeatherComponent.html":{}}}],["information",{"_index":783,"title":{},"body":{"components/CustomerViewComponent.html":{},"components/LearnMoreComponent.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"components/ProfileComponent.html":{}}}],["infused",{"_index":951,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["ingredient",{"_index":1150,"title":{},"body":{"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"classes/Ingredients.html":{},"injectables/IngredientsService.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/MenuItem.html":{},"components/MenuItemComponent.html":{},"interfaces/OrderItem.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["ingredient.trim",{"_index":1215,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["ingredient_id",{"_index":1338,"title":{},"body":{"classes/Ingredients.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["ingredient_name",{"_index":1339,"title":{},"body":{"classes/Ingredients.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["ingredient_quantity",{"_index":1340,"title":{},"body":{"classes/Ingredients.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["ingredientcountmap",{"_index":1512,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["ingredientcountmap.foreach((count",{"_index":1515,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["ingredientcountmap.get(ingredient",{"_index":1507,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["ingredientcountmap.set(ingredient",{"_index":1508,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["ingredientnames",{"_index":2129,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["ingredients",{"_index":774,"title":{"classes/Ingredients.html":{}},"body":{"interfaces/CustomerMenuItem.html":{},"components/CustomerViewComponent.html":{},"injectables/DataService.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"classes/Ingredients.html":{},"injectables/IngredientsService.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"classes/Menu.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-2.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"injectables/OrderHistoryService.html":{},"interfaces/OrderItem.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{},"coverage.html":{}}}],["ingredients.foreach(ingredient",{"_index":1505,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["ingredientsarray",{"_index":2158,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["ingredientsinput",{"_index":1137,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["ingredientsservice",{"_index":1146,"title":{"injectables/IngredientsService.html":{}},"body":{"components/EditItemPopupComponent.html":{},"injectables/IngredientsService.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{},"coverage.html":{}}}],["ingredientstableconfig",{"_index":1543,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["initial",{"_index":1409,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["initialcartitems",{"_index":544,"title":{},"body":{"injectables/CartService.html":{}}}],["initialinventory",{"_index":1494,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["initialinventory[item.item_name",{"_index":1497,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["initialization",{"_index":500,"title":{},"body":{"injectables/CartService.html":{},"injectables/DataService.html":{},"components/GetRoleComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"components/SignupButtonComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["initialize",{"_index":550,"title":{},"body":{"injectables/CartService.html":{},"components/EditItemPopupComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{}}}],["initialized",{"_index":540,"title":{},"body":{"injectables/CartService.html":{},"injectables/DataService.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{}}}],["initializeeditfields",{"_index":1139,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["initializes",{"_index":1160,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["initiate",{"_index":1701,"title":{},"body":{"components/LoginButtonComponent.html":{},"components/SignupButtonComponent.html":{},"components/WeatherComponent.html":{}}}],["initiates",{"_index":1734,"title":{},"body":{"components/LogoutButtonComponent.html":{}}}],["inject",{"_index":1742,"title":{},"body":{"components/LogoutButtonComponent.html":{}}}],["inject(document",{"_index":1743,"title":{},"body":{"components/LogoutButtonComponent.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ActiveComponentService.html":{},"injectables/CartService.html":{},"injectables/CustomersService.html":{},"injectables/DataService.html":{},"injectables/EmployeesService.html":{},"injectables/IngredientsService.html":{},"injectables/InventoryService.html":{},"injectables/MagnifierService.html":{},"injectables/MenuService.html":{},"injectables/OrderHistoryService.html":{},"injectables/OrdersService.html":{},"injectables/TeamMemberService.html":{}},"body":{"injectables/ActiveComponentService.html":{},"injectables/CartService.html":{},"injectables/CustomersService.html":{},"injectables/DataService.html":{},"injectables/EmployeesService.html":{},"injectables/IngredientsService.html":{},"injectables/InventoryService.html":{},"injectables/MagnifierService.html":{},"injectables/MenuService.html":{},"injectables/OrderHistoryService.html":{},"injectables/OrdersService.html":{},"injectables/TeamMemberService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ActiveComponentService.html":{},"injectables/CartService.html":{},"injectables/CustomersService.html":{},"injectables/DataService.html":{},"injectables/EmployeesService.html":{},"injectables/IngredientsService.html":{},"injectables/InventoryService.html":{},"injectables/MagnifierService.html":{},"injectables/MenuService.html":{},"injectables/OrderHistoryService.html":{},"injectables/OrdersService.html":{},"injectables/TeamMemberService.html":{},"overview.html":{}}}],["injected",{"_index":536,"title":{},"body":{"injectables/CartService.html":{},"injectables/DataService.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/SignupButtonComponent.html":{}}}],["injector",{"_index":538,"title":{},"body":{"injectables/CartService.html":{},"injectables/DataService.html":{}}}],["injects",{"_index":1323,"title":{},"body":{"components/GetRoleComponent.html":{}}}],["inline",{"_index":447,"title":{},"body":{"components/CartModalComponent.html":{},"components/MenuItemComponent.html":{},"components/NavMenuComponent.html":{}}}],["innertext",{"_index":1004,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["input",{"_index":390,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/NavMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{}}}],["input:disabled",{"_index":652,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/RestockReportPopupComponent.html":{}}}],["input[type=\"checkbox",{"_index":1914,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["inputs",{"_index":343,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["inputstring",{"_index":1303,"title":{},"body":{"pipes/FormatCamelCasePipe.html":{}}}],["inputstring.replace(/([a",{"_index":1304,"title":{},"body":{"pipes/FormatCamelCasePipe.html":{}}}],["inroimage",{"_index":996,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["inside",{"_index":877,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["insights",{"_index":2183,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["instance",{"_index":742,"title":{},"body":{"components/ContactUsComponent.html":{}}}],["instantiated",{"_index":1332,"title":{},"body":{"components/GetRoleComponent.html":{}}}],["instructs",{"_index":2308,"title":{},"body":{"components/SignupButtonComponent.html":{}}}],["interact",{"_index":790,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["interactions",{"_index":240,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/ContactUsComponent.html":{},"injectables/EmployeesService.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["interactive",{"_index":2320,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["interface",{"_index":579,"title":{"interfaces/CustomerMenuItem.html":{},"interfaces/DataType.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-2.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{}},"body":{"components/CheckoutPopupComponent.html":{},"interfaces/CustomerMenuItem.html":{},"classes/Customers.html":{},"interfaces/DataType.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"classes/Employees.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-2.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{},"coverage.html":{}}}],["interfaces",{"_index":768,"title":{},"body":{"interfaces/CustomerMenuItem.html":{},"interfaces/DataType.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-2.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{},"overview.html":{}}}],["intoholder",{"_index":994,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["intrigue",{"_index":2169,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["inventory",{"_index":1125,"title":{"classes/Inventory.html":{}},"body":{"components/EditItemPopupComponent.html":{},"classes/Inventory.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"injectables/InventoryService.html":{},"interfaces/OrderItem.html":{},"injectables/OrdersService.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-5.html":{},"coverage.html":{}}}],["inventory_ingrident_map",{"_index":1470,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["inventory_ingrident_map.get(item",{"_index":1504,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["inventory_ingrident_map.set(item.menu_item_name",{"_index":1485,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["inventorydata",{"_index":2106,"title":{},"body":{"injectables/OrdersService.html":{}}}],["inventoryitem",{"_index":1377,"title":{"interfaces/InventoryItem.html":{}},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"injectables/InventoryService.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{},"coverage.html":{}}}],["inventoryitems.foreach((item",{"_index":1496,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["inventorymap",{"_index":1387,"title":{"interfaces/InventoryMap.html":{}},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{},"coverage.html":{}}}],["inventoryservice",{"_index":1147,"title":{"injectables/InventoryService.html":{}},"body":{"components/EditItemPopupComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"injectables/InventoryService.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{},"coverage.html":{}}}],["inventorytableconfig",{"_index":1544,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["inventoryupdateurl",{"_index":2085,"title":{},"body":{"injectables/OrdersService.html":{}}}],["invigorating",{"_index":943,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["invitems",{"_index":1429,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["irresistible",{"_index":958,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["iscashier",{"_index":1061,"title":{},"body":{"injectables/DataService.html":{}}}],["ischecked",{"_index":1824,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["ismanager",{"_index":1062,"title":{},"body":{"injectables/DataService.html":{},"components/GetRoleComponent.html":{}}}],["ismanager(user",{"_index":1115,"title":{},"body":{"injectables/DataService.html":{}}}],["it's",{"_index":1394,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["item",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"interfaces/CustomerMenuItem.html":{},"components/CustomerViewComponent.html":{},"injectables/DataService.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"classes/Inventory.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"injectables/InventoryService.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"classes/Menu.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-2.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"injectables/MenuService.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"components/WeatherComponent.html":{},"coverage.html":{}}}],["item's",{"_index":1378,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["item'},{'name",{"_index":279,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{}}}],["item).subscribe",{"_index":1588,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["item.added_toppings",{"_index":1836,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["item.added_toppings.pop",{"_index":2369,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["item.added_toppings.push(topping.menu_item_name",{"_index":1837,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["item.component",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["item.component.html",{"_index":1794,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{}}}],["item.component.scss",{"_index":1795,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{}}}],["item.component.ts",{"_index":1787,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:111",{"_index":1892,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["item.component.ts:123",{"_index":1897,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["item.component.ts:136",{"_index":1893,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["item.component.ts:142",{"_index":1894,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["item.component.ts:149",{"_index":1890,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["item.component.ts:25",{"_index":1898,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["item.component.ts:29",{"_index":1899,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["item.component.ts:33",{"_index":1889,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["item.component.ts:54",{"_index":1891,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["item.component.ts:86",{"_index":1896,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["item.component.ts:96",{"_index":1895,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["item.ingredient_name",{"_index":1440,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["item.ingredient_quantity",{"_index":1438,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["item.ingredients.slice",{"_index":1479,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["item.item_name",{"_index":1439,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["item.item_quantity",{"_index":1432,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["item.item_quantity_to_order",{"_index":1433,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["item.menu_item_name",{"_index":408,"title":{},"body":{"components/CartModalComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{}}}],["item.menu_item_price",{"_index":411,"title":{},"body":{"components/CartModalComponent.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["item.menu_item_type",{"_index":2153,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["item.model",{"_index":392,"title":{},"body":{"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{}}}],["item.model.ts",{"_index":770,"title":{},"body":{"interfaces/CustomerMenuItem.html":{},"interfaces/MenuItem-2.html":{},"coverage.html":{}}}],["item.order_items",{"_index":1466,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["item.replace(/_/g",{"_index":1518,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["item/menu",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"coverage.html":{}}}],["item?.ingredient_name",{"_index":706,"title":{},"body":{"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{}}}],["item?.ingredient_quantity",{"_index":1225,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["item?.ingredients",{"_index":1223,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["item?.item_name",{"_index":707,"title":{},"body":{"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{}}}],["item?.item_quantity",{"_index":1226,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["item?.menu_item_name",{"_index":705,"title":{},"body":{"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{}}}],["item?.menu_item_price",{"_index":1221,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["item?.menu_item_type",{"_index":1222,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["item_id",{"_index":1371,"title":{},"body":{"classes/Inventory.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["item_name",{"_index":1372,"title":{},"body":{"classes/Inventory.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"injectables/OrdersService.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["item_quantity",{"_index":1373,"title":{},"body":{"classes/Inventory.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"injectables/OrdersService.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["item_quantity_to_order",{"_index":1546,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["itemclass",{"_index":2289,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["itemingredients",{"_index":1478,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["itemingredients.concat(additionalitems",{"_index":1484,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["itemingredients.length",{"_index":1483,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["itemname",{"_index":2094,"title":{},"body":{"injectables/OrdersService.html":{}}}],["items",{"_index":328,"title":{},"body":{"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/CustomerViewComponent.html":{},"injectables/DataService.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"injectables/InventoryService.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"injectables/MenuService.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"classes/OrderHistory.html":{},"interfaces/OrderItem.html":{},"classes/Orders.html":{},"injectables/OrdersService.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-4.html":{}}}],["itemsinrange",{"_index":1462,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["itemsinrange.foreach(order",{"_index":1500,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["itemtypes",{"_index":2130,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["j",{"_index":839,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["joy",{"_index":947,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["jquery",{"_index":2484,"title":{},"body":{"dependencies.html":{}}}],["json.parse(savedcartitems",{"_index":545,"title":{},"body":{"injectables/CartService.html":{}}}],["json.parse(toppings",{"_index":1808,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{}}}],["json.stringify(items",{"_index":552,"title":{},"body":{"injectables/CartService.html":{}}}],["json.stringify(profile",{"_index":2115,"title":{},"body":{"components/ProfileComponent.html":{}}}],["justify",{"_index":435,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["k0",{"_index":863,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["karma",{"_index":2527,"title":{},"body":{"index.html":{}}}],["keep",{"_index":2548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kelvin",{"_index":812,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["kelvintemp",{"_index":814,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["key",{"_index":612,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/ManagerPopupComponent.html":{},"interfaces/OrderItem.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{}}}],["label",{"_index":1915,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["labex76f1aqghau7ppxo2fnvlsqmuhm24gnkwyv",{"_index":2167,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["large",{"_index":664,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/CustomerViewComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["larger",{"_index":2039,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["last",{"_index":761,"title":{},"body":{"components/ContactUsComponent.html":{},"classes/Customers.html":{},"injectables/DataService.html":{},"classes/Employees.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["last_name",{"_index":1026,"title":{},"body":{"classes/Customers.html":{},"classes/Employees.html":{}}}],["lat",{"_index":2414,"title":{},"body":{"components/WeatherComponent.html":{}}}],["latest",{"_index":1414,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["layout",{"_index":2014,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["leak",{"_index":2278,"title":{},"body":{"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["leaks",{"_index":2379,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["learn",{"_index":224,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{}}}],["learnmorecomponent",{"_index":223,"title":{"components/LearnMoreComponent.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{}}}],["leave",{"_index":1672,"title":{},"body":{"components/LearnMoreComponent.html":{}}}],["leaves",{"_index":916,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["left",{"_index":418,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["legend",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{},"overview.html":{}}}],["lens",{"_index":1983,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["lenssize",{"_index":1973,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["letter",{"_index":317,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["level",{"_index":2045,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["levels",{"_index":2206,"title":{},"body":{"components/RestockReportPopupComponent.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-5.html":{}}}],["leverages",{"_index":2301,"title":{},"body":{"components/SignupButtonComponent.html":{}}}],["lfjj",{"_index":844,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["li",{"_index":459,"title":{},"body":{"components/CartModalComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["li+li",{"_index":1268,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["lifecycle",{"_index":374,"title":{},"body":{"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/CustomerViewComponent.html":{},"injectables/DataService.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"components/WeatherComponent.html":{}}}],["light",{"_index":1016,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["line",{"_index":2410,"title":{},"body":{"components/WeatherComponent.html":{}}}],["linear",{"_index":1904,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["list",{"_index":357,"title":{},"body":{"components/CartModalComponent.html":{},"injectables/CustomersService.html":{},"injectables/DataService.html":{},"components/EmployeeCreationsMenuComponent.html":{},"injectables/EmployeesService.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"injectables/TeamMemberService.html":{}}}],["lists",{"_index":1912,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["literal",{"_index":2148,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["load",{"_index":1858,"title":{},"body":{"interfaces/MenuItem-3.html":{},"components/MenuViewComponent.html":{}}}],["loaded",{"_index":832,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["loader",{"_index":2469,"title":{},"body":{"dependencies.html":{}}}],["loading",{"_index":1799,"title":{},"body":{"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-3.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{}}}],["local",{"_index":1831,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"miscellaneous/variables.html":{}}}],["location",{"_index":964,"title":{},"body":{"components/CustomerViewComponent.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"components/WeatherComponent.html":{}}}],["locations",{"_index":1690,"title":{},"body":{"components/LearnMoreComponent.html":{}}}],["log",{"_index":246,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CustomerViewComponent.html":{},"components/GetRoleComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["logging",{"_index":1106,"title":{},"body":{"injectables/DataService.html":{},"components/LogoutButtonComponent.html":{}}}],["logic",{"_index":1411,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuViewComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{}}}],["login",{"_index":277,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{}}}],["loginbuttoncomponent",{"_index":85,"title":{"components/LoginButtonComponent.html":{}},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginwithredirect",{"_index":1705,"title":{},"body":{"components/LoginButtonComponent.html":{},"components/SignupButtonComponent.html":{}}}],["logout",{"_index":278,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{}}}],["logoutbuttoncomponent",{"_index":86,"title":{"components/LogoutButtonComponent.html":{}},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["lon",{"_index":2416,"title":{},"body":{"components/WeatherComponent.html":{}}}],["long",{"_index":1911,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["lowingreditems",{"_index":1426,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["lowinventitems",{"_index":1421,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["luxurious",{"_index":912,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["m",{"_index":1680,"title":{},"body":{"components/LearnMoreComponent.html":{}}}],["made",{"_index":1168,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["magnification",{"_index":1972,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["magnified",{"_index":2042,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["magnifier",{"_index":784,"title":{},"body":{"components/CustomerViewComponent.html":{},"injectables/MagnifierService.html":{},"components/NavMenuComponent.html":{}}}],["magnifier's",{"_index":1755,"title":{},"body":{"injectables/MagnifierService.html":{}}}],["magnifierenabled",{"_index":795,"title":{},"body":{"components/CustomerViewComponent.html":{},"components/NavMenuComponent.html":{}}}],["magnifierservice",{"_index":805,"title":{"injectables/MagnifierService.html":{}},"body":{"components/CustomerViewComponent.html":{},"injectables/MagnifierService.html":{},"components/NavMenuComponent.html":{},"coverage.html":{}}}],["magnifierstate",{"_index":1749,"title":{},"body":{"injectables/MagnifierService.html":{}}}],["magnifiersub",{"_index":796,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["magnify",{"_index":2030,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["magnifying",{"_index":2040,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["main",{"_index":1396,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/MenuItemComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["maintext",{"_index":1000,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["make",{"_index":1043,"title":{},"body":{"injectables/CustomersService.html":{},"injectables/EmployeesService.html":{},"injectables/InventoryService.html":{},"injectables/OrderHistoryService.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{},"injectables/TeamMemberService.html":{}}}],["makes",{"_index":636,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["making",{"_index":512,"title":{},"body":{"injectables/CartService.html":{},"injectables/DataService.html":{},"injectables/IngredientsService.html":{},"injectables/OrdersService.html":{},"components/WeatherComponent.html":{}}}],["manage",{"_index":1345,"title":{},"body":{"injectables/IngredientsService.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"injectables/TeamMemberService.html":{}}}],["management",{"_index":721,"title":{},"body":{"components/ContactUsComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"injectables/InventoryService.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["manager",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"injectables/DataService.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-3.html":{},"components/WeatherComponent.html":{}}}],["manager's",{"_index":1397,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/ManagerPopupComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-3.html":{}}}],["manager/ceo/cfo",{"_index":1114,"title":{},"body":{"injectables/DataService.html":{}}}],["managerpopupcomponent",{"_index":87,"title":{"components/ManagerPopupComponent.html":{}},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableConfig-3.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["managerviewcomponent",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["manages",{"_index":8,"title":{},"body":{"injectables/ActiveComponentService.html":{},"injectables/EmployeesService.html":{},"components/GetRoleComponent.html":{},"injectables/MagnifierService.html":{},"injectables/OrderHistoryService.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["managing",{"_index":352,"title":{},"body":{"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/CustomerViewComponent.html":{},"components/ManagerPopupComponent.html":{},"components/NavMenuComponent.html":{},"injectables/OrdersService.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableConfig-3.html":{}}}],["manipulate",{"_index":1402,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"injectables/OrderHistoryService.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["map",{"_index":987,"title":{},"body":{"components/CustomerViewComponent.html":{},"injectables/DataService.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["map(employees",{"_index":1085,"title":{},"body":{"injectables/DataService.html":{}}}],["margin",{"_index":452,"title":{},"body":{"components/CartModalComponent.html":{},"components/CustomerViewComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/LearnMoreComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["margin:0px",{"_index":982,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["marks",{"_index":394,"title":{},"body":{"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"injectables/DataService.html":{},"components/EditItemPopupComponent.html":{},"components/GetRoleComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{},"components/WeatherComponent.html":{}}}],["match",{"_index":321,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["match.charat(0).touppercase",{"_index":322,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["match.slice(1",{"_index":323,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["matches",{"_index":1096,"title":{},"body":{"injectables/DataService.html":{}}}],["matching",{"_index":57,"title":{},"body":{"injectables/ActiveComponentService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"pipes/CapitalizeAndReplacePipe.html":{},"pipes/CapitalizePipe.html":{},"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"interfaces/CustomerMenuItem.html":{},"components/CustomerViewComponent.html":{},"classes/Customers.html":{},"injectables/CustomersService.html":{},"injectables/DataService.html":{},"interfaces/DataType.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"classes/Employees.html":{},"injectables/EmployeesService.html":{},"pipes/FormatCamelCasePipe.html":{},"components/GetRoleComponent.html":{},"classes/Ingredients.html":{},"injectables/IngredientsService.html":{},"classes/Inventory.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"injectables/InventoryService.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"injectables/MagnifierService.html":{},"components/ManagerPopupComponent.html":{},"classes/Menu.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-2.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"injectables/MenuService.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"classes/OrderHistory.html":{},"injectables/OrderHistoryService.html":{},"interfaces/OrderItem.html":{},"classes/Orders.html":{},"injectables/OrdersService.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"pipes/ReplacePipe.html":{},"pipes/ReplaceUnderscoresPipe.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{},"classes/TeamMember.html":{},"injectables/TeamMemberService.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchingemployee",{"_index":1097,"title":{},"body":{"injectables/DataService.html":{}}}],["matchingemployee.position",{"_index":1105,"title":{},"body":{"injectables/DataService.html":{}}}],["max",{"_index":631,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["media",{"_index":2002,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["meet",{"_index":907,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["member",{"_index":2384,"title":{},"body":{"classes/TeamMember.html":{},"injectables/TeamMemberService.html":{}}}],["members",{"_index":2398,"title":{},"body":{"injectables/TeamMemberService.html":{}}}],["memory",{"_index":2277,"title":{},"body":{"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{}}}],["menu",{"_index":132,"title":{"classes/Menu.html":{}},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"interfaces/CustomerMenuItem.html":{},"components/CustomerViewComponent.html":{},"injectables/DataService.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"classes/Menu.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-2.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"injectables/MenuService.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"components/WeatherComponent.html":{},"coverage.html":{}}}],["menu'},{'name",{"_index":274,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{}}}],["menu.component",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["menu.component.html",{"_index":1234,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["menu.component.scss",{"_index":1233,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["menu.component.ts",{"_index":1231,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"coverage.html":{}}}],["menu.component.ts:17",{"_index":1243,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{}}}],["menu.component.ts:21",{"_index":1237,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"components/NavMenuComponent.html":{}}}],["menu.component.ts:25",{"_index":1985,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts:29",{"_index":1984,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts:33",{"_index":1241,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"components/NavMenuComponent.html":{}}}],["menu.component.ts:37",{"_index":1977,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts:40",{"_index":1239,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{}}}],["menu.component.ts:47",{"_index":1980,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts:48",{"_index":1981,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts:55",{"_index":1978,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts:57",{"_index":1967,"title":{},"body":{"components/MilkTeaMenuComponent.html":{}}}],["menu.component.ts:60",{"_index":2299,"title":{},"body":{"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["menu.component.ts:61",{"_index":1968,"title":{},"body":{"components/MilkTeaMenuComponent.html":{}}}],["menu.component.ts:64",{"_index":2297,"title":{},"body":{"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["menu.component.ts:65",{"_index":1964,"title":{},"body":{"components/MilkTeaMenuComponent.html":{}}}],["menu.component.ts:67",{"_index":1979,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["menu.component.ts:68",{"_index":2298,"title":{},"body":{"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{}}}],["menu.component.ts:72",{"_index":2294,"title":{},"body":{"components/SignatureMilkTeaMenuComponent.html":{}}}],["menu.component.ts:76",{"_index":2317,"title":{},"body":{"components/SmoothieMenuComponent.html":{}}}],["menu.component.ts:77",{"_index":1966,"title":{},"body":{"components/MilkTeaMenuComponent.html":{}}}],["menu.component.ts:80",{"_index":2315,"title":{},"body":{"components/SlushMenuComponent.html":{}}}],["menu.component.ts:84",{"_index":2296,"title":{},"body":{"components/SignatureMilkTeaMenuComponent.html":{}}}],["menu.component.ts:86",{"_index":1965,"title":{},"body":{"components/MilkTeaMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["menu.component.ts:89",{"_index":2314,"title":{},"body":{"components/SlushMenuComponent.html":{}}}],["menu.component.ts:93",{"_index":2295,"title":{},"body":{"components/SignatureMilkTeaMenuComponent.html":{}}}],["menu/:type/:name",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["menu/employee",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"components/EmployeeCreationsMenuComponent.html":{},"interfaces/MenuItem.html":{},"coverage.html":{}}}],["menu/milk",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"interfaces/MenuItem-4.html":{},"components/MilkTeaMenuComponent.html":{},"coverage.html":{}}}],["menu/nav",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"components/NavMenuComponent.html":{},"coverage.html":{}}}],["menu/signature",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"interfaces/MenuItem-5.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"coverage.html":{}}}],["menu/slush",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"interfaces/MenuItem-6.html":{},"components/SlushMenuComponent.html":{},"coverage.html":{}}}],["menu/smoothie",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"interfaces/MenuItem-7.html":{},"components/SmoothieMenuComponent.html":{},"coverage.html":{}}}],["menu/smoothies",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["menu_item_id",{"_index":775,"title":{},"body":{"interfaces/CustomerMenuItem.html":{},"components/EmployeeCreationsMenuComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"classes/Menu.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-2.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["menu_item_name",{"_index":776,"title":{},"body":{"interfaces/CustomerMenuItem.html":{},"components/EmployeeCreationsMenuComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"classes/Menu.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-2.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{}}}],["menu_item_price",{"_index":778,"title":{},"body":{"interfaces/CustomerMenuItem.html":{},"components/EmployeeCreationsMenuComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"classes/Menu.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-2.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{}}}],["menu_item_type",{"_index":777,"title":{},"body":{"interfaces/CustomerMenuItem.html":{},"components/EmployeeCreationsMenuComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"classes/Menu.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-2.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["menuimage",{"_index":992,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["menuitem",{"_index":354,"title":{"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-2.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{}},"body":{"components/CartModalComponent.html":{},"injectables/CartService.html":{},"interfaces/CustomerMenuItem.html":{},"components/EmployeeCreationsMenuComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-2.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"injectables/MenuService.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{},"coverage.html":{}}}],["menuitem.description",{"_index":1900,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["menuitem.menu_item_name",{"_index":1253,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"interfaces/MenuItem-3.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["menuitem.menu_item_price",{"_index":1254,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["menuitemcomponent",{"_index":89,"title":{"components/MenuItemComponent.html":{}},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["menuitems",{"_index":344,"title":{},"body":{"components/CartModalComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{}}}],["menuitems:menuitem",{"_index":1246,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"interfaces/MenuItem.html":{}}}],["menuservice",{"_index":1145,"title":{"injectables/MenuService.html":{}},"body":{"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"injectables/MenuService.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"coverage.html":{}}}],["menutableconfig",{"_index":1542,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["menuviewcomponent",{"_index":90,"title":{"components/MenuViewComponent.html":{}},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem-3.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["menuvisibility",{"_index":2340,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["metadata",{"_index":247,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"pipes/CapitalizeAndReplacePipe.html":{},"pipes/CapitalizePipe.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"pipes/FormatCamelCasePipe.html":{},"components/GetRoleComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"pipes/ReplacePipe.html":{},"pipes/ReplaceUnderscoresPipe.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-3.html":{},"components/WeatherComponent.html":{}}}],["method",{"_index":497,"title":{},"body":{"injectables/CartService.html":{},"injectables/DataService.html":{},"injectables/IngredientsService.html":{},"injectables/InventoryService.html":{},"components/LoginButtonComponent.html":{},"injectables/MenuService.html":{},"injectables/OrderHistoryService.html":{},"injectables/OrdersService.html":{},"components/QuickAddPopupComponent.html":{},"components/SignupButtonComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["methods",{"_index":25,"title":{},"body":{"injectables/ActiveComponentService.html":{},"pipes/CapitalizeAndReplacePipe.html":{},"pipes/CapitalizePipe.html":{},"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"injectables/CustomersService.html":{},"injectables/DataService.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"injectables/EmployeesService.html":{},"pipes/FormatCamelCasePipe.html":{},"components/GetRoleComponent.html":{},"injectables/IngredientsService.html":{},"injectables/InventoryService.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"injectables/MagnifierService.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"injectables/MenuService.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"injectables/OrderHistoryService.html":{},"injectables/OrdersService.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"pipes/ReplacePipe.html":{},"pipes/ReplaceUnderscoresPipe.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"injectables/TeamMemberService.html":{},"components/WeatherComponent.html":{}}}],["mi",{"_index":894,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["middle",{"_index":2016,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["milk",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{},"components/WeatherComponent.html":{},"coverage.html":{}}}],["milk_tea",{"_index":1868,"title":{},"body":{"interfaces/MenuItem-4.html":{},"components/MilkTeaMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["milktea",{"_index":2342,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["milkteaitems",{"_index":2328,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["milkteamenucomponent",{"_index":91,"title":{"components/MilkTeaMenuComponent.html":{}},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem-4.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["min",{"_index":2003,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["miscellaneous",{"_index":2542,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modal",{"_index":334,"title":{},"body":{"components/CartModalComponent.html":{},"components/EditItemPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-5.html":{}}}],["modal'},{'name",{"_index":267,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{}}}],["modal.component",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["modal.component.html",{"_index":337,"title":{},"body":{"components/CartModalComponent.html":{}}}],["modal.component.scss",{"_index":336,"title":{},"body":{"components/CartModalComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["modal.component.ts",{"_index":325,"title":{},"body":{"components/CartModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:20",{"_index":356,"title":{},"body":{"components/CartModalComponent.html":{}}}],["modal.component.ts:25",{"_index":365,"title":{},"body":{"components/CartModalComponent.html":{}}}],["modal.component.ts:30",{"_index":350,"title":{},"body":{"components/CartModalComponent.html":{}}}],["modal.component.ts:42",{"_index":372,"title":{},"body":{"components/CartModalComponent.html":{}}}],["modal.component.ts:53",{"_index":386,"title":{},"body":{"components/CartModalComponent.html":{}}}],["modal.component.ts:60",{"_index":384,"title":{},"body":{"components/CartModalComponent.html":{}}}],["modal.component.ts:67",{"_index":380,"title":{},"body":{"components/CartModalComponent.html":{}}}],["modal.component.ts:77",{"_index":367,"title":{},"body":{"components/CartModalComponent.html":{}}}],["modal.service",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"components/CartModalComponent.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{}}}],["modal.service.ts",{"_index":495,"title":{},"body":{"injectables/CartService.html":{},"coverage.html":{}}}],["modal.service.ts:19",{"_index":533,"title":{},"body":{"injectables/CartService.html":{}}}],["modal.service.ts:23",{"_index":510,"title":{},"body":{"injectables/CartService.html":{}}}],["modal.service.ts:38",{"_index":529,"title":{},"body":{"injectables/CartService.html":{}}}],["modal.service.ts:45",{"_index":515,"title":{},"body":{"injectables/CartService.html":{}}}],["modal.service.ts:55",{"_index":527,"title":{},"body":{"injectables/CartService.html":{}}}],["modal.service.ts:64",{"_index":517,"title":{},"body":{"injectables/CartService.html":{}}}],["modal.service.ts:75",{"_index":522,"title":{},"body":{"injectables/CartService.html":{}}}],["modal/cart",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"components/CartModalComponent.html":{},"injectables/CartService.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{},"coverage.html":{}}}],["model",{"_index":771,"title":{},"body":{"interfaces/CustomerMenuItem.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/MenuItem-2.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["modern",{"_index":908,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["modes",{"_index":2012,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["modify",{"_index":2224,"title":{},"body":{"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["module",{"_index":58,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"injectables/CustomersService.html":{},"injectables/EmployeesService.html":{},"injectables/InventoryService.html":{},"injectables/OrderHistoryService.html":{},"injectables/TeamMemberService.html":{},"overview.html":{}}}],["modules",{"_index":60,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":230,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CustomerViewComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/LearnMoreComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{},"index.html":{}}}],["more'},{'name",{"_index":276,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{}}}],["more.component",{"_index":226,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["more.component.html",{"_index":1667,"title":{},"body":{"components/LearnMoreComponent.html":{}}}],["more.component.scss",{"_index":1666,"title":{},"body":{"components/LearnMoreComponent.html":{}}}],["more.component.ts",{"_index":1658,"title":{},"body":{"components/LearnMoreComponent.html":{},"coverage.html":{}}}],["more/learn",{"_index":225,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LearnMoreComponent.html":{},"coverage.html":{}}}],["movie",{"_index":2387,"title":{},"body":{"classes/TeamMember.html":{}}}],["mynewapp",{"_index":2497,"title":{},"body":{"index.html":{}}}],["n.jpg",{"_index":848,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["nam",{"_index":1683,"title":{},"body":{"components/LearnMoreComponent.html":{}}}],["name",{"_index":19,"title":{},"body":{"injectables/ActiveComponentService.html":{},"components/AuthenticationButtonComponent.html":{},"pipes/CapitalizeAndReplacePipe.html":{},"pipes/CapitalizePipe.html":{},"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"interfaces/CustomerMenuItem.html":{},"components/CustomerViewComponent.html":{},"classes/Customers.html":{},"injectables/CustomersService.html":{},"injectables/DataService.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"classes/Employees.html":{},"injectables/EmployeesService.html":{},"pipes/FormatCamelCasePipe.html":{},"components/GetRoleComponent.html":{},"classes/Ingredients.html":{},"injectables/IngredientsService.html":{},"classes/Inventory.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"injectables/InventoryService.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"classes/Menu.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-2.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"injectables/MenuService.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"injectables/OrderHistoryService.html":{},"interfaces/OrderItem.html":{},"injectables/OrdersService.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"pipes/ReplacePipe.html":{},"pipes/ReplaceUnderscoresPipe.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"classes/TeamMember.html":{},"injectables/TeamMemberService.html":{},"components/WeatherComponent.html":{},"index.html":{}}}],["name.replace(/([a",{"_index":1535,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["names",{"_index":1242,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"injectables/IngredientsService.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/MenuItem.html":{},"interfaces/OrderItem.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["names.map(name",{"_index":1537,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["napkins",{"_index":1472,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["natural",{"_index":932,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["nav",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{}}}],["navbar",{"_index":2019,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["navigate",{"_index":2508,"title":{},"body":{"index.html":{}}}],["navigates",{"_index":1845,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{}}}],["navigating",{"_index":1791,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{}}}],["navigation",{"_index":1970,"title":{},"body":{"components/NavMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["navmenucomponent",{"_index":92,"title":{"components/NavMenuComponent.html":{}},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["necessary",{"_index":1392,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{}}}],["need",{"_index":2531,"title":{},"body":{"index.html":{}}}],["needed",{"_index":1582,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/LearnMoreComponent.html":{},"interfaces/MenuItem-3.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["new",{"_index":45,"title":{},"body":{"injectables/ActiveComponentService.html":{},"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"injectables/DataService.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"injectables/MagnifierService.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"interfaces/OrderItem.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"index.html":{}}}],["newitem",{"_index":1605,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["ng",{"_index":2505,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngonchanges",{"_index":1140,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["ngonchanges(changes",{"_index":1162,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["ngondestroy",{"_index":2233,"title":{},"body":{"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{}}}],["ngoninit",{"_index":339,"title":{},"body":{"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/CustomerViewComponent.html":{},"injectables/DataService.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"components/WeatherComponent.html":{}}}],["ngx",{"_index":2465,"title":{},"body":{"dependencies.html":{}}}],["no:hover",{"_index":711,"title":{},"body":{"components/ConfirmationPopupComponent.html":{}}}],["none",{"_index":458,"title":{},"body":{"components/CartModalComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["normal",{"_index":2000,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["northgate",{"_index":1689,"title":{},"body":{"components/LearnMoreComponent.html":{}}}],["notifies",{"_index":362,"title":{},"body":{"components/CartModalComponent.html":{}}}],["notify",{"_index":607,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{}}}],["now",{"_index":900,"title":{},"body":{"components/CustomerViewComponent.html":{},"components/LearnMoreComponent.html":{}}}],["nowrap",{"_index":2029,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["nrocx",{"_index":847,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["null",{"_index":683,"title":{},"body":{"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["number",{"_index":371,"title":{},"body":{"components/CartModalComponent.html":{},"injectables/CartService.html":{},"interfaces/CustomerMenuItem.html":{},"components/CustomerViewComponent.html":{},"classes/Customers.html":{},"interfaces/DataType.html":{},"components/EmployeeCreationsMenuComponent.html":{},"classes/Employees.html":{},"classes/Ingredients.html":{},"injectables/IngredientsService.html":{},"classes/Inventory.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"injectables/InventoryService.html":{},"classes/Menu.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-2.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"injectables/MenuService.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"classes/OrderHistory.html":{},"interfaces/OrderItem.html":{},"classes/Orders.html":{},"injectables/OrdersService.html":{},"interfaces/SalesSummary.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"classes/TeamMember.html":{}}}],["object",{"_index":614,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuViewComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{},"miscellaneous/variables.html":{}}}],["object.keys(this.selectedingredients",{"_index":2159,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["observable",{"_index":44,"title":{},"body":{"injectables/ActiveComponentService.html":{},"components/CartModalComponent.html":{},"injectables/CartService.html":{},"injectables/CustomersService.html":{},"injectables/DataService.html":{},"injectables/EmployeesService.html":{},"components/GetRoleComponent.html":{},"injectables/IngredientsService.html":{},"injectables/InventoryService.html":{},"injectables/MagnifierService.html":{},"injectables/MenuService.html":{},"injectables/OrderHistoryService.html":{},"injectables/OrdersService.html":{},"components/ProfileComponent.html":{},"injectables/TeamMemberService.html":{}}}],["obtaining",{"_index":1325,"title":{},"body":{"components/GetRoleComponent.html":{}}}],["occurs",{"_index":1487,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["oevd",{"_index":864,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["offer",{"_index":935,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["offered",{"_index":1665,"title":{},"body":{"components/LearnMoreComponent.html":{}}}],["offering",{"_index":2182,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["ogingrdientmap",{"_index":1490,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["ogingrdientmap.set(item.ingredient_name",{"_index":1492,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["onadd",{"_index":1884,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["onadd(item",{"_index":1829,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["oncancel",{"_index":1841,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["oncancelclick",{"_index":340,"title":{},"body":{"components/CartModalComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["onchanges",{"_index":1129,"title":{},"body":{"components/EditItemPopupComponent.html":{},"components/QuickAddPopupComponent.html":{}}}],["oncheckout",{"_index":2234,"title":{},"body":{"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{}}}],["oncontinue",{"_index":2371,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["oncontinueclick",{"_index":341,"title":{},"body":{"components/CartModalComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["ondestroy",{"_index":2242,"title":{},"body":{"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["one",{"_index":1482,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["oneditcancel",{"_index":1580,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["oninit",{"_index":373,"title":{},"body":{"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/CustomerViewComponent.html":{},"injectables/DataService.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"components/WeatherComponent.html":{}}}],["onitemadd(newitem",{"_index":1606,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["onitemconfirm(item",{"_index":1586,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["onitemdecline",{"_index":1598,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["onitemsave(editeditem",{"_index":1584,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["online",{"_index":1692,"title":{},"body":{"components/LearnMoreComponent.html":{}}}],["onordercompleted",{"_index":1842,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{}}}],["onquickaddcancel",{"_index":1604,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["onseasonalitemcancel",{"_index":1611,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["ontoppingchange",{"_index":1885,"title":{},"body":{"components/MenuItemComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["ontoppingchange(toppingid",{"_index":1825,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["ontoppingcheckboxchange",{"_index":1886,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["ontoppingcheckboxchange(event",{"_index":1818,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["opening",{"_index":1572,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["openpopup(type",{"_index":1556,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["operation",{"_index":333,"title":{},"body":{"components/CartModalComponent.html":{},"components/LogoutButtonComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["operations",{"_index":353,"title":{},"body":{"components/CartModalComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"injectables/CustomersService.html":{},"components/EditItemPopupComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"injectables/InventoryService.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"injectables/MenuService.html":{},"interfaces/OrderItem.html":{},"injectables/OrdersService.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-3.html":{}}}],["optional",{"_index":35,"title":{},"body":{"injectables/ActiveComponentService.html":{},"pipes/CapitalizeAndReplacePipe.html":{},"pipes/CapitalizePipe.html":{},"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"classes/Customers.html":{},"injectables/CustomersService.html":{},"injectables/DataService.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"classes/Employees.html":{},"injectables/EmployeesService.html":{},"pipes/FormatCamelCasePipe.html":{},"components/GetRoleComponent.html":{},"classes/Ingredients.html":{},"injectables/IngredientsService.html":{},"classes/Inventory.html":{},"injectables/InventoryService.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"classes/Menu.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"injectables/MenuService.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"classes/OrderHistory.html":{},"injectables/OrderHistoryService.html":{},"classes/Orders.html":{},"injectables/OrdersService.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"pipes/ReplacePipe.html":{},"pipes/ReplaceUnderscoresPipe.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"classes/TeamMember.html":{},"injectables/TeamMemberService.html":{},"components/WeatherComponent.html":{}}}],["options",{"_index":1865,"title":{},"body":{"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["order",{"_index":407,"title":{},"body":{"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/CheckoutPopupComponent.html":{},"components/CustomerViewComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"classes/OrderHistory.html":{},"injectables/OrderHistoryService.html":{},"interfaces/OrderItem.html":{},"classes/Orders.html":{},"injectables/OrdersService.html":{},"interfaces/SalesSummary.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{}}}],["order's",{"_index":2049,"title":{},"body":{"classes/OrderHistory.html":{}}}],["order.order_items.foreach((item",{"_index":1501,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["order_id",{"_index":2052,"title":{},"body":{"classes/OrderHistory.html":{},"classes/Orders.html":{}}}],["order_items",{"_index":1552,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"classes/OrderHistory.html":{},"interfaces/OrderItem.html":{},"classes/Orders.html":{},"injectables/OrdersService.html":{},"interfaces/SalesSummary.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{}}}],["order_timestamp",{"_index":1549,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"classes/OrderHistory.html":{},"interfaces/OrderItem.html":{},"classes/Orders.html":{},"interfaces/SalesSummary.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{}}}],["order_total",{"_index":1551,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"classes/OrderHistory.html":{},"interfaces/OrderItem.html":{},"classes/Orders.html":{},"injectables/OrdersService.html":{},"interfaces/SalesSummary.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{}}}],["orderdata",{"_index":2104,"title":{},"body":{"injectables/OrdersService.html":{}}}],["orderdate",{"_index":1464,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["orderdetails",{"_index":2260,"title":{},"body":{"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["ordered",{"_index":1553,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["orderhistory",{"_index":1408,"title":{"classes/OrderHistory.html":{}},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"classes/OrderHistory.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{},"coverage.html":{}}}],["orderhistoryservice",{"_index":1381,"title":{"injectables/OrderHistoryService.html":{}},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"injectables/OrderHistoryService.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{},"coverage.html":{}}}],["orderhistoryurl",{"_index":2086,"title":{},"body":{"injectables/OrdersService.html":{}}}],["orderitem",{"_index":1393,"title":{"interfaces/OrderItem.html":{}},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{},"coverage.html":{}}}],["orderitems",{"_index":520,"title":{},"body":{"injectables/CartService.html":{},"injectables/OrdersService.html":{}}}],["orders",{"_index":1693,"title":{"classes/Orders.html":{}},"body":{"components/LearnMoreComponent.html":{},"classes/Orders.html":{},"injectables/OrdersService.html":{},"coverage.html":{}}}],["orderservice",{"_index":2235,"title":{},"body":{"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{}}}],["ordersservice",{"_index":2082,"title":{"injectables/OrdersService.html":{}},"body":{"injectables/OrdersService.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{},"coverage.html":{}}}],["ordertotal",{"_index":521,"title":{},"body":{"injectables/CartService.html":{},"injectables/OrdersService.html":{}}}],["orditem",{"_index":1527,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["orditem.replace(/_/g",{"_index":1531,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["orditems",{"_index":1450,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["origin",{"_index":1738,"title":{},"body":{"components/LogoutButtonComponent.html":{},"components/NavMenuComponent.html":{}}}],["original",{"_index":2143,"title":{},"body":{"components/QuickAddPopupComponent.html":{}}}],["out",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":391,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{},"components/WeatherComponent.html":{}}}],["outputs",{"_index":345,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/WeatherComponent.html":{}}}],["overflow",{"_index":633,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["overflows",{"_index":2282,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["overview",{"_index":2209,"title":{"overview.html":{}},"body":{"components/RestockReportPopupComponent.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-5.html":{},"index.html":{},"overview.html":{}}}],["p",{"_index":440,"title":{},"body":{"components/CartModalComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["p.ingredients",{"_index":1266,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["p.name",{"_index":1264,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["p.price",{"_index":1265,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["package",{"_index":1732,"title":{"dependencies.html":{},"properties.html":{}},"body":{"components/LogoutButtonComponent.html":{},"index.html":{}}}],["padding",{"_index":430,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/LearnMoreComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["page",{"_index":715,"title":{},"body":{"components/ContactUsComponent.html":{},"components/LoginButtonComponent.html":{},"components/NavMenuComponent.html":{},"components/SignupButtonComponent.html":{},"index.html":{}}}],["pageready",{"_index":1974,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["pages/profile/profile.component",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["paq3x",{"_index":843,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["param",{"_index":54,"title":{},"body":{"injectables/ActiveComponentService.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"injectables/CustomersService.html":{},"injectables/DataService.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"injectables/EmployeesService.html":{},"components/GetRoleComponent.html":{},"injectables/IngredientsService.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"injectables/InventoryService.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"injectables/MenuService.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"injectables/OrderHistoryService.html":{},"interfaces/OrderItem.html":{},"injectables/OrdersService.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"injectables/TeamMemberService.html":{},"components/WeatherComponent.html":{}}}],["parameters",{"_index":32,"title":{},"body":{"injectables/ActiveComponentService.html":{},"pipes/CapitalizeAndReplacePipe.html":{},"pipes/CapitalizePipe.html":{},"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"injectables/CustomersService.html":{},"injectables/DataService.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"injectables/EmployeesService.html":{},"pipes/FormatCamelCasePipe.html":{},"components/GetRoleComponent.html":{},"injectables/IngredientsService.html":{},"injectables/InventoryService.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"injectables/MenuService.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"injectables/OrderHistoryService.html":{},"injectables/OrdersService.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"pipes/ReplacePipe.html":{},"pipes/ReplaceUnderscoresPipe.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"injectables/TeamMemberService.html":{},"components/WeatherComponent.html":{}}}],["params.get('name",{"_index":1803,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{}}}],["params.get('toppings",{"_index":1804,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{}}}],["params.get('type",{"_index":1802,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{}}}],["parent",{"_index":363,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{}}}],["parsefloat(item.menu_item_price",{"_index":404,"title":{},"body":{"components/CartModalComponent.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{}}}],["parsefloat(topping.menu_item_price",{"_index":1839,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["part",{"_index":2179,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["passed",{"_index":1155,"title":{},"body":{"components/EditItemPopupComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["passes",{"_index":2306,"title":{},"body":{"components/SignupButtonComponent.html":{}}}],["path",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["pearls",{"_index":954,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["people",{"_index":897,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["per",{"_index":2013,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["percent",{"_index":1424,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["percentage",{"_index":827,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["perfect",{"_index":918,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["perform",{"_index":1038,"title":{},"body":{"injectables/CustomersService.html":{},"components/GetRoleComponent.html":{},"components/LogoutButtonComponent.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["performed",{"_index":1153,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["performs",{"_index":2249,"title":{},"body":{"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["period",{"_index":1446,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["permissions",{"_index":1326,"title":{},"body":{"components/GetRoleComponent.html":{}}}],["pg",{"_index":2486,"title":{},"body":{"dependencies.html":{}}}],["phone",{"_index":756,"title":{},"body":{"components/ContactUsComponent.html":{},"classes/Customers.html":{},"classes/Employees.html":{}}}],["phone_number",{"_index":1027,"title":{},"body":{"classes/Customers.html":{},"classes/Employees.html":{}}}],["picked",{"_index":930,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["pipe",{"_index":289,"title":{"pipes/CapitalizeAndReplacePipe.html":{},"pipes/CapitalizePipe.html":{},"pipes/FormatCamelCasePipe.html":{},"pipes/ReplacePipe.html":{},"pipes/ReplaceUnderscoresPipe.html":{}},"body":{"pipes/CapitalizeAndReplacePipe.html":{},"pipes/CapitalizePipe.html":{},"pipes/FormatCamelCasePipe.html":{},"pipes/ReplacePipe.html":{},"pipes/ReplaceUnderscoresPipe.html":{},"components/WeatherComponent.html":{},"coverage.html":{}}}],["pipes",{"_index":290,"title":{},"body":{"pipes/CapitalizeAndReplacePipe.html":{},"pipes/CapitalizePipe.html":{},"pipes/FormatCamelCasePipe.html":{},"pipes/ReplacePipe.html":{},"pipes/ReplaceUnderscoresPipe.html":{},"overview.html":{}}}],["pipes/capitalize",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["pipes/capitalize.pipe",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["pipes/format",{"_index":197,"title":{},"body":{"modules/AppModule.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{}}}],["pipes/replace.pipe",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["pipes/underlineremovat.pipe.service",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["pipetransform",{"_index":308,"title":{},"body":{"pipes/CapitalizeAndReplacePipe.html":{},"pipes/CapitalizePipe.html":{},"pipes/FormatCamelCasePipe.html":{},"pipes/ReplacePipe.html":{},"pipes/ReplaceUnderscoresPipe.html":{}}}],["place",{"_index":2311,"title":{},"body":{"components/SignupButtonComponent.html":{}}}],["placed",{"_index":2054,"title":{},"body":{"classes/OrderHistory.html":{},"classes/Orders.html":{}}}],["placeholder",{"_index":988,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["plastic_seals",{"_index":1473,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["platform",{"_index":2529,"title":{},"body":{"index.html":{}}}],["playful",{"_index":946,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["point",{"_index":565,"title":{},"body":{"injectables/CartService.html":{}}}],["pointer",{"_index":646,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/NavMenuComponent.html":{},"components/RestockReportPopupComponent.html":{}}}],["populate",{"_index":1881,"title":{},"body":{"interfaces/MenuItem-7.html":{},"components/SmoothieMenuComponent.html":{}}}],["popup",{"_index":586,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/ManagerPopupComponent.html":{},"interfaces/OrderItem.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{}}}],["popup'},{'name",{"_index":270,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{}}}],["popup.component",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["popup.component.html",{"_index":588,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{}}}],["popup.component.scss",{"_index":587,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{}}}],["popup.component.ts",{"_index":577,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{},"coverage.html":{}}}],["popup.component.ts:100",{"_index":2149,"title":{},"body":{"components/QuickAddPopupComponent.html":{}}}],["popup.component.ts:102",{"_index":1159,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["popup.component.ts:104",{"_index":2144,"title":{},"body":{"components/QuickAddPopupComponent.html":{}}}],["popup.component.ts:107",{"_index":2215,"title":{},"body":{"components/SeasonalItemPopupComponent.html":{}}}],["popup.component.ts:115",{"_index":2217,"title":{},"body":{"components/SeasonalItemPopupComponent.html":{}}}],["popup.component.ts:118",{"_index":2138,"title":{},"body":{"components/QuickAddPopupComponent.html":{}}}],["popup.component.ts:130",{"_index":1170,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["popup.component.ts:148",{"_index":1158,"title":{},"body":{"components/EditItemPopupComponent.html":{},"components/QuickAddPopupComponent.html":{}}}],["popup.component.ts:18",{"_index":689,"title":{},"body":{"components/ConfirmationPopupComponent.html":{}}}],["popup.component.ts:20",{"_index":2135,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["popup.component.ts:23",{"_index":692,"title":{},"body":{"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{}}}],["popup.component.ts:24",{"_index":2136,"title":{},"body":{"components/QuickAddPopupComponent.html":{}}}],["popup.component.ts:25",{"_index":2212,"title":{},"body":{"components/SeasonalItemPopupComponent.html":{}}}],["popup.component.ts:27",{"_index":1151,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["popup.component.ts:28",{"_index":695,"title":{},"body":{"components/ConfirmationPopupComponent.html":{},"components/QuickAddPopupComponent.html":{}}}],["popup.component.ts:29",{"_index":2220,"title":{},"body":{"components/SeasonalItemPopupComponent.html":{}}}],["popup.component.ts:31",{"_index":1157,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["popup.component.ts:33",{"_index":684,"title":{},"body":{"components/ConfirmationPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["popup.component.ts:35",{"_index":1156,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["popup.component.ts:36",{"_index":2140,"title":{},"body":{"components/QuickAddPopupComponent.html":{}}}],["popup.component.ts:37",{"_index":2221,"title":{},"body":{"components/SeasonalItemPopupComponent.html":{}}}],["popup.component.ts:38",{"_index":697,"title":{},"body":{"components/ConfirmationPopupComponent.html":{}}}],["popup.component.ts:39",{"_index":1178,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["popup.component.ts:41",{"_index":2219,"title":{},"body":{"components/SeasonalItemPopupComponent.html":{}}}],["popup.component.ts:42",{"_index":601,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/RestockReportPopupComponent.html":{}}}],["popup.component.ts:43",{"_index":1179,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["popup.component.ts:45",{"_index":699,"title":{},"body":{"components/ConfirmationPopupComponent.html":{}}}],["popup.component.ts:46",{"_index":2222,"title":{},"body":{"components/SeasonalItemPopupComponent.html":{}}}],["popup.component.ts:47",{"_index":597,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/RestockReportPopupComponent.html":{}}}],["popup.component.ts:48",{"_index":2145,"title":{},"body":{"components/QuickAddPopupComponent.html":{}}}],["popup.component.ts:51",{"_index":1180,"title":{},"body":{"components/EditItemPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["popup.component.ts:52",{"_index":593,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{}}}],["popup.component.ts:56",{"_index":1176,"title":{},"body":{"components/EditItemPopupComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["popup.component.ts:57",{"_index":605,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/RestockReportPopupComponent.html":{}}}],["popup.component.ts:60",{"_index":1177,"title":{},"body":{"components/EditItemPopupComponent.html":{},"components/QuickAddPopupComponent.html":{}}}],["popup.component.ts:61",{"_index":2211,"title":{},"body":{"components/SeasonalItemPopupComponent.html":{}}}],["popup.component.ts:62",{"_index":606,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/RestockReportPopupComponent.html":{}}}],["popup.component.ts:63",{"_index":1762,"title":{},"body":{"components/ManagerPopupComponent.html":{}}}],["popup.component.ts:64",{"_index":1764,"title":{},"body":{"components/ManagerPopupComponent.html":{}}}],["popup.component.ts:65",{"_index":1174,"title":{},"body":{"components/EditItemPopupComponent.html":{},"components/QuickAddPopupComponent.html":{}}}],["popup.component.ts:67",{"_index":608,"title":{},"body":{"components/CheckoutPopupComponent.html":{}}}],["popup.component.ts:69",{"_index":1175,"title":{},"body":{"components/EditItemPopupComponent.html":{},"components/QuickAddPopupComponent.html":{}}}],["popup.component.ts:71",{"_index":1770,"title":{},"body":{"components/ManagerPopupComponent.html":{}}}],["popup.component.ts:73",{"_index":1148,"title":{},"body":{"components/EditItemPopupComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["popup.component.ts:77",{"_index":2134,"title":{},"body":{"components/QuickAddPopupComponent.html":{}}}],["popup.component.ts:81",{"_index":1767,"title":{},"body":{"components/ManagerPopupComponent.html":{}}}],["popup.component.ts:85",{"_index":1169,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["popup.component.ts:87",{"_index":2214,"title":{},"body":{"components/SeasonalItemPopupComponent.html":{}}}],["popup.component.ts:88",{"_index":2146,"title":{},"body":{"components/QuickAddPopupComponent.html":{}}}],["popup.component.ts:89",{"_index":1771,"title":{},"body":{"components/ManagerPopupComponent.html":{}}}],["popup.component.ts:92",{"_index":2147,"title":{},"body":{"components/QuickAddPopupComponent.html":{}}}],["popup.component.ts:94",{"_index":1164,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["popup.component.ts:96",{"_index":1765,"title":{},"body":{"components/ManagerPopupComponent.html":{},"components/QuickAddPopupComponent.html":{}}}],["popup/checkout",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"components/CheckoutPopupComponent.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableConfig-4.html":{},"coverage.html":{}}}],["popup/confirmation",{"_index":185,"title":{},"body":{"modules/AppModule.html":{},"components/ConfirmationPopupComponent.html":{},"coverage.html":{}}}],["popup/edit",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"components/EditItemPopupComponent.html":{},"coverage.html":{}}}],["popup/manager",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"components/ManagerPopupComponent.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableConfig-3.html":{},"coverage.html":{}}}],["popup/quick",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"components/QuickAddPopupComponent.html":{},"coverage.html":{}}}],["popup/restock",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-5.html":{},"coverage.html":{}}}],["popup/seasonal",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"components/SeasonalItemPopupComponent.html":{},"coverage.html":{}}}],["popupconfig",{"_index":2232,"title":{},"body":{"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["popupcontent",{"_index":1407,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{}}}],["popupheader",{"_index":662,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/RestockReportPopupComponent.html":{}}}],["popuptitle",{"_index":1405,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{}}}],["position",{"_index":414,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/CustomerViewComponent.html":{},"injectables/DataService.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"classes/Employees.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["possible",{"_index":1540,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["post",{"_index":2266,"title":{},"body":{"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["poz_tzbpuwytm",{"_index":2168,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["prepares",{"_index":2370,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["presents",{"_index":580,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"interfaces/MenuItem-3.html":{},"components/MenuViewComponent.html":{},"components/ProfileComponent.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{}}}],["prevent",{"_index":2276,"title":{},"body":{"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{}}}],["previous",{"_index":1793,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{}}}],["price",{"_index":370,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"interfaces/CustomerMenuItem.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"classes/Menu.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-2.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{}}}],["private",{"_index":23,"title":{},"body":{"injectables/ActiveComponentService.html":{},"injectables/CartService.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"injectables/CustomersService.html":{},"injectables/DataService.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"injectables/EmployeesService.html":{},"injectables/IngredientsService.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"injectables/InventoryService.html":{},"components/LogoutButtonComponent.html":{},"injectables/MagnifierService.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-3.html":{},"components/MenuItemComponent.html":{},"injectables/MenuService.html":{},"components/MenuViewComponent.html":{},"components/NavMenuComponent.html":{},"injectables/OrderHistoryService.html":{},"interfaces/OrderItem.html":{},"injectables/OrdersService.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"injectables/TeamMemberService.html":{}}}],["proceed",{"_index":331,"title":{},"body":{"components/CartModalComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["process",{"_index":383,"title":{},"body":{"components/CartModalComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"components/ShoppingCartComponent.html":{},"components/SignupButtonComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{}}}],["processed",{"_index":1331,"title":{},"body":{"components/GetRoleComponent.html":{}}}],["processing",{"_index":1874,"title":{},"body":{"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["product",{"_index":1908,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["production",{"_index":2546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":228,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ProfileComponent.html":{}}}],["profile'},{'name",{"_index":280,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{}}}],["profile.component.html",{"_index":2109,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilecomponent",{"_index":93,"title":{"components/ProfileComponent.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["profilejson",{"_index":2110,"title":{},"body":{"components/ProfileComponent.html":{}}}],["project",{"_index":2498,"title":{},"body":{"index.html":{}}}],["promise",{"_index":526,"title":{},"body":{"injectables/CartService.html":{}}}],["promises",{"_index":911,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["proper",{"_index":301,"title":{},"body":{"pipes/CapitalizeAndReplacePipe.html":{}}}],["properties",{"_index":21,"title":{"properties.html":{}},"body":{"injectables/ActiveComponentService.html":{},"injectables/CartService.html":{},"components/ContactUsComponent.html":{},"interfaces/CustomerMenuItem.html":{},"components/CustomerViewComponent.html":{},"classes/Customers.html":{},"injectables/CustomersService.html":{},"injectables/DataService.html":{},"interfaces/DataType.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"classes/Employees.html":{},"injectables/EmployeesService.html":{},"classes/Ingredients.html":{},"injectables/IngredientsService.html":{},"classes/Inventory.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"injectables/InventoryService.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"injectables/MagnifierService.html":{},"classes/Menu.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-2.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"injectables/MenuService.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"classes/OrderHistory.html":{},"injectables/OrderHistoryService.html":{},"interfaces/OrderItem.html":{},"classes/Orders.html":{},"injectables/OrdersService.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{},"classes/TeamMember.html":{},"injectables/TeamMemberService.html":{},"components/WeatherComponent.html":{},"properties.html":{}}}],["property",{"_index":685,"title":{},"body":{"components/ConfirmationPopupComponent.html":{},"components/CustomerViewComponent.html":{},"interfaces/DataType.html":{}}}],["property1",{"_index":1121,"title":{},"body":{"interfaces/DataType.html":{}}}],["property2",{"_index":1122,"title":{},"body":{"interfaces/DataType.html":{}}}],["provide",{"_index":2120,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SignupButtonComponent.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-5.html":{}}}],["provided",{"_index":535,"title":{},"body":{"injectables/CartService.html":{},"injectables/DataService.html":{},"components/EditItemPopupComponent.html":{}}}],["providedin",{"_index":50,"title":{},"body":{"injectables/ActiveComponentService.html":{},"injectables/CartService.html":{},"injectables/CustomersService.html":{},"injectables/DataService.html":{},"injectables/EmployeesService.html":{},"injectables/IngredientsService.html":{},"injectables/InventoryService.html":{},"injectables/MagnifierService.html":{},"injectables/MenuService.html":{},"injectables/OrderHistoryService.html":{},"injectables/OrdersService.html":{},"injectables/TeamMemberService.html":{}}}],["providers",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"overview.html":{}}}],["provides",{"_index":243,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"injectables/CartService.html":{},"components/ContactUsComponent.html":{},"injectables/DataService.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"injectables/IngredientsService.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"injectables/MagnifierService.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"injectables/MenuService.html":{},"interfaces/OrderItem.html":{},"components/ProfileComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/SignupButtonComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-3.html":{},"injectables/TeamMemberService.html":{}}}],["providing",{"_index":1400,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"injectables/OrderHistoryService.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"components/SignupButtonComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["proxy",{"_index":2482,"title":{},"body":{"dependencies.html":{}}}],["public",{"_index":725,"title":{},"body":{"components/ContactUsComponent.html":{},"injectables/DataService.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/SignupButtonComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["puppeteer",{"_index":2488,"title":{},"body":{"dependencies.html":{}}}],["purpose",{"_index":604,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{}}}],["pushes",{"_index":2293,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["put",{"_index":2312,"title":{},"body":{"components/SignupButtonComponent.html":{}}}],["quantity",{"_index":1224,"title":{},"body":{"components/EditItemPopupComponent.html":{},"classes/Ingredients.html":{},"classes/Inventory.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"injectables/OrdersService.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["quenching",{"_index":1677,"title":{},"body":{"components/LearnMoreComponent.html":{}}}],["queries",{"_index":717,"title":{},"body":{"components/ContactUsComponent.html":{}}}],["query",{"_index":1986,"title":{},"body":{"components/NavMenuComponent.html":{},"components/WeatherComponent.html":{}}}],["questions",{"_index":762,"title":{},"body":{"components/ContactUsComponent.html":{}}}],["quick",{"_index":281,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-5.html":{},"components/WeatherComponent.html":{}}}],["quickadd",{"_index":665,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableConfig-3.html":{}}}],["quickadd(type",{"_index":1602,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["quickadd:hover",{"_index":666,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/RestockReportPopupComponent.html":{}}}],["quickaddpopupcomponent",{"_index":94,"title":{"components/QuickAddPopupComponent.html":{}},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["radial",{"_index":1955,"title":{},"body":{"components/MenuViewComponent.html":{}}}],["radius",{"_index":489,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["rainy",{"_index":868,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["rainyimageurl",{"_index":797,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["reactiveformsmodule",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["ready",{"_index":406,"title":{},"body":{"components/CartModalComponent.html":{},"components/NavMenuComponent.html":{}}}],["receive",{"_index":690,"title":{},"body":{"components/ConfirmationPopupComponent.html":{}}}],["received",{"_index":834,"title":{},"body":{"components/CustomerViewComponent.html":{},"components/GetRoleComponent.html":{}}}],["recipes",{"_index":896,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["red",{"_index":651,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/RestockReportPopupComponent.html":{}}}],["redirect",{"_index":1720,"title":{},"body":{"components/LogoutButtonComponent.html":{},"components/SignupButtonComponent.html":{}}}],["redirected",{"_index":1737,"title":{},"body":{"components/LogoutButtonComponent.html":{}}}],["redirects",{"_index":1703,"title":{},"body":{"components/LoginButtonComponent.html":{}}}],["redirecturi",{"_index":2553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reference",{"_index":1727,"title":{},"body":{"components/LogoutButtonComponent.html":{},"index.html":{}}}],["refine",{"_index":2184,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["refresh",{"_index":1401,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["refreshes",{"_index":1413,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["refreshing",{"_index":933,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["refreshingredients",{"_index":1417,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["refreshinventory",{"_index":1419,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["refreshmenu",{"_index":1415,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["refreshsales(start",{"_index":1447,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["regexp(find",{"_index":2201,"title":{},"body":{"pipes/ReplacePipe.html":{}}}],["related",{"_index":745,"title":{},"body":{"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"injectables/CustomersService.html":{},"injectables/DataService.html":{},"injectables/EmployeesService.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"injectables/InventoryService.html":{},"interfaces/MenuItem-4.html":{},"components/MilkTeaMenuComponent.html":{},"interfaces/OrderItem.html":{},"injectables/OrdersService.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{}}}],["relative",{"_index":446,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["relevant",{"_index":1662,"title":{},"body":{"components/LearnMoreComponent.html":{}}}],["reload",{"_index":2511,"title":{},"body":{"index.html":{}}}],["removal",{"_index":2225,"title":{},"body":{"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["remove",{"_index":330,"title":{},"body":{"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/ShoppingCartComponent.html":{}}}],["removed",{"_index":389,"title":{},"body":{"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{}}}],["removeitem",{"_index":342,"title":{},"body":{"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/ShoppingCartComponent.html":{}}}],["removeitem(index",{"_index":385,"title":{},"body":{"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["removes",{"_index":387,"title":{},"body":{"components/CartModalComponent.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{}}}],["removing",{"_index":2362,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["reopen",{"_index":1581,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["repeat",{"_index":978,"title":{},"body":{"components/CustomerViewComponent.html":{},"components/NavMenuComponent.html":{}}}],["replace",{"_index":2197,"title":{},"body":{"pipes/ReplacePipe.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["replace(/\\b\\w/g",{"_index":312,"title":{},"body":{"pipes/CapitalizeAndReplacePipe.html":{}}}],["replace.pipe",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["replace.pipe.ts",{"_index":292,"title":{},"body":{"pipes/CapitalizeAndReplacePipe.html":{},"coverage.html":{}}}],["replace.pipe.ts:11",{"_index":307,"title":{},"body":{"pipes/CapitalizeAndReplacePipe.html":{}}}],["replacement",{"_index":2198,"title":{},"body":{"pipes/ReplacePipe.html":{}}}],["replacepipe",{"_index":95,"title":{"pipes/ReplacePipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/ReplacePipe.html":{},"coverage.html":{},"overview.html":{}}}],["replaceunderscores",{"_index":409,"title":{},"body":{"components/CartModalComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"pipes/ReplaceUnderscoresPipe.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["replaceunderscorespipe",{"_index":96,"title":{"pipes/ReplaceUnderscoresPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/ReplaceUnderscoresPipe.html":{},"coverage.html":{},"overview.html":{}}}],["replacing",{"_index":294,"title":{},"body":{"pipes/CapitalizeAndReplacePipe.html":{},"components/QuickAddPopupComponent.html":{},"pipes/ReplacePipe.html":{},"pipes/ReplaceUnderscoresPipe.html":{}}}],["report",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-5.html":{},"components/WeatherComponent.html":{},"coverage.html":{}}}],["reportpopup(type",{"_index":1613,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["reports",{"_index":2205,"title":{},"body":{"components/RestockReportPopupComponent.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-5.html":{}}}],["represents",{"_index":609,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"classes/Ingredients.html":{},"classes/Inventory.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{},"classes/TeamMember.html":{}}}],["request",{"_index":1489,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{}}}],["requests",{"_index":513,"title":{},"body":{"injectables/CartService.html":{},"injectables/CustomersService.html":{},"injectables/DataService.html":{},"injectables/EmployeesService.html":{},"injectables/IngredientsService.html":{},"injectables/InventoryService.html":{},"injectables/OrderHistoryService.html":{},"injectables/OrdersService.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{},"injectables/TeamMemberService.html":{},"components/WeatherComponent.html":{}}}],["requirements",{"_index":2207,"title":{},"body":{"components/RestockReportPopupComponent.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-5.html":{}}}],["reset",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resetting",{"_index":2377,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["resize",{"_index":451,"title":{},"body":{"components/CartModalComponent.html":{}}}],["respond",{"_index":1165,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["response",{"_index":567,"title":{},"body":{"injectables/CartService.html":{},"components/EmployeeCreationsMenuComponent.html":{},"interfaces/MenuItem.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{}}}],["responsible",{"_index":326,"title":{},"body":{"components/CartModalComponent.html":{},"components/CustomerViewComponent.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-7.html":{},"components/MilkTeaMenuComponent.html":{},"components/ProfileComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{}}}],["restock",{"_index":282,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-5.html":{},"components/WeatherComponent.html":{}}}],["restockreport",{"_index":1545,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["restockreportpopupcomponent",{"_index":97,"title":{"components/RestockReportPopupComponent.html":{}},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-5.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["result",{"_index":1112,"title":{},"body":{"injectables/DataService.html":{}}}],["results",{"_index":56,"title":{},"body":{"injectables/ActiveComponentService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"pipes/CapitalizeAndReplacePipe.html":{},"pipes/CapitalizePipe.html":{},"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"interfaces/CustomerMenuItem.html":{},"components/CustomerViewComponent.html":{},"classes/Customers.html":{},"injectables/CustomersService.html":{},"injectables/DataService.html":{},"interfaces/DataType.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"classes/Employees.html":{},"injectables/EmployeesService.html":{},"pipes/FormatCamelCasePipe.html":{},"components/GetRoleComponent.html":{},"classes/Ingredients.html":{},"injectables/IngredientsService.html":{},"classes/Inventory.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"injectables/InventoryService.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"injectables/MagnifierService.html":{},"components/ManagerPopupComponent.html":{},"classes/Menu.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-2.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"injectables/MenuService.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"classes/OrderHistory.html":{},"injectables/OrderHistoryService.html":{},"interfaces/OrderItem.html":{},"classes/Orders.html":{},"injectables/OrdersService.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"pipes/ReplacePipe.html":{},"pipes/ReplaceUnderscoresPipe.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{},"classes/TeamMember.html":{},"injectables/TeamMemberService.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":2063,"title":{},"body":{"injectables/OrderHistoryService.html":{}}}],["retrieves",{"_index":1045,"title":{},"body":{"injectables/CustomersService.html":{},"components/ProfileComponent.html":{},"injectables/TeamMemberService.html":{},"components/WeatherComponent.html":{}}}],["return",{"_index":310,"title":{},"body":{"pipes/CapitalizeAndReplacePipe.html":{},"pipes/CapitalizePipe.html":{},"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/CustomerViewComponent.html":{},"injectables/CustomersService.html":{},"injectables/DataService.html":{},"injectables/EmployeesService.html":{},"pipes/FormatCamelCasePipe.html":{},"injectables/IngredientsService.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"injectables/InventoryService.html":{},"injectables/MagnifierService.html":{},"injectables/MenuService.html":{},"injectables/OrderHistoryService.html":{},"interfaces/OrderItem.html":{},"injectables/OrdersService.html":{},"components/QuickAddPopupComponent.html":{},"pipes/ReplacePipe.html":{},"pipes/ReplaceUnderscoresPipe.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"injectables/TeamMemberService.html":{},"components/WeatherComponent.html":{}}}],["returned",{"_index":1120,"title":{},"body":{"interfaces/DataType.html":{}}}],["returns",{"_index":38,"title":{},"body":{"injectables/ActiveComponentService.html":{},"pipes/CapitalizeAndReplacePipe.html":{},"pipes/CapitalizePipe.html":{},"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"injectables/CustomersService.html":{},"injectables/DataService.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"injectables/EmployeesService.html":{},"pipes/FormatCamelCasePipe.html":{},"components/GetRoleComponent.html":{},"injectables/IngredientsService.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"injectables/InventoryService.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"injectables/MagnifierService.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"injectables/MenuService.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"injectables/OrderHistoryService.html":{},"interfaces/OrderItem.html":{},"injectables/OrdersService.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"pipes/ReplacePipe.html":{},"pipes/ReplaceUnderscoresPipe.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"injectables/TeamMemberService.html":{},"components/WeatherComponent.html":{}}}],["returnto",{"_index":1745,"title":{},"body":{"components/LogoutButtonComponent.html":{}}}],["reusable",{"_index":671,"title":{},"body":{"components/ConfirmationPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableConfig-3.html":{}}}],["rgb(100",{"_index":659,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["rgb(138",{"_index":1260,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["rgb(225",{"_index":1960,"title":{},"body":{"components/MenuViewComponent.html":{}}}],["rgb(243",{"_index":484,"title":{},"body":{"components/CartModalComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["rgb(250",{"_index":481,"title":{},"body":{"components/CartModalComponent.html":{},"components/MenuViewComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["rgb(255",{"_index":656,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["rgb(92",{"_index":477,"title":{},"body":{"components/CartModalComponent.html":{},"components/MenuItemComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["rgba(0",{"_index":428,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/NavMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["rgba(0,0,0,0.1",{"_index":2316,"title":{},"body":{"components/SlushMenuComponent.html":{}}}],["rgba(255",{"_index":2009,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["rich",{"_index":914,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["right",{"_index":487,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/LearnMoreComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["role",{"_index":1310,"title":{},"body":{"components/GetRoleComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["role'},{'name",{"_index":275,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{}}}],["role.component",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["role.component.html",{"_index":1320,"title":{},"body":{"components/GetRoleComponent.html":{}}}],["role.component.scss",{"_index":1319,"title":{},"body":{"components/GetRoleComponent.html":{}}}],["role.component.ts",{"_index":1309,"title":{},"body":{"components/GetRoleComponent.html":{},"coverage.html":{}}}],["role.component.ts:18",{"_index":1322,"title":{},"body":{"components/GetRoleComponent.html":{}}}],["role.component.ts:33",{"_index":1327,"title":{},"body":{"components/GetRoleComponent.html":{}}}],["role.service",{"_index":1330,"title":{},"body":{"components/GetRoleComponent.html":{},"components/NavMenuComponent.html":{}}}],["role.service.ts",{"_index":1051,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{}}}],["role.service.ts:100",{"_index":1068,"title":{},"body":{"injectables/DataService.html":{}}}],["role.service.ts:135",{"_index":1071,"title":{},"body":{"injectables/DataService.html":{}}}],["role.service.ts:22",{"_index":1075,"title":{},"body":{"injectables/DataService.html":{}}}],["role.service.ts:26",{"_index":1063,"title":{},"body":{"injectables/DataService.html":{}}}],["role.service.ts:41",{"_index":1073,"title":{},"body":{"injectables/DataService.html":{}}}],["role.service.ts:60",{"_index":1069,"title":{},"body":{"injectables/DataService.html":{}}}],["role.service.ts:67",{"_index":1072,"title":{},"body":{"injectables/DataService.html":{}}}],["role.service.ts:80",{"_index":1066,"title":{},"body":{"injectables/DataService.html":{}}}],["role/data",{"_index":1118,"title":{},"body":{"interfaces/DataType.html":{},"coverage.html":{}}}],["role/get",{"_index":179,"title":{},"body":{"modules/AppModule.html":{},"injectables/DataService.html":{},"components/GetRoleComponent.html":{},"components/NavMenuComponent.html":{},"coverage.html":{}}}],["roles",{"_index":1324,"title":{},"body":{"components/GetRoleComponent.html":{},"components/NavMenuComponent.html":{}}}],["root",{"_index":51,"title":{},"body":{"injectables/ActiveComponentService.html":{},"injectables/CartService.html":{},"injectables/CustomersService.html":{},"injectables/DataService.html":{},"injectables/EmployeesService.html":{},"injectables/IngredientsService.html":{},"injectables/InventoryService.html":{},"injectables/MagnifierService.html":{},"injectables/MenuService.html":{},"injectables/OrderHistoryService.html":{},"injectables/OrdersService.html":{},"injectables/TeamMemberService.html":{}}}],["root'},{'name",{"_index":265,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{}}}],["route",{"_index":1721,"title":{},"body":{"components/LogoutButtonComponent.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{}}}],["router",{"_index":1963,"title":{},"body":{"components/MenuViewComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["routermodule",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["routermodule.forroot",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(routes",{"_index":231,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":220,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":219,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":491,"title":{},"body":{"components/CartModalComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/LearnMoreComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-3.html":{}}}],["row's",{"_index":1388,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["row[col.key",{"_index":1776,"title":{},"body":{"components/ManagerPopupComponent.html":{},"components/RestockReportPopupComponent.html":{}}}],["rpn",{"_index":842,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["run",{"_index":2504,"title":{},"body":{"index.html":{}}}],["running",{"_index":2521,"title":{},"body":{"index.html":{}}}],["runtime",{"_index":1333,"title":{},"body":{"components/GetRoleComponent.html":{}}}],["rxjs",{"_index":49,"title":{},"body":{"injectables/ActiveComponentService.html":{},"injectables/CartService.html":{},"components/CustomerViewComponent.html":{},"injectables/CustomersService.html":{},"injectables/DataService.html":{},"injectables/EmployeesService.html":{},"injectables/IngredientsService.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"injectables/InventoryService.html":{},"injectables/MagnifierService.html":{},"injectables/MenuService.html":{},"injectables/OrderHistoryService.html":{},"interfaces/OrderItem.html":{},"injectables/OrdersService.html":{},"interfaces/SalesSummary.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"injectables/TeamMemberService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1076,"title":{},"body":{"injectables/DataService.html":{},"components/WeatherComponent.html":{}}}],["sales",{"_index":1389,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["salesreport",{"_index":1548,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["salessummary",{"_index":1390,"title":{"interfaces/SalesSummary.html":{}},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{},"coverage.html":{}}}],["same",{"_index":1528,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["satiated",{"_index":1674,"title":{},"body":{"components/LearnMoreComponent.html":{}}}],["save",{"_index":1143,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["save:hover",{"_index":1228,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["savedcartitems",{"_index":542,"title":{},"body":{"injectables/CartService.html":{}}}],["saveedit",{"_index":1141,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["saves",{"_index":1171,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["saving",{"_index":1127,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["savory",{"_index":1678,"title":{},"body":{"components/LearnMoreComponent.html":{}}}],["scaffolding",{"_index":2513,"title":{},"body":{"index.html":{}}}],["scale",{"_index":2044,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["scale(1.05",{"_index":476,"title":{},"body":{"components/CartModalComponent.html":{},"components/MenuItemComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["scale(1.2",{"_index":2031,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["scale(2",{"_index":2043,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["screen_hint",{"_index":2307,"title":{},"body":{"components/SignupButtonComponent.html":{}}}],["scrollable",{"_index":637,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["scrollbar",{"_index":2281,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["scrolling",{"_index":1910,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["seaosonal",{"_index":1607,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["search",{"_index":1971,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["searchquery",{"_index":1975,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["seasonal",{"_index":283,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{},"components/WeatherComponent.html":{}}}],["seasonalitem(type",{"_index":1609,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["seasonalitemadd(newitem",{"_index":1612,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["seasonalitempopupcomponent",{"_index":98,"title":{"components/SeasonalItemPopupComponent.html":{}},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["second",{"_index":1123,"title":{},"body":{"interfaces/DataType.html":{}}}],["section",{"_index":2346,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{},"classes/TeamMember.html":{}}}],["selected",{"_index":1797,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["selectedingredients",{"_index":2131,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["selecteditem",{"_index":1569,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["selectedtoppings",{"_index":1798,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["selectedtype",{"_index":2132,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["selecting",{"_index":1790,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{}}}],["selection",{"_index":926,"title":{},"body":{"components/CustomerViewComponent.html":{},"injectables/DataService.html":{},"components/EmployeeCreationsMenuComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["selector",{"_index":248,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{},"components/WeatherComponent.html":{}}}],["send",{"_index":716,"title":{},"body":{"components/ContactUsComponent.html":{}}}],["sends",{"_index":751,"title":{},"body":{"components/ContactUsComponent.html":{}}}],["senses",{"_index":961,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["sent",{"_index":746,"title":{},"body":{"components/ContactUsComponent.html":{},"injectables/OrdersService.html":{}}}],["separate",{"_index":640,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/RestockReportPopupComponent.html":{}}}],["separated",{"_index":1298,"title":{},"body":{"pipes/FormatCamelCasePipe.html":{}}}],["serve",{"_index":2506,"title":{},"body":{"index.html":{}}}],["server",{"_index":566,"title":{},"body":{"injectables/CartService.html":{},"components/ContactUsComponent.html":{},"interfaces/DataType.html":{},"injectables/OrdersService.html":{},"index.html":{}}}],["serves",{"_index":1395,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/LoginButtonComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{}}}],["service",{"_index":351,"title":{},"body":{"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"injectables/DataService.html":{},"components/EditItemPopupComponent.html":{},"components/GetRoleComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/LearnMoreComponent.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{}}}],["services",{"_index":2325,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["services/currentcomp.service",{"_index":1789,"title":{},"body":{"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-3.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["services/ingredients.service",{"_index":1379,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["services/inventory.service",{"_index":1380,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["services/magnifier.service",{"_index":867,"title":{},"body":{"components/CustomerViewComponent.html":{},"components/NavMenuComponent.html":{}}}],["services/menu.service",{"_index":1244,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{}}}],["services/order",{"_index":1382,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["services/orders.service",{"_index":2258,"title":{},"body":{"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{}}}],["session",{"_index":530,"title":{},"body":{"injectables/CartService.html":{}}}],["sessionstorage.getitem('cartitems",{"_index":543,"title":{},"body":{"injectables/CartService.html":{}}}],["sessionstorage.removeitem('cartitems",{"_index":562,"title":{},"body":{"injectables/CartService.html":{}}}],["sessionstorage.setitem('cartitems",{"_index":551,"title":{},"body":{"injectables/CartService.html":{}}}],["set",{"_index":37,"title":{},"body":{"injectables/ActiveComponentService.html":{},"components/AuthenticationButtonComponent.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-3.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/SignupButtonComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["setactivecomponent",{"_index":26,"title":{},"body":{"injectables/ActiveComponentService.html":{}}}],["setactivecomponent(componentname",{"_index":27,"title":{},"body":{"injectables/ActiveComponentService.html":{}}}],["sets",{"_index":31,"title":{},"body":{"injectables/ActiveComponentService.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{}}}],["settimeout",{"_index":1989,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["setting",{"_index":1860,"title":{},"body":{"interfaces/MenuItem-3.html":{},"components/MenuViewComponent.html":{}}}],["setup",{"_index":1410,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["shadow",{"_index":426,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/NavMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/SlushMenuComponent.html":{}}}],["shopping",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{},"components/WeatherComponent.html":{}}}],["shoppingcart",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["shoppingcartcomponent",{"_index":99,"title":{"components/ShoppingCartComponent.html":{}},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["show",{"_index":2303,"title":{},"body":{"components/SignupButtonComponent.html":{}}}],["showconfirmationpopup",{"_index":1585,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["showeditpopup",{"_index":1568,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["showpopup",{"_index":1403,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{}}}],["showquickaddpopup",{"_index":1601,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["showrestockreportpopup",{"_index":1404,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["shows",{"_index":2263,"title":{},"body":{"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["showsearch",{"_index":1976,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["showseasonalitempopup",{"_index":1608,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["sign",{"_index":1718,"title":{},"body":{"components/LogoutButtonComponent.html":{},"components/SignupButtonComponent.html":{}}}],["signature",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem-5.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{},"components/WeatherComponent.html":{}}}],["signature_milk_tea",{"_index":1871,"title":{},"body":{"interfaces/MenuItem-5.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["signaturemilktea",{"_index":2343,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["signaturemilkteaitems",{"_index":2329,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["signaturemilkteamenucomponent",{"_index":100,"title":{"components/SignatureMilkTeaMenuComponent.html":{}},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem-5.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signup",{"_index":285,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{}}}],["signupbuttoncomponent",{"_index":101,"title":{"components/SignupButtonComponent.html":{}},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["simplechanges",{"_index":1163,"title":{},"body":{"components/EditItemPopupComponent.html":{},"components/QuickAddPopupComponent.html":{}}}],["single",{"_index":2218,"title":{},"body":{"components/SeasonalItemPopupComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["sip",{"_index":910,"title":{},"body":{"components/CustomerViewComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["sister",{"_index":1681,"title":{},"body":{"components/LearnMoreComponent.html":{}}}],["size",{"_index":444,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/CustomerViewComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["slush",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem-6.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{},"components/WeatherComponent.html":{}}}],["slushitems",{"_index":2330,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["slushmenucomponent",{"_index":102,"title":{"components/SlushMenuComponent.html":{}},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem-6.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["smile",{"_index":963,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["smoothie",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{}}}],["smoothiemenucomponent",{"_index":103,"title":{"components/SmoothieMenuComponent.html":{}},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["smoothies",{"_index":922,"title":{},"body":{"components/CustomerViewComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["smoothiesitems",{"_index":2332,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["social",{"_index":1696,"title":{},"body":{"components/LearnMoreComponent.html":{}}}],["socials",{"_index":1695,"title":{},"body":{"components/LearnMoreComponent.html":{}}}],["sold",{"_index":1423,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["solid",{"_index":462,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["something",{"_index":1625,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["sophistication",{"_index":909,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ActiveComponentService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationButtonComponent.html":{},"pipes/CapitalizeAndReplacePipe.html":{},"pipes/CapitalizePipe.html":{},"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"interfaces/CustomerMenuItem.html":{},"components/CustomerViewComponent.html":{},"classes/Customers.html":{},"injectables/CustomersService.html":{},"injectables/DataService.html":{},"interfaces/DataType.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"classes/Employees.html":{},"injectables/EmployeesService.html":{},"pipes/FormatCamelCasePipe.html":{},"components/GetRoleComponent.html":{},"classes/Ingredients.html":{},"injectables/IngredientsService.html":{},"classes/Inventory.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"injectables/InventoryService.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"injectables/MagnifierService.html":{},"components/ManagerPopupComponent.html":{},"classes/Menu.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-2.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"injectables/MenuService.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"classes/OrderHistory.html":{},"injectables/OrderHistoryService.html":{},"interfaces/OrderItem.html":{},"classes/Orders.html":{},"injectables/OrdersService.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"pipes/ReplacePipe.html":{},"pipes/ReplaceUnderscoresPipe.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{},"classes/TeamMember.html":{},"injectables/TeamMemberService.html":{},"components/WeatherComponent.html":{},"index.html":{}}}],["space",{"_index":437,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"pipes/FormatCamelCasePipe.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/ManagerPopupComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["spacer",{"_index":1259,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["spaces",{"_index":296,"title":{},"body":{"pipes/CapitalizeAndReplacePipe.html":{},"components/QuickAddPopupComponent.html":{},"pipes/ReplaceUnderscoresPipe.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["spacing",{"_index":302,"title":{},"body":{"pipes/CapitalizeAndReplacePipe.html":{},"components/MenuItemComponent.html":{},"components/NavMenuComponent.html":{}}}],["specific",{"_index":1669,"title":{},"body":{"components/LearnMoreComponent.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["specified",{"_index":1035,"title":{},"body":{"injectables/CustomersService.html":{},"components/LogoutButtonComponent.html":{},"pipes/ReplacePipe.html":{}}}],["specifies",{"_index":395,"title":{},"body":{"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/ContactUsComponent.html":{},"injectables/DataService.html":{},"components/EditItemPopupComponent.html":{},"components/LoginButtonComponent.html":{},"components/QuickAddPopupComponent.html":{}}}],["specify",{"_index":686,"title":{},"body":{"components/ConfirmationPopupComponent.html":{}}}],["specifying",{"_index":615,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/LearnMoreComponent.html":{},"components/LogoutButtonComponent.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{},"components/WeatherComponent.html":{}}}],["split(',').join",{"_index":1538,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["src/.../environment.prod.ts",{"_index":2544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":218,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":2424,"title":{},"body":{"coverage.html":{}}}],["src/app/app.module.ts",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/cart",{"_index":324,"title":{},"body":{"components/CartModalComponent.html":{},"injectables/CartService.html":{},"coverage.html":{}}}],["src/app/cashier",{"_index":2318,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{},"coverage.html":{}}}],["src/app/components/authentication",{"_index":236,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"coverage.html":{}}}],["src/app/components/get",{"_index":1050,"title":{},"body":{"injectables/DataService.html":{},"interfaces/DataType.html":{},"components/GetRoleComponent.html":{},"coverage.html":{}}}],["src/app/components/login",{"_index":1698,"title":{},"body":{"components/LoginButtonComponent.html":{},"coverage.html":{}}}],["src/app/components/logout",{"_index":1717,"title":{},"body":{"components/LogoutButtonComponent.html":{},"coverage.html":{}}}],["src/app/components/signup",{"_index":2300,"title":{},"body":{"components/SignupButtonComponent.html":{},"coverage.html":{}}}],["src/app/contact",{"_index":713,"title":{},"body":{"components/ContactUsComponent.html":{},"coverage.html":{}}}],["src/app/customer",{"_index":781,"title":{},"body":{"components/CustomerViewComponent.html":{},"coverage.html":{}}}],["src/app/employee",{"_index":1230,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"interfaces/MenuItem.html":{},"coverage.html":{}}}],["src/app/learn",{"_index":1657,"title":{},"body":{"components/LearnMoreComponent.html":{},"coverage.html":{}}}],["src/app/manager",{"_index":670,"title":{},"body":{"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/ManagerPopupComponent.html":{},"interfaces/OrderItem.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-5.html":{},"coverage.html":{}}}],["src/app/menu",{"_index":769,"title":{},"body":{"interfaces/CustomerMenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-2.html":{},"interfaces/MenuItem-3.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"coverage.html":{}}}],["src/app/milk",{"_index":1863,"title":{},"body":{"interfaces/MenuItem-4.html":{},"components/MilkTeaMenuComponent.html":{},"coverage.html":{}}}],["src/app/models/customers.ts",{"_index":1023,"title":{},"body":{"classes/Customers.html":{},"coverage.html":{}}}],["src/app/models/customers.ts:12",{"_index":1029,"title":{},"body":{"classes/Customers.html":{}}}],["src/app/models/customers.ts:16",{"_index":1030,"title":{},"body":{"classes/Customers.html":{}}}],["src/app/models/customers.ts:20",{"_index":1031,"title":{},"body":{"classes/Customers.html":{}}}],["src/app/models/customers.ts:8",{"_index":1028,"title":{},"body":{"classes/Customers.html":{}}}],["src/app/models/employees",{"_index":1077,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/models/employees.ts",{"_index":1282,"title":{},"body":{"classes/Employees.html":{},"coverage.html":{}}}],["src/app/models/employees.ts:12",{"_index":1285,"title":{},"body":{"classes/Employees.html":{}}}],["src/app/models/employees.ts:16",{"_index":1286,"title":{},"body":{"classes/Employees.html":{}}}],["src/app/models/employees.ts:20",{"_index":1287,"title":{},"body":{"classes/Employees.html":{}}}],["src/app/models/employees.ts:8",{"_index":1284,"title":{},"body":{"classes/Employees.html":{}}}],["src/app/models/ingredients.ts",{"_index":1336,"title":{},"body":{"classes/Ingredients.html":{},"coverage.html":{}}}],["src/app/models/ingredients.ts:12",{"_index":1342,"title":{},"body":{"classes/Ingredients.html":{}}}],["src/app/models/ingredients.ts:16",{"_index":1343,"title":{},"body":{"classes/Ingredients.html":{}}}],["src/app/models/ingredients.ts:8",{"_index":1341,"title":{},"body":{"classes/Ingredients.html":{}}}],["src/app/models/inventory.ts",{"_index":1370,"title":{},"body":{"classes/Inventory.html":{},"coverage.html":{}}}],["src/app/models/inventory.ts:12",{"_index":1375,"title":{},"body":{"classes/Inventory.html":{}}}],["src/app/models/inventory.ts:16",{"_index":1376,"title":{},"body":{"classes/Inventory.html":{}}}],["src/app/models/inventory.ts:8",{"_index":1374,"title":{},"body":{"classes/Inventory.html":{}}}],["src/app/models/menu.ts",{"_index":1777,"title":{},"body":{"classes/Menu.html":{},"coverage.html":{}}}],["src/app/models/menu.ts:12",{"_index":1784,"title":{},"body":{"classes/Menu.html":{}}}],["src/app/models/menu.ts:16",{"_index":1786,"title":{},"body":{"classes/Menu.html":{}}}],["src/app/models/menu.ts:20",{"_index":1785,"title":{},"body":{"classes/Menu.html":{}}}],["src/app/models/menu.ts:24",{"_index":1782,"title":{},"body":{"classes/Menu.html":{}}}],["src/app/models/menu.ts:28",{"_index":1781,"title":{},"body":{"classes/Menu.html":{}}}],["src/app/models/menu.ts:32",{"_index":1780,"title":{},"body":{"classes/Menu.html":{}}}],["src/app/models/menu.ts:8",{"_index":1783,"title":{},"body":{"classes/Menu.html":{}}}],["src/app/models/order",{"_index":2046,"title":{},"body":{"classes/OrderHistory.html":{},"coverage.html":{}}}],["src/app/models/orders.ts",{"_index":2074,"title":{},"body":{"classes/Orders.html":{},"coverage.html":{}}}],["src/app/models/orders.ts:12",{"_index":2078,"title":{},"body":{"classes/Orders.html":{}}}],["src/app/models/orders.ts:16",{"_index":2079,"title":{},"body":{"classes/Orders.html":{}}}],["src/app/models/orders.ts:20",{"_index":2081,"title":{},"body":{"classes/Orders.html":{}}}],["src/app/models/orders.ts:24",{"_index":2077,"title":{},"body":{"classes/Orders.html":{}}}],["src/app/models/orders.ts:28",{"_index":2076,"title":{},"body":{"classes/Orders.html":{}}}],["src/app/models/orders.ts:8",{"_index":2080,"title":{},"body":{"classes/Orders.html":{}}}],["src/app/models/teammember.ts",{"_index":2383,"title":{},"body":{"classes/TeamMember.html":{},"coverage.html":{}}}],["src/app/models/teammember.ts:12",{"_index":2391,"title":{},"body":{"classes/TeamMember.html":{}}}],["src/app/models/teammember.ts:16",{"_index":2390,"title":{},"body":{"classes/TeamMember.html":{}}}],["src/app/models/teammember.ts:8",{"_index":2392,"title":{},"body":{"classes/TeamMember.html":{}}}],["src/app/nav",{"_index":1969,"title":{},"body":{"components/NavMenuComponent.html":{},"coverage.html":{}}}],["src/app/pages/profile/profile.component",{"_index":221,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/pages/profile/profile.component.ts",{"_index":2108,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["src/app/pages/profile/profile.component.ts:15",{"_index":2111,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/pages/profile/profile.component.ts:22",{"_index":2113,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/pages/profile/profile.component.ts:27",{"_index":2112,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/pipes/capitalize",{"_index":291,"title":{},"body":{"pipes/CapitalizeAndReplacePipe.html":{},"coverage.html":{}}}],["src/app/pipes/capitalize.pipe.ts",{"_index":315,"title":{},"body":{"pipes/CapitalizePipe.html":{},"coverage.html":{}}}],["src/app/pipes/capitalize.pipe.ts:10",{"_index":319,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["src/app/pipes/format",{"_index":1294,"title":{},"body":{"pipes/FormatCamelCasePipe.html":{},"coverage.html":{}}}],["src/app/pipes/replace.pipe.ts",{"_index":2194,"title":{},"body":{"pipes/ReplacePipe.html":{},"coverage.html":{}}}],["src/app/pipes/replace.pipe.ts:10",{"_index":2199,"title":{},"body":{"pipes/ReplacePipe.html":{}}}],["src/app/pipes/underlineremovat.pipe.service.ts",{"_index":2203,"title":{},"body":{"pipes/ReplaceUnderscoresPipe.html":{},"coverage.html":{}}}],["src/app/pipes/underlineremovat.pipe.service.ts:10",{"_index":2204,"title":{},"body":{"pipes/ReplaceUnderscoresPipe.html":{}}}],["src/app/services/currentcomp.service.ts",{"_index":6,"title":{},"body":{"injectables/ActiveComponentService.html":{},"coverage.html":{}}}],["src/app/services/currentcomp.service.ts:15",{"_index":46,"title":{},"body":{"injectables/ActiveComponentService.html":{}}}],["src/app/services/currentcomp.service.ts:19",{"_index":43,"title":{},"body":{"injectables/ActiveComponentService.html":{}}}],["src/app/services/currentcomp.service.ts:26",{"_index":30,"title":{},"body":{"injectables/ActiveComponentService.html":{}}}],["src/app/services/customers.service.ts",{"_index":1033,"title":{},"body":{"injectables/CustomersService.html":{},"coverage.html":{}}}],["src/app/services/customers.service.ts:15",{"_index":1042,"title":{},"body":{"injectables/CustomersService.html":{}}}],["src/app/services/customers.service.ts:26",{"_index":1044,"title":{},"body":{"injectables/CustomersService.html":{}}}],["src/app/services/employees.service.ts",{"_index":1289,"title":{},"body":{"injectables/EmployeesService.html":{},"coverage.html":{}}}],["src/app/services/employees.service.ts:14",{"_index":1291,"title":{},"body":{"injectables/EmployeesService.html":{}}}],["src/app/services/employees.service.ts:25",{"_index":1292,"title":{},"body":{"injectables/EmployeesService.html":{}}}],["src/app/services/ingredients.service",{"_index":1183,"title":{},"body":{"components/EditItemPopupComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["src/app/services/ingredients.service.ts",{"_index":1344,"title":{},"body":{"injectables/IngredientsService.html":{},"coverage.html":{}}}],["src/app/services/ingredients.service.ts:12",{"_index":1353,"title":{},"body":{"injectables/IngredientsService.html":{}}}],["src/app/services/ingredients.service.ts:24",{"_index":1363,"title":{},"body":{"injectables/IngredientsService.html":{}}}],["src/app/services/ingredients.service.ts:32",{"_index":1357,"title":{},"body":{"injectables/IngredientsService.html":{}}}],["src/app/services/ingredients.service.ts:41",{"_index":1359,"title":{},"body":{"injectables/IngredientsService.html":{}}}],["src/app/services/ingredients.service.ts:49",{"_index":1355,"title":{},"body":{"injectables/IngredientsService.html":{}}}],["src/app/services/ingredients.service.ts:56",{"_index":1362,"title":{},"body":{"injectables/IngredientsService.html":{}}}],["src/app/services/ingredients.service.ts:64",{"_index":1361,"title":{},"body":{"injectables/IngredientsService.html":{}}}],["src/app/services/inventory.service",{"_index":1184,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["src/app/services/inventory.service.ts",{"_index":1638,"title":{},"body":{"injectables/InventoryService.html":{},"coverage.html":{}}}],["src/app/services/inventory.service.ts:15",{"_index":1645,"title":{},"body":{"injectables/InventoryService.html":{}}}],["src/app/services/inventory.service.ts:27",{"_index":1652,"title":{},"body":{"injectables/InventoryService.html":{}}}],["src/app/services/inventory.service.ts:35",{"_index":1649,"title":{},"body":{"injectables/InventoryService.html":{}}}],["src/app/services/inventory.service.ts:44",{"_index":1651,"title":{},"body":{"injectables/InventoryService.html":{}}}],["src/app/services/inventory.service.ts:52",{"_index":1647,"title":{},"body":{"injectables/InventoryService.html":{}}}],["src/app/services/inventory.service.ts:60",{"_index":1654,"title":{},"body":{"injectables/InventoryService.html":{}}}],["src/app/services/magnifier.service.ts",{"_index":1747,"title":{},"body":{"injectables/MagnifierService.html":{},"coverage.html":{}}}],["src/app/services/magnifier.service.ts:15",{"_index":1757,"title":{},"body":{"injectables/MagnifierService.html":{}}}],["src/app/services/magnifier.service.ts:20",{"_index":1753,"title":{},"body":{"injectables/MagnifierService.html":{}}}],["src/app/services/magnifier.service.ts:27",{"_index":1752,"title":{},"body":{"injectables/MagnifierService.html":{}}}],["src/app/services/menu.service",{"_index":1182,"title":{},"body":{"components/EditItemPopupComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["src/app/services/menu.service.ts",{"_index":1919,"title":{},"body":{"injectables/MenuService.html":{},"coverage.html":{}}}],["src/app/services/menu.service.ts:11",{"_index":1928,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/services/menu.service.ts:20",{"_index":1935,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/services/menu.service.ts:28",{"_index":1937,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/services/menu.service.ts:37",{"_index":1941,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/services/menu.service.ts:45",{"_index":1932,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/services/menu.service.ts:54",{"_index":1934,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/services/menu.service.ts:62",{"_index":1930,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/services/menu.service.ts:69",{"_index":1942,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/services/menu.service.ts:77",{"_index":1939,"title":{},"body":{"injectables/MenuService.html":{}}}],["src/app/services/order",{"_index":2061,"title":{},"body":{"injectables/OrderHistoryService.html":{},"coverage.html":{}}}],["src/app/services/orders.service.ts",{"_index":2083,"title":{},"body":{"injectables/OrdersService.html":{},"coverage.html":{}}}],["src/app/services/orders.service.ts:14",{"_index":2099,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/app/services/orders.service.ts:18",{"_index":2103,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/app/services/orders.service.ts:22",{"_index":2090,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/app/services/orders.service.ts:32",{"_index":2091,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/app/services/orders.service.ts:43",{"_index":2097,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/app/services/orders.service.ts:74",{"_index":2093,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/app/services/teammember.service.ts",{"_index":2394,"title":{},"body":{"injectables/TeamMemberService.html":{},"coverage.html":{}}}],["src/app/services/teammember.service.ts:14",{"_index":2396,"title":{},"body":{"injectables/TeamMemberService.html":{}}}],["src/app/services/teammember.service.ts:25",{"_index":2397,"title":{},"body":{"injectables/TeamMemberService.html":{}}}],["src/app/shopping",{"_index":576,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-4.html":{},"coverage.html":{}}}],["src/app/signature",{"_index":1869,"title":{},"body":{"interfaces/MenuItem-5.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"coverage.html":{}}}],["src/app/slush",{"_index":1875,"title":{},"body":{"interfaces/MenuItem-6.html":{},"components/SlushMenuComponent.html":{},"coverage.html":{}}}],["src/app/smoothie",{"_index":1879,"title":{},"body":{"interfaces/MenuItem-7.html":{},"components/SmoothieMenuComponent.html":{},"coverage.html":{}}}],["src/app/weather/weather.component.ts",{"_index":2400,"title":{},"body":{"components/WeatherComponent.html":{},"coverage.html":{}}}],["src/app/weather/weather.component.ts:20",{"_index":2406,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather.component.ts:30",{"_index":2408,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather.component.ts:34",{"_index":2407,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":2454,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2456,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stage",{"_index":2175,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["start",{"_index":493,"title":{},"body":{"components/CartModalComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/LoginButtonComponent.html":{},"components/MenuItemComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["startdate",{"_index":1451,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["startdate.setutchours(0",{"_index":1453,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["started",{"_index":2496,"title":{"index.html":{}},"body":{}}],["state",{"_index":9,"title":{},"body":{"injectables/ActiveComponentService.html":{},"components/CustomerViewComponent.html":{},"injectables/MagnifierService.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-3.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["state.valueof",{"_index":875,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["statements",{"_index":2423,"title":{},"body":{"coverage.html":{}}}],["station",{"_index":966,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["status",{"_index":1092,"title":{},"body":{"injectables/DataService.html":{},"components/NavMenuComponent.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-5.html":{}}}],["still",{"_index":2173,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["stock",{"_index":1425,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-5.html":{}}}],["storage",{"_index":531,"title":{},"body":{"injectables/CartService.html":{}}}],["store",{"_index":1682,"title":{},"body":{"components/LearnMoreComponent.html":{}}}],["stored",{"_index":2142,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"index.html":{}}}],["str.touppercase",{"_index":1308,"title":{},"body":{"pipes/FormatCamelCasePipe.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["straws",{"_index":1475,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["string",{"_index":28,"title":{},"body":{"injectables/ActiveComponentService.html":{},"pipes/CapitalizeAndReplacePipe.html":{},"pipes/CapitalizePipe.html":{},"components/CheckoutPopupComponent.html":{},"components/ContactUsComponent.html":{},"interfaces/CustomerMenuItem.html":{},"components/CustomerViewComponent.html":{},"classes/Customers.html":{},"interfaces/DataType.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"classes/Employees.html":{},"pipes/FormatCamelCasePipe.html":{},"classes/Ingredients.html":{},"classes/Inventory.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/ManagerPopupComponent.html":{},"classes/Menu.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-2.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"injectables/MenuService.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"classes/OrderHistory.html":{},"interfaces/OrderItem.html":{},"classes/Orders.html":{},"injectables/OrdersService.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"pipes/ReplacePipe.html":{},"pipes/ReplaceUnderscoresPipe.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{},"classes/TeamMember.html":{},"components/WeatherComponent.html":{}}}],["strings",{"_index":1297,"title":{},"body":{"pipes/FormatCamelCasePipe.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"pipes/ReplacePipe.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["strong",{"_index":1269,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["structure",{"_index":610,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"classes/Ingredients.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"classes/Orders.html":{},"components/RestockReportPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{}}}],["style",{"_index":457,"title":{},"body":{"components/CartModalComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["styles",{"_index":252,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{},"components/WeatherComponent.html":{}}}],["styleurls",{"_index":335,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/LearnMoreComponent.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{},"components/WeatherComponent.html":{}}}],["styling",{"_index":972,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["subject",{"_index":691,"title":{},"body":{"components/ConfirmationPopupComponent.html":{}}}],["submission",{"_index":2227,"title":{},"body":{"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["submit",{"_index":763,"title":{},"body":{"components/ContactUsComponent.html":{}}}],["submitform",{"_index":729,"title":{},"body":{"components/ContactUsComponent.html":{}}}],["submits",{"_index":733,"title":{},"body":{"components/ContactUsComponent.html":{}}}],["subscribe",{"_index":376,"title":{},"body":{"components/CartModalComponent.html":{},"components/CustomerViewComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{},"components/WeatherComponent.html":{}}}],["subscribe((response",{"_index":2268,"title":{},"body":{"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["subscribe(response",{"_index":753,"title":{},"body":{"components/ContactUsComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{}}}],["subscribes",{"_index":1312,"title":{},"body":{"components/GetRoleComponent.html":{}}}],["subscription",{"_index":853,"title":{},"body":{"components/CustomerViewComponent.html":{},"components/GetRoleComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{}}}],["subscriptions",{"_index":2245,"title":{},"body":{"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{}}}],["successfully",{"_index":1722,"title":{},"body":{"components/LogoutButtonComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{}}}],["such",{"_index":1779,"title":{},"body":{"classes/Menu.html":{},"interfaces/MenuItem-3.html":{},"components/MenuViewComponent.html":{},"classes/Orders.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-5.html":{}}}],["summary",{"_index":581,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-4.html":{}}}],["sunny",{"_index":870,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["sunnyimageurl",{"_index":798,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["support",{"_index":720,"title":{},"body":{"components/ContactUsComponent.html":{},"modules.html":{}}}],["supports",{"_index":1126,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["sure",{"_index":703,"title":{},"body":{"components/ConfirmationPopupComponent.html":{}}}],["svg",{"_index":2535,"title":{},"body":{"modules.html":{}}}],["sweet",{"_index":939,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["switch",{"_index":1558,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["switchmap",{"_index":2409,"title":{},"body":{"components/WeatherComponent.html":{}}}],["switchmap(data",{"_index":2413,"title":{},"body":{"components/WeatherComponent.html":{}}}],["symphony",{"_index":919,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["system",{"_index":1337,"title":{},"body":{"classes/Ingredients.html":{}}}],["tab",{"_index":2304,"title":{},"body":{"components/SignupButtonComponent.html":{}}}],["table",{"_index":596,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{},"components/WeatherComponent.html":{},"coverage.html":{}}}],["table's",{"_index":1385,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["tablecolumn",{"_index":611,"title":{"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{}},"body":{"components/CheckoutPopupComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/ManagerPopupComponent.html":{},"interfaces/OrderItem.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{},"coverage.html":{}}}],["tableconfig",{"_index":590,"title":{"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{}},"body":{"components/CheckoutPopupComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/ManagerPopupComponent.html":{},"interfaces/OrderItem.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{},"coverage.html":{}}}],["tabledata",{"_index":1235,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2457,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":1318,"title":{},"body":{"components/GetRoleComponent.html":{}}}],["tabular",{"_index":584,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{}}}],["takes",{"_index":1523,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["tangy",{"_index":940,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["tantalize",{"_index":960,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["tapioca",{"_index":953,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["tasks",{"_index":501,"title":{},"body":{"injectables/CartService.html":{},"injectables/DataService.html":{}}}],["taste",{"_index":920,"title":{},"body":{"components/CustomerViewComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["td",{"_index":642,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["te",{"_index":2021,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["tea",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{},"components/WeatherComponent.html":{},"coverage.html":{}}}],["tea's",{"_index":901,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["tea\\'s",{"_index":1021,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["team",{"_index":722,"title":{},"body":{"components/ContactUsComponent.html":{},"classes/TeamMember.html":{},"injectables/TeamMemberService.html":{}}}],["team_member",{"_index":2389,"title":{},"body":{"classes/TeamMember.html":{}}}],["teammember",{"_index":2382,"title":{"classes/TeamMember.html":{}},"body":{"classes/TeamMember.html":{},"coverage.html":{}}}],["teammemberservice",{"_index":2393,"title":{"injectables/TeamMemberService.html":{}},"body":{"injectables/TeamMemberService.html":{},"coverage.html":{}}}],["teas",{"_index":892,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["teh",{"_index":254,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["temp",{"_index":1441,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["temp.foreach(item",{"_index":1442,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["temperature",{"_index":811,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["template",{"_index":233,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{},"components/WeatherComponent.html":{}}}],["templateurl",{"_index":249,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{},"components/WeatherComponent.html":{}}}],["test",{"_index":2524,"title":{},"body":{"index.html":{}}}],["testing",{"_index":2532,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2523,"title":{},"body":{"index.html":{}}}],["text",{"_index":441,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/CustomerViewComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["texthold",{"_index":1009,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["textleft",{"_index":1010,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["th",{"_index":641,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["that's",{"_index":2172,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["thing",{"_index":1138,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["thirst",{"_index":1676,"title":{},"body":{"components/LearnMoreComponent.html":{}}}],["this.activecomponentservice.setactivecomponent('cashierviewcomponent",{"_index":2337,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["this.activecomponentservice.setactivecomponent('menuitemcomponent",{"_index":1800,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{}}}],["this.activecomponentservice.setactivecomponent('menuviewcomponent",{"_index":1852,"title":{},"body":{"interfaces/MenuItem-3.html":{},"components/MenuViewComponent.html":{}}}],["this.activecomponentsource.asobservable",{"_index":42,"title":{},"body":{"injectables/ActiveComponentService.html":{}}}],["this.activecomponentsource.next(componentname",{"_index":55,"title":{},"body":{"injectables/ActiveComponentService.html":{}}}],["this.add.emit(newitem",{"_index":2191,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["this.addedingredientname",{"_index":2189,"title":{},"body":{"components/QuickAddPopupComponent.html":{}}}],["this.addedingredientquantity",{"_index":2190,"title":{},"body":{"components/QuickAddPopupComponent.html":{}}}],["this.addedinventoryitemname",{"_index":2187,"title":{},"body":{"components/QuickAddPopupComponent.html":{}}}],["this.addedinventoryitemquantity",{"_index":2188,"title":{},"body":{"components/QuickAddPopupComponent.html":{}}}],["this.addedmenuitemname",{"_index":2162,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["this.addedmenuitemprice",{"_index":2163,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["this.auth.loginwithredirect",{"_index":1716,"title":{},"body":{"components/LoginButtonComponent.html":{},"components/SignupButtonComponent.html":{}}}],["this.auth.logout",{"_index":1744,"title":{},"body":{"components/LogoutButtonComponent.html":{}}}],["this.auth.user$.subscribe",{"_index":1078,"title":{},"body":{"injectables/DataService.html":{},"components/ProfileComponent.html":{}}}],["this.auth.user$.subscribe(user",{"_index":1988,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["this.calculatetotal",{"_index":2262,"title":{},"body":{"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{}}}],["this.calculatetotal().tostring",{"_index":2265,"title":{},"body":{"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{}}}],["this.cancel.emit",{"_index":2192,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["this.cancelclicked.emit",{"_index":401,"title":{},"body":{"components/CartModalComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["this.cartitems",{"_index":548,"title":{},"body":{"injectables/CartService.html":{}}}],["this.cartitemssubject",{"_index":546,"title":{},"body":{"injectables/CartService.html":{}}}],["this.cartitemssubject.asobservable",{"_index":549,"title":{},"body":{"injectables/CartService.html":{}}}],["this.cartitemssubject.next",{"_index":561,"title":{},"body":{"injectables/CartService.html":{}}}],["this.cartitemssubject.next([...currentitems",{"_index":559,"title":{},"body":{"injectables/CartService.html":{}}}],["this.cartitemssubject.next(updateditems",{"_index":556,"title":{},"body":{"injectables/CartService.html":{}}}],["this.cartitemssubject.value",{"_index":554,"title":{},"body":{"injectables/CartService.html":{}}}],["this.cartservice.additem(item",{"_index":1830,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["this.cartservice.cartitems$.subscribe",{"_index":2336,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["this.cartservice.cartitems$.subscribe(items",{"_index":397,"title":{},"body":{"components/CartModalComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["this.cartservice.clearcart",{"_index":402,"title":{},"body":{"components/CartModalComponent.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{}}}],["this.cartservice.getcartitems",{"_index":1833,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{}}}],["this.cartservice.removeitem(index",{"_index":399,"title":{},"body":{"components/CartModalComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["this.cartsub",{"_index":2335,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["this.cartsub.unsubscribe",{"_index":2381,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["this.cartsubscription",{"_index":2259,"title":{},"body":{"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["this.cartsubscription.unsubscribe",{"_index":2279,"title":{},"body":{"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["this.carttotal",{"_index":2264,"title":{},"body":{"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{}}}],["this.checkifuseriscashier(user",{"_index":1082,"title":{},"body":{"injectables/DataService.html":{}}}],["this.checkifuserismanager(user",{"_index":1080,"title":{},"body":{"injectables/DataService.html":{}}}],["this.close.emit",{"_index":616,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{}}}],["this.cloudyimageurl",{"_index":881,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["this.coffeeitems",{"_index":2353,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["this.confirm.emit(this.item",{"_index":701,"title":{},"body":{"components/ConfirmationPopupComponent.html":{}}}],["this.continueclicked.emit",{"_index":400,"title":{},"body":{"components/CartModalComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["this.currentaction",{"_index":1573,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.currentuseriscashier",{"_index":1104,"title":{},"body":{"injectables/DataService.html":{}}}],["this.currentuserismanager",{"_index":1081,"title":{},"body":{"injectables/DataService.html":{}}}],["this.customeremail",{"_index":749,"title":{},"body":{"components/ContactUsComponent.html":{}}}],["this.customerfeedback",{"_index":750,"title":{},"body":{"components/ContactUsComponent.html":{}}}],["this.customername",{"_index":748,"title":{},"body":{"components/ContactUsComponent.html":{}}}],["this.data",{"_index":1872,"title":{},"body":{"interfaces/MenuItem-5.html":{},"components/SignatureMilkTeaMenuComponent.html":{}}}],["this.dataservice.ismanager().subscribe(data",{"_index":1334,"title":{},"body":{"components/GetRoleComponent.html":{}}}],["this.decline.emit",{"_index":702,"title":{},"body":{"components/ConfirmationPopupComponent.html":{}}}],["this.delete.emit(row",{"_index":1773,"title":{},"body":{"components/ManagerPopupComponent.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableConfig-3.html":{}}}],["this.doc.location.origin",{"_index":1746,"title":{},"body":{"components/LogoutButtonComponent.html":{}}}],["this.edit.emit(row",{"_index":1772,"title":{},"body":{"components/ManagerPopupComponent.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableConfig-3.html":{}}}],["this.editedingredientname",{"_index":1206,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["this.editedingredientquantity",{"_index":1208,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["this.editedinventoryitemname",{"_index":1201,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["this.editedinventoryitemquantity",{"_index":1203,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["this.editedmenuitemname",{"_index":1190,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["this.editedmenuitemprice",{"_index":1192,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["this.editedmenuitemtype",{"_index":1194,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["this.edittype",{"_index":1187,"title":{},"body":{"components/EditItemPopupComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.employeecreationsitems",{"_index":2356,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["this.excessreport",{"_index":1622,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.fetchmenuitemsbytype('coffee",{"_index":2339,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["this.fetchmenuitemsbytype('employee_creations",{"_index":1247,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["this.fetchmenuitemsbytype('flavored_tea",{"_index":1853,"title":{},"body":{"interfaces/MenuItem-3.html":{},"components/MenuViewComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["this.fetchmenuitemsbytype('milk_tea",{"_index":1867,"title":{},"body":{"interfaces/MenuItem-4.html":{},"components/MilkTeaMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["this.fetchmenuitemsbytype('signature_milk_tea",{"_index":1870,"title":{},"body":{"interfaces/MenuItem-5.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["this.fetchmenuitemsbytype('slush",{"_index":1876,"title":{},"body":{"interfaces/MenuItem-6.html":{},"components/SlushMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["this.fetchmenuitemsbytype('smoothies",{"_index":1880,"title":{},"body":{"interfaces/MenuItem-7.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["this.fetchmenuitemsbytype('toppings",{"_index":2338,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["this.flavoredteadata",{"_index":1883,"title":{},"body":{"interfaces/MenuItem-7.html":{},"components/SmoothieMenuComponent.html":{}}}],["this.flavoredteaitems",{"_index":2349,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["this.formatcamelcase(item.item_name",{"_index":1443,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.formatorderitems(item.order_items",{"_index":1467,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.formatsingleunderscore(this.addedmenuitemname",{"_index":2170,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["this.getdata().pipe",{"_index":1084,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getdata().subscribe(employees",{"_index":1090,"title":{},"body":{"injectables/DataService.html":{}}}],["this.getexcess(start",{"_index":1623,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.getlowstock",{"_index":1616,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.http",{"_index":2411,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.http.delete(`${this.baseurl}/${id",{"_index":1365,"title":{},"body":{"injectables/IngredientsService.html":{},"injectables/InventoryService.html":{},"injectables/MenuService.html":{}}}],["this.http.get('http://localhost:3000/api/employees",{"_index":1083,"title":{},"body":{"injectables/DataService.html":{}}}],["this.http.get(`${this.baseurl}/${id",{"_index":1656,"title":{},"body":{"injectables/InventoryService.html":{}}}],["this.http.get(`${this.baseurl}/${type",{"_index":1944,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.http.get(`${this.baseurl}/${type}/${name",{"_index":1947,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.http.get(`${this.baseurl}/get/by/${id",{"_index":1369,"title":{},"body":{"injectables/IngredientsService.html":{},"injectables/MenuService.html":{}}}],["this.http.get(`${this.baseurl}/ingredientnames",{"_index":1368,"title":{},"body":{"injectables/IngredientsService.html":{}}}],["this.http.get(`${this.baseurl}/menu/item/types",{"_index":1948,"title":{},"body":{"injectables/MenuService.html":{}}}],["this.http.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=a4a7ae9e4278c9df8a149e4138ab3c0c",{"_index":2418,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.http.get(this.baseurl",{"_index":1048,"title":{},"body":{"injectables/CustomersService.html":{},"injectables/EmployeesService.html":{},"injectables/IngredientsService.html":{},"injectables/InventoryService.html":{},"injectables/MenuService.html":{},"injectables/OrderHistoryService.html":{},"injectables/OrdersService.html":{},"injectables/TeamMemberService.html":{}}}],["this.http.get(this.baseurl+\"/ingredients",{"_index":2072,"title":{},"body":{"injectables/OrderHistoryService.html":{}}}],["this.http.get(this.baseurl+\"/ogin",{"_index":2073,"title":{},"body":{"injectables/OrderHistoryService.html":{}}}],["this.http.post('/api/create",{"_index":2267,"title":{},"body":{"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["this.http.post('http://localhost:3000/api/orders/confirmorder",{"_index":569,"title":{},"body":{"injectables/CartService.html":{}}}],["this.http.post('http://localhost:3000/send",{"_index":752,"title":{},"body":{"components/ContactUsComponent.html":{}}}],["this.http.post(`${this.baseurl",{"_index":1367,"title":{},"body":{"injectables/IngredientsService.html":{},"injectables/InventoryService.html":{},"injectables/MenuService.html":{}}}],["this.http.post(this.orderhistoryurl",{"_index":2105,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.http.put(`${this.baseurl}/${id",{"_index":1366,"title":{},"body":{"injectables/IngredientsService.html":{},"injectables/InventoryService.html":{},"injectables/MenuService.html":{}}}],["this.http.put(this.inventoryupdateurl",{"_index":2107,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.ingredientnames",{"_index":2155,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["this.ingredients",{"_index":1435,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.ingredients.filter(item",{"_index":1437,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.ingredientsinput",{"_index":1196,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["this.ingredientsinput.split(',').map(ingredient",{"_index":1214,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["this.ingredientsservice.addingredient(item).subscribe",{"_index":1596,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.ingredientsservice.deleteingredient(item.ingredient_id).subscribe",{"_index":1591,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.ingredientsservice.editingredient(item.ingredient_id",{"_index":1590,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.ingredientsservice.getingredientbyid(this.item.ingredient_id).subscribe((data",{"_index":1205,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["this.ingredientsservice.getingredientnames().subscribe((data",{"_index":2154,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["this.ingredientsservice.getingredients().subscribe(ingredients",{"_index":1418,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.ingredientstableconfig",{"_index":1564,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.initializeeditfields",{"_index":1185,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["this.inventory",{"_index":1428,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.inventory.filter(item",{"_index":1431,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.inventoryservice.addinventoryitem(item).subscribe",{"_index":1597,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.inventoryservice.deleteinventoryitem(item.item_id).subscribe",{"_index":1593,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.inventoryservice.editinventoryitem(item.item_id",{"_index":1592,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.inventoryservice.getinventory().subscribe((inventoryitems",{"_index":1495,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.inventoryservice.getinventory().subscribe(invitems",{"_index":1420,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.inventoryservice.getitembyid(this.item.item_id).subscribe((data",{"_index":1200,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["this.inventorytableconfig",{"_index":1566,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.item.ingredient_name",{"_index":1218,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["this.item.ingredient_quantity",{"_index":1219,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["this.item.ingredients",{"_index":1213,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["this.item.item_name",{"_index":1216,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["this.item.item_quantity",{"_index":1217,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["this.item.menu_item_name",{"_index":1210,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["this.item.menu_item_price",{"_index":1211,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["this.item.menu_item_type",{"_index":1212,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["this.itemtypes",{"_index":2151,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["this.location.back",{"_index":1847,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{}}}],["this.lowingreditems",{"_index":1436,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.lowinventitems",{"_index":1430,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.magnifierenabled",{"_index":874,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["this.magnifierservice.getmagnifierstate().subscribe",{"_index":872,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["this.magnifierservice.togglemagnifier",{"_index":1994,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["this.magnifierstate.asobservable",{"_index":1759,"title":{},"body":{"injectables/MagnifierService.html":{}}}],["this.magnifierstate.next(!this.magnifierstate.value",{"_index":1758,"title":{},"body":{"injectables/MagnifierService.html":{}}}],["this.magnifiersub",{"_index":871,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["this.menuitems",{"_index":398,"title":{},"body":{"components/CartModalComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{}}}],["this.menuitems.length",{"_index":2271,"title":{},"body":{"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{}}}],["this.menuitems.reduce((total",{"_index":403,"title":{},"body":{"components/CartModalComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{}}}],["this.menuitems?.map(item",{"_index":2261,"title":{},"body":{"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["this.menuitems[0].added_toppings",{"_index":1809,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{}}}],["this.menuservice.addmenuitem(item).subscribe",{"_index":1594,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.menuservice.deletemenuitem(item.menu_item_id).subscribe",{"_index":1589,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.menuservice.editmenuitem(item.menu_item_id",{"_index":1587,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.menuservice.getmenu().subscribe(items",{"_index":1416,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.menuservice.getmenubytype('toppings').subscribe(data",{"_index":1810,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{}}}],["this.menuservice.getmenubytype(type).subscribe(data",{"_index":1248,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["this.menuservice.getmenuitembyid(this.item.menu_item_id).subscribe((data",{"_index":1188,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["this.menuservice.getmenuitembyname(name",{"_index":1805,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{}}}],["this.menuservice.getmenuitemtypes().subscribe((data",{"_index":2150,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["this.menutableconfig",{"_index":1561,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.menuvisibility[section",{"_index":2348,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["this.milkteaitems",{"_index":2350,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["this.oncheckout",{"_index":2272,"title":{},"body":{"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{}}}],["this.ontoppingchange(topping.menu_item_id",{"_index":2361,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["this.ontoppingchange(toppingid",{"_index":1821,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{}}}],["this.orderhistory",{"_index":1449,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.orderhistory.filter(order",{"_index":1463,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.orderhistoryservice.geting().subscribe",{"_index":1491,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.orderhistoryservice.getingridents().subscribe",{"_index":1476,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.orderhistoryservice.getorderhistory().subscribe(orditems",{"_index":1448,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.orderservice.updateorderhistory(this.menuitems",{"_index":2274,"title":{},"body":{"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{}}}],["this.pageready",{"_index":1990,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["this.popupcontent",{"_index":1444,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{}}}],["this.popuptitle",{"_index":1559,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{}}}],["this.profilejson",{"_index":2114,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.quick.emit",{"_index":1774,"title":{},"body":{"components/ManagerPopupComponent.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableConfig-3.html":{}}}],["this.rainyimageurl",{"_index":879,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["this.refreshingredients",{"_index":1565,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.refreshinventory",{"_index":1567,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.refreshmenu",{"_index":1562,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.refreshsales(start",{"_index":1621,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.restockreport",{"_index":1615,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.route.parammap.subscribe(params",{"_index":1801,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{}}}],["this.salesreport",{"_index":1620,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.save.emit(this.item",{"_index":1220,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["this.selectedingredients[ingredient",{"_index":2157,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["this.selectedingredients[key",{"_index":2161,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["this.selecteditem",{"_index":1574,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.selectedtoppings.add(toppingid",{"_index":1826,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["this.selectedtoppings.delete(toppingid",{"_index":1827,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["this.selectedtype",{"_index":2164,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["this.showconfirmationpopup",{"_index":1578,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.showeditpopup",{"_index":1575,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.showpopup",{"_index":1557,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{}}}],["this.showquickaddpopup",{"_index":1599,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.showrestockreportpopup",{"_index":1614,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.showseasonalitempopup",{"_index":1600,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.signaturemilkteaitems",{"_index":2351,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["this.slushitems",{"_index":2352,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["this.smoothiesitems",{"_index":2354,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["this.sunnyimageurl",{"_index":882,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["this.tableconfig",{"_index":1560,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["this.tabledata",{"_index":1249,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"interfaces/MenuItem.html":{}}}],["this.tabledata.concat(data",{"_index":1250,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"interfaces/MenuItem.html":{}}}],["this.thing",{"_index":1189,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["this.thing.ingredient_name",{"_index":1207,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["this.thing.ingredient_quantity",{"_index":1209,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["this.thing.ingredients",{"_index":1199,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["this.thing.ingredients.join",{"_index":1198,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["this.thing.item_name",{"_index":1202,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["this.thing.item_quantity",{"_index":1204,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["this.thing.menu_item_name",{"_index":1191,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["this.thing.menu_item_price",{"_index":1193,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["this.thing.menu_item_type",{"_index":1195,"title":{},"body":{"components/EditItemPopupComponent.html":{}}}],["this.toppingadd(menuitem",{"_index":2365,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["this.toppingitems",{"_index":1811,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["this.toppingremove(menuitem",{"_index":2366,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["this.updatesessionstorage([...currentitems",{"_index":560,"title":{},"body":{"injectables/CartService.html":{}}}],["this.updatesessionstorage(updateditems",{"_index":557,"title":{},"body":{"injectables/CartService.html":{}}}],["this.weatherdata",{"_index":883,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["this.weatherloaded.emit(data",{"_index":2419,"title":{},"body":{"components/WeatherComponent.html":{}}}],["through",{"_index":1346,"title":{},"body":{"injectables/IngredientsService.html":{},"components/NavMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["throw",{"_index":575,"title":{},"body":{"injectables/CartService.html":{}}}],["time",{"_index":1445,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["times",{"_index":617,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/RestockReportPopupComponent.html":{}}}],["timestamp",{"_index":2050,"title":{},"body":{"classes/OrderHistory.html":{},"classes/Orders.html":{}}}],["title",{"_index":591,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/ManagerPopupComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{},"components/WeatherComponent.html":{}}}],["titlecase",{"_index":410,"title":{},"body":{"components/CartModalComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["toggle",{"_index":2345,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["togglemagnifier",{"_index":1751,"title":{},"body":{"injectables/MagnifierService.html":{},"components/NavMenuComponent.html":{}}}],["togglemenu(section",{"_index":2347,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["toggles",{"_index":1754,"title":{},"body":{"injectables/MagnifierService.html":{},"components/NavMenuComponent.html":{}}}],["toggling",{"_index":1748,"title":{},"body":{"injectables/MagnifierService.html":{}}}],["token",{"_index":1729,"title":{},"body":{"components/LogoutButtonComponent.html":{}}}],["took",{"_index":2056,"title":{},"body":{"classes/OrderHistory.html":{},"classes/Orders.html":{}}}],["top",{"_index":416,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/LearnMoreComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["topholder",{"_index":993,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["topping",{"_index":1816,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["topping.menu_item_name",{"_index":1901,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["topping.menu_item_price",{"_index":1902,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["toppingadd",{"_index":1887,"title":{},"body":{"components/MenuItemComponent.html":{}}}],["toppingadd(item",{"_index":1835,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["toppingid",{"_index":1815,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["toppingitems",{"_index":1796,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["toppingprice",{"_index":1838,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["toppingprice).tofixed(2",{"_index":1840,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["toppingremove(item",{"_index":2368,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["toppings",{"_index":779,"title":{},"body":{"interfaces/CustomerMenuItem.html":{},"components/EmployeeCreationsMenuComponent.html":{},"classes/Menu.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-2.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["topromise",{"_index":570,"title":{},"body":{"injectables/CartService.html":{}}}],["total",{"_index":369,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"classes/OrderHistory.html":{},"classes/Orders.html":{},"injectables/OrdersService.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-4.html":{}}}],["towerpoint",{"_index":1688,"title":{},"body":{"components/LearnMoreComponent.html":{}}}],["tr.category",{"_index":1280,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["track",{"_index":16,"title":{},"body":{"injectables/ActiveComponentService.html":{},"injectables/DataService.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{},"miscellaneous/variables.html":{}}}],["traditional",{"_index":905,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["tradnav",{"_index":1272,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["transform",{"_index":305,"title":{},"body":{"pipes/CapitalizeAndReplacePipe.html":{},"pipes/CapitalizePipe.html":{},"components/CartModalComponent.html":{},"pipes/FormatCamelCasePipe.html":{},"components/MenuItemComponent.html":{},"components/NavMenuComponent.html":{},"pipes/ReplacePipe.html":{},"pipes/ReplaceUnderscoresPipe.html":{},"components/ShoppingCartComponent.html":{}}}],["transform(inputstring",{"_index":1301,"title":{},"body":{"pipes/FormatCamelCasePipe.html":{}}}],["transform(value",{"_index":306,"title":{},"body":{"pipes/CapitalizeAndReplacePipe.html":{},"pipes/CapitalizePipe.html":{},"pipes/ReplacePipe.html":{},"pipes/ReplaceUnderscoresPipe.html":{}}}],["transforms",{"_index":293,"title":{},"body":{"pipes/CapitalizeAndReplacePipe.html":{},"pipes/CapitalizePipe.html":{},"pipes/FormatCamelCasePipe.html":{},"pipes/ReplacePipe.html":{},"pipes/ReplaceUnderscoresPipe.html":{}}}],["transition",{"_index":2286,"title":{},"body":{"components/ShoppingCartComponent.html":{}}}],["translate/core",{"_index":2466,"title":{},"body":{"dependencies.html":{}}}],["translate/http",{"_index":2468,"title":{},"body":{"dependencies.html":{}}}],["transparent",{"_index":1271,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["treat",{"_index":959,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["tree",{"_index":235,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{}}}],["triggered",{"_index":2359,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["triggers",{"_index":1699,"title":{},"body":{"components/LoginButtonComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignupButtonComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["true",{"_index":955,"title":{},"body":{"components/CustomerViewComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":563,"title":{},"body":{"injectables/CartService.html":{},"components/LearnMoreComponent.html":{}}}],["ts",{"_index":1502,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{}}}],["tslib",{"_index":2491,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":1314,"title":{},"body":{"components/GetRoleComponent.html":{}}}],["tyahk",{"_index":861,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["type",{"_index":34,"title":{},"body":{"injectables/ActiveComponentService.html":{},"pipes/CapitalizeAndReplacePipe.html":{},"pipes/CapitalizePipe.html":{},"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"interfaces/CustomerMenuItem.html":{},"components/CustomerViewComponent.html":{},"classes/Customers.html":{},"injectables/CustomersService.html":{},"injectables/DataService.html":{},"interfaces/DataType.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"classes/Employees.html":{},"injectables/EmployeesService.html":{},"pipes/FormatCamelCasePipe.html":{},"components/GetRoleComponent.html":{},"classes/Ingredients.html":{},"injectables/IngredientsService.html":{},"classes/Inventory.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"injectables/InventoryService.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"classes/Menu.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-2.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"injectables/MenuService.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"classes/OrderHistory.html":{},"injectables/OrderHistoryService.html":{},"interfaces/OrderItem.html":{},"classes/Orders.html":{},"injectables/OrdersService.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"pipes/ReplacePipe.html":{},"pipes/ReplaceUnderscoresPipe.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{},"classes/TeamMember.html":{},"injectables/TeamMemberService.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type).subscribe(data",{"_index":1806,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{}}}],["type.ts",{"_index":1119,"title":{},"body":{"interfaces/DataType.html":{},"coverage.html":{}}}],["type:string",{"_index":1946,"title":{},"body":{"injectables/MenuService.html":{}}}],["types",{"_index":1054,"title":{},"body":{"injectables/DataService.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-3.html":{},"injectables/MenuService.html":{},"components/MenuViewComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["typically",{"_index":602,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/LearnMoreComponent.html":{},"components/ManagerPopupComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{}}}],["ui",{"_index":672,"title":{},"body":{"components/ConfirmationPopupComponent.html":{},"components/GetRoleComponent.html":{},"components/ManagerPopupComponent.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableConfig-3.html":{}}}],["ul",{"_index":456,"title":{},"body":{"components/CartModalComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["uncommented",{"_index":1854,"title":{},"body":{"interfaces/MenuItem-3.html":{},"components/MenuViewComponent.html":{}}}],["undefined",{"_index":355,"title":{},"body":{"components/CartModalComponent.html":{},"components/CustomerViewComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{}}}],["underline",{"_index":1007,"title":{},"body":{"components/CustomerViewComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["underscores",{"_index":295,"title":{},"body":{"pipes/CapitalizeAndReplacePipe.html":{},"components/QuickAddPopupComponent.html":{},"pipes/ReplaceUnderscoresPipe.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["understand",{"_index":1664,"title":{},"body":{"components/LearnMoreComponent.html":{}}}],["unique",{"_index":2185,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["unit",{"_index":2522,"title":{},"body":{"index.html":{}}}],["universal",{"_index":1710,"title":{},"body":{"components/LoginButtonComponent.html":{},"components/SignupButtonComponent.html":{}}}],["unsubscribe",{"_index":2275,"title":{},"body":{"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["unsubscribes",{"_index":2378,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["up",{"_index":2244,"title":{},"body":{"components/ShoppingCartComponent.html":{},"components/SignupButtonComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["update",{"_index":17,"title":{},"body":{"injectables/ActiveComponentService.html":{},"components/CartModalComponent.html":{},"injectables/CartService.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"injectables/OrdersService.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["updated",{"_index":1173,"title":{},"body":{"components/EditItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{}}}],["updateditems",{"_index":555,"title":{},"body":{"injectables/CartService.html":{}}}],["updateinventory",{"_index":2088,"title":{},"body":{"injectables/OrdersService.html":{}}}],["updateinventory(itemname",{"_index":2092,"title":{},"body":{"injectables/OrdersService.html":{}}}],["updateorderhistory",{"_index":2089,"title":{},"body":{"injectables/OrdersService.html":{}}}],["updateorderhistory(orderitems",{"_index":2095,"title":{},"body":{"injectables/OrdersService.html":{}}}],["updates",{"_index":1834,"title":{},"body":{"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{}}}],["updatesessionstorage",{"_index":507,"title":{},"body":{"injectables/CartService.html":{}}}],["updatesessionstorage(items",{"_index":528,"title":{},"body":{"injectables/CartService.html":{}}}],["updating",{"_index":2084,"title":{},"body":{"injectables/OrdersService.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{}}}],["upon",{"_index":1735,"title":{},"body":{"components/LogoutButtonComponent.html":{}}}],["url",{"_index":564,"title":{},"body":{"injectables/CartService.html":{},"components/CustomerViewComponent.html":{},"injectables/CustomersService.html":{},"injectables/EmployeesService.html":{},"injectables/InventoryService.html":{},"injectables/OrderHistoryService.html":{},"injectables/OrdersService.html":{},"injectables/TeamMemberService.html":{},"miscellaneous/variables.html":{}}}],["us'},{'name",{"_index":272,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{}}}],["us.component",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["us.component.html",{"_index":724,"title":{},"body":{"components/ContactUsComponent.html":{}}}],["us.component.scss",{"_index":723,"title":{},"body":{"components/ContactUsComponent.html":{}}}],["us.component.ts",{"_index":714,"title":{},"body":{"components/ContactUsComponent.html":{},"coverage.html":{}}}],["us.component.ts:19",{"_index":739,"title":{},"body":{"components/ContactUsComponent.html":{}}}],["us.component.ts:23",{"_index":737,"title":{},"body":{"components/ContactUsComponent.html":{}}}],["us.component.ts:27",{"_index":731,"title":{},"body":{"components/ContactUsComponent.html":{}}}],["us.component.ts:35",{"_index":736,"title":{},"body":{"components/ContactUsComponent.html":{}}}],["us.component.ts:41",{"_index":732,"title":{},"body":{"components/ContactUsComponent.html":{}}}],["us/contact",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ContactUsComponent.html":{},"coverage.html":{}}}],["usage",{"_index":1510,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["use",{"_index":2515,"title":{},"body":{"index.html":{}}}],["used",{"_index":675,"title":{},"body":{"components/ConfirmationPopupComponent.html":{},"components/GetRoleComponent.html":{},"components/QuickAddPopupComponent.html":{}}}],["user",{"_index":239,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"injectables/DataService.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"interfaces/MenuItem.html":{},"interfaces/MenuItem-3.html":{},"components/MenuViewComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/SignupButtonComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["user's",{"_index":358,"title":{},"body":{"components/CartModalComponent.html":{},"components/ConfirmationPopupComponent.html":{},"injectables/DataService.html":{},"components/GetRoleComponent.html":{},"components/ProfileComponent.html":{}}}],["user.email",{"_index":2118,"title":{},"body":{"components/ProfileComponent.html":{}}}],["user.family_name",{"_index":1102,"title":{},"body":{"injectables/DataService.html":{}}}],["user.given_name",{"_index":1100,"title":{},"body":{"injectables/DataService.html":{}}}],["user.name",{"_index":2117,"title":{},"body":{"components/ProfileComponent.html":{}}}],["user.position",{"_index":1116,"title":{},"body":{"injectables/DataService.html":{}}}],["users",{"_index":245,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/ContactUsComponent.html":{},"components/LearnMoreComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig-2.html":{}}}],["uses",{"_index":14,"title":{},"body":{"injectables/ActiveComponentService.html":{},"components/AuthenticationButtonComponent.html":{},"components/LoginButtonComponent.html":{},"interfaces/MenuItem-7.html":{},"components/SmoothieMenuComponent.html":{}}}],["using",{"_index":1728,"title":{},"body":{"components/LogoutButtonComponent.html":{},"miscellaneous/variables.html":{}}}],["utilizes",{"_index":1719,"title":{},"body":{"components/LogoutButtonComponent.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{}}}],["value",{"_index":41,"title":{},"body":{"injectables/ActiveComponentService.html":{},"pipes/CapitalizeAndReplacePipe.html":{},"pipes/CapitalizePipe.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"injectables/CustomersService.html":{},"injectables/DataService.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"injectables/EmployeesService.html":{},"injectables/IngredientsService.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"injectables/InventoryService.html":{},"injectables/MagnifierService.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"injectables/MenuService.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"injectables/OrderHistoryService.html":{},"interfaces/OrderItem.html":{},"injectables/OrdersService.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"pipes/ReplacePipe.html":{},"pipes/ReplaceUnderscoresPipe.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{},"injectables/TeamMemberService.html":{},"components/WeatherComponent.html":{},"miscellaneous/variables.html":{}}}],["value.replace(/[^,]+/g",{"_index":320,"title":{},"body":{"pipes/CapitalizePipe.html":{}}}],["value.replace(/_/g",{"_index":311,"title":{},"body":{"pipes/CapitalizeAndReplacePipe.html":{},"pipes/ReplaceUnderscoresPipe.html":{}}}],["value.replace(new",{"_index":2200,"title":{},"body":{"pipes/ReplacePipe.html":{}}}],["var",{"_index":263,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{}}}],["variable",{"_index":2455,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2543,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variety",{"_index":1864,"title":{},"body":{"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MilkTeaMenuComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["various",{"_index":2324,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["vbzp",{"_index":840,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["velvety",{"_index":917,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["verdict",{"_index":2177,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["version",{"_index":2501,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertical",{"_index":2015,"title":{},"body":{"components/NavMenuComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["vertically",{"_index":2018,"title":{},"body":{"components/NavMenuComponent.html":{}}}],["via",{"_index":2526,"title":{},"body":{"index.html":{}}}],["vibrant",{"_index":925,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["vietnamese",{"_index":1687,"title":{},"body":{"components/LearnMoreComponent.html":{}}}],["view",{"_index":791,"title":{},"body":{"components/CustomerViewComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/LearnMoreComponent.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-3.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-2.html":{}}}],["view'},{'name",{"_index":268,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{}}}],["view.component",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["view.component.html",{"_index":793,"title":{},"body":{"components/CustomerViewComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/MenuItem-3.html":{},"components/MenuViewComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{}}}],["view.component.scss",{"_index":792,"title":{},"body":{"components/CustomerViewComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/MenuItem-3.html":{},"components/MenuViewComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{}}}],["view.component.ts",{"_index":782,"title":{},"body":{"components/CustomerViewComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/MenuItem-3.html":{},"components/MenuViewComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"coverage.html":{}}}],["view.component.ts:102",{"_index":817,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["view.component.ts:104",{"_index":1951,"title":{},"body":{"components/MenuViewComponent.html":{}}}],["view.component.ts:20",{"_index":866,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["view.component.ts:24",{"_index":851,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["view.component.ts:28",{"_index":854,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["view.component.ts:32",{"_index":856,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["view.component.ts:35",{"_index":1637,"title":{},"body":{"interfaces/InventoryMap.html":{}}}],["view.component.ts:36",{"_index":849,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["view.component.ts:40",{"_index":806,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["view.component.ts:52",{"_index":835,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["view.component.ts:61",{"_index":1954,"title":{},"body":{"components/MenuViewComponent.html":{}}}],["view.component.ts:65",{"_index":1950,"title":{},"body":{"components/MenuViewComponent.html":{},"interfaces/SalesSummary.html":{}}}],["view.component.ts:67",{"_index":823,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["view.component.ts:81",{"_index":1953,"title":{},"body":{"components/MenuViewComponent.html":{}}}],["view.component.ts:82",{"_index":831,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["view.component.ts:92",{"_index":809,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["view.component.ts:94",{"_index":1952,"title":{},"body":{"components/MenuViewComponent.html":{}}}],["view/cashier",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{},"coverage.html":{}}}],["view/confirmation",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"components/ConfirmationPopupComponent.html":{},"coverage.html":{}}}],["view/customer",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CustomerViewComponent.html":{},"coverage.html":{}}}],["view/edit",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"components/EditItemPopupComponent.html":{},"coverage.html":{}}}],["view/manager",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/ManagerPopupComponent.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-3.html":{},"coverage.html":{}}}],["view/menu",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"components/CartModalComponent.html":{},"injectables/CartService.html":{},"interfaces/CustomerMenuItem.html":{},"interfaces/MenuItem-2.html":{},"interfaces/MenuItem-3.html":{},"components/MenuViewComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-2.html":{},"coverage.html":{}}}],["view/quick",{"_index":186,"title":{},"body":{"modules/AppModule.html":{},"components/QuickAddPopupComponent.html":{},"coverage.html":{}}}],["view/restock",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-5.html":{},"coverage.html":{}}}],["view/seasonal",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"components/SeasonalItemPopupComponent.html":{},"coverage.html":{}}}],["visibility",{"_index":2034,"title":{},"body":{"components/NavMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["vision",{"_index":1671,"title":{},"body":{"components/LearnMoreComponent.html":{}}}],["void",{"_index":39,"title":{},"body":{"injectables/ActiveComponentService.html":{},"components/CartModalComponent.html":{},"injectables/CartService.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"injectables/DataService.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"injectables/MagnifierService.html":{},"components/ManagerPopupComponent.html":{},"interfaces/MenuItem-1.html":{},"interfaces/MenuItem-3.html":{},"interfaces/MenuItem-4.html":{},"interfaces/MenuItem-5.html":{},"interfaces/MenuItem-6.html":{},"interfaces/MenuItem-7.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"interfaces/TableColumn.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig.html":{},"interfaces/TableConfig-1.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{},"components/WeatherComponent.html":{}}}],["vskp",{"_index":841,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["want",{"_index":704,"title":{},"body":{"components/ConfirmationPopupComponent.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{}}}],["weather",{"_index":286,"title":{},"body":{"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{}}}],["weather.component.html",{"_index":2404,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.component.scss",{"_index":2403,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather/weather.component",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["weathercomponent",{"_index":104,"title":{"components/WeatherComponent.html":{}},"body":{"modules/AppModule.html":{},"components/AuthenticationButtonComponent.html":{},"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"components/LoginButtonComponent.html":{},"components/LogoutButtonComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/ProfileComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SignupButtonComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weatherdata",{"_index":799,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["weatherdata.main.humidity",{"_index":968,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["weatherloaded",{"_index":2405,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weight",{"_index":647,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/CustomerViewComponent.html":{},"components/ManagerPopupComponent.html":{},"components/RestockReportPopupComponent.html":{}}}],["wgwxr_esd02eltwt8lo7hnm0ummvj78qzo2j2nvzl9s",{"_index":2166,"title":{},"body":{"components/QuickAddPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["whether",{"_index":1313,"title":{},"body":{"components/GetRoleComponent.html":{},"components/LearnMoreComponent.html":{},"interfaces/MenuItem-1.html":{},"components/MenuItemComponent.html":{}}}],["white",{"_index":626,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/ContactUsComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/NavMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["whose",{"_index":1856,"title":{},"body":{"interfaces/MenuItem-3.html":{},"components/MenuViewComponent.html":{}}}],["width",{"_index":419,"title":{},"body":{"components/CartModalComponent.html":{},"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/EmployeeCreationsMenuComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/NavMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["width:100",{"_index":989,"title":{},"body":{"components/CustomerViewComponent.html":{},"components/MenuViewComponent.html":{}}}],["window.location.origin",{"_index":2554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["within",{"_index":595,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/GetRoleComponent.html":{},"components/ManagerPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/ShoppingCartComponent.html":{},"interfaces/TableColumn-2.html":{},"interfaces/TableColumn-3.html":{},"interfaces/TableColumn-4.html":{},"interfaces/TableColumn-5.html":{},"interfaces/TableConfig-2.html":{},"interfaces/TableConfig-3.html":{},"interfaces/TableConfig-4.html":{},"interfaces/TableConfig-5.html":{}}}],["without",{"_index":2216,"title":{},"body":{"components/SeasonalItemPopupComponent.html":{}}}],["word",{"_index":299,"title":{},"body":{"pipes/CapitalizeAndReplacePipe.html":{},"pipes/CapitalizePipe.html":{},"pipes/FormatCamelCasePipe.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"components/NavMenuComponent.html":{},"interfaces/OrderItem.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["word.charat(0).touppercase",{"_index":1520,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["word.substr(1).tolowercase",{"_index":1521,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["words",{"_index":1533,"title":{},"body":{"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"components/QuickAddPopupComponent.html":{},"interfaces/SalesSummary.html":{},"components/SeasonalItemPopupComponent.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["work",{"_index":2385,"title":{},"body":{"classes/TeamMember.html":{}}}],["works",{"_index":2322,"title":{},"body":{"interfaces/TableColumn.html":{},"interfaces/TableConfig.html":{}}}],["wrap",{"_index":1257,"title":{},"body":{"components/EmployeeCreationsMenuComponent.html":{},"components/MenuViewComponent.html":{},"components/MilkTeaMenuComponent.html":{},"components/ShoppingCartComponent.html":{},"components/SignatureMilkTeaMenuComponent.html":{},"components/SlushMenuComponent.html":{},"components/SmoothieMenuComponent.html":{}}}],["www.namcafetx.com",{"_index":1694,"title":{},"body":{"components/LearnMoreComponent.html":{}}}],["wya",{"_index":2558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x9g",{"_index":845,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["xx",{"_index":663,"title":{},"body":{"components/CheckoutPopupComponent.html":{}}}],["y",{"_index":634,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/EditItemPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/MenuItemComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{}}}],["yes",{"_index":708,"title":{},"body":{"components/ConfirmationPopupComponent.html":{}}}],["yes:hover",{"_index":710,"title":{},"body":{"components/ConfirmationPopupComponent.html":{}}}],["yj",{"_index":846,"title":{},"body":{"components/CustomerViewComponent.html":{}}}],["you've",{"_index":1675,"title":{},"body":{"components/LearnMoreComponent.html":{}}}],["you\\'ve",{"_index":1697,"title":{},"body":{"components/LearnMoreComponent.html":{}}}],["z",{"_index":623,"title":{},"body":{"components/CheckoutPopupComponent.html":{},"components/ConfirmationPopupComponent.html":{},"components/CustomerViewComponent.html":{},"components/EditItemPopupComponent.html":{},"components/ManagerPopupComponent.html":{},"components/NavMenuComponent.html":{},"components/QuickAddPopupComponent.html":{},"components/RestockReportPopupComponent.html":{},"components/SeasonalItemPopupComponent.html":{},"components/ShoppingCartComponent.html":{}}}],["z])/g",{"_index":1305,"title":{},"body":{"pipes/FormatCamelCasePipe.html":{},"interfaces/InventoryItem.html":{},"interfaces/InventoryMap.html":{},"interfaces/OrderItem.html":{},"interfaces/SalesSummary.html":{},"interfaces/TableColumn-1.html":{},"interfaces/TableConfig-1.html":{}}}],["zone.js",{"_index":2493,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ActiveComponentService.html":{"url":"injectables/ActiveComponentService.html","title":"injectable - ActiveComponentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ActiveComponentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/currentcomp.service.ts\n        \n\n\n            \n                Description\n            \n            \n                ActiveComponentService manages the state of the currently active component in the application.\nIt uses a BehaviorSubject to track and update the active component's name.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeComponent\n                            \n                            \n                                    Private\n                                activeComponentSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setActiveComponent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setActiveComponent\n                        \n                    \n                \n            \n            \n                \nsetActiveComponent(componentName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/currentcomp.service.ts:26\n                        \n                    \n\n\n            \n                \n                        Sets the currently active component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                componentName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The name of the component to be set as active.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeComponent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.activeComponentSource.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/currentcomp.service.ts:19\n                        \n                    \n\n            \n                \n                    The currently active component as an Observable.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        activeComponentSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('')\n                    \n                \n                    \n                        \n                                Defined in src/app/services/currentcomp.service.ts:15\n                        \n                    \n\n            \n                \n                    The currently active component.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * `ActiveComponentService` manages the state of the currently active component in the application.\n * It uses a BehaviorSubject to track and update the active component's name.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActiveComponentService {\n  /**\n   * The currently active component.\n   */\n  private activeComponentSource = new BehaviorSubject('');\n  /**\n   * The currently active component as an Observable.\n   */\n  activeComponent = this.activeComponentSource.asObservable();\n\n  /**\n   * Sets the currently active component.\n   * \n   * @param componentName The name of the component to be set as active.\n   */\n  setActiveComponent(componentName: string) {\n    this.activeComponentSource.next(componentName);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAuthenticationButtonComponent\n\nAuthenticationButtonComponent\n\nAppModule -->\n\nAuthenticationButtonComponent->AppModule\n\n\n\n\n\nCapitalizeAndReplacePipe\n\nCapitalizeAndReplacePipe\n\nAppModule -->\n\nCapitalizeAndReplacePipe->AppModule\n\n\n\n\n\nCapitalizePipe\n\nCapitalizePipe\n\nAppModule -->\n\nCapitalizePipe->AppModule\n\n\n\n\n\nCartModalComponent\n\nCartModalComponent\n\nAppModule -->\n\nCartModalComponent->AppModule\n\n\n\n\n\nCashierViewComponent\n\nCashierViewComponent\n\nAppModule -->\n\nCashierViewComponent->AppModule\n\n\n\n\n\nCheckoutPopupComponent\n\nCheckoutPopupComponent\n\nAppModule -->\n\nCheckoutPopupComponent->AppModule\n\n\n\n\n\nConfirmationPopupComponent\n\nConfirmationPopupComponent\n\nAppModule -->\n\nConfirmationPopupComponent->AppModule\n\n\n\n\n\nContactUsComponent\n\nContactUsComponent\n\nAppModule -->\n\nContactUsComponent->AppModule\n\n\n\n\n\nCustomerViewComponent\n\nCustomerViewComponent\n\nAppModule -->\n\nCustomerViewComponent->AppModule\n\n\n\n\n\nEditItemPopupComponent\n\nEditItemPopupComponent\n\nAppModule -->\n\nEditItemPopupComponent->AppModule\n\n\n\n\n\nEmployeeCreationsMenuComponent\n\nEmployeeCreationsMenuComponent\n\nAppModule -->\n\nEmployeeCreationsMenuComponent->AppModule\n\n\n\n\n\nFormatCamelCasePipe\n\nFormatCamelCasePipe\n\nAppModule -->\n\nFormatCamelCasePipe->AppModule\n\n\n\n\n\nGetRoleComponent\n\nGetRoleComponent\n\nAppModule -->\n\nGetRoleComponent->AppModule\n\n\n\n\n\nLoginButtonComponent\n\nLoginButtonComponent\n\nAppModule -->\n\nLoginButtonComponent->AppModule\n\n\n\n\n\nLogoutButtonComponent\n\nLogoutButtonComponent\n\nAppModule -->\n\nLogoutButtonComponent->AppModule\n\n\n\n\n\nManagerPopupComponent\n\nManagerPopupComponent\n\nAppModule -->\n\nManagerPopupComponent->AppModule\n\n\n\n\n\nManagerViewComponent\n\nManagerViewComponent\n\nAppModule -->\n\nManagerViewComponent->AppModule\n\n\n\n\n\nMenuItemComponent\n\nMenuItemComponent\n\nAppModule -->\n\nMenuItemComponent->AppModule\n\n\n\n\n\nMenuViewComponent\n\nMenuViewComponent\n\nAppModule -->\n\nMenuViewComponent->AppModule\n\n\n\n\n\nMilkTeaMenuComponent\n\nMilkTeaMenuComponent\n\nAppModule -->\n\nMilkTeaMenuComponent->AppModule\n\n\n\n\n\nNavMenuComponent\n\nNavMenuComponent\n\nAppModule -->\n\nNavMenuComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nQuickAddPopupComponent\n\nQuickAddPopupComponent\n\nAppModule -->\n\nQuickAddPopupComponent->AppModule\n\n\n\n\n\nReplacePipe\n\nReplacePipe\n\nAppModule -->\n\nReplacePipe->AppModule\n\n\n\n\n\nReplaceUnderscoresPipe\n\nReplaceUnderscoresPipe\n\nAppModule -->\n\nReplaceUnderscoresPipe->AppModule\n\n\n\n\n\nRestockReportPopupComponent\n\nRestockReportPopupComponent\n\nAppModule -->\n\nRestockReportPopupComponent->AppModule\n\n\n\n\n\nSeasonalItemPopupComponent\n\nSeasonalItemPopupComponent\n\nAppModule -->\n\nSeasonalItemPopupComponent->AppModule\n\n\n\n\n\nShoppingCartComponent\n\nShoppingCartComponent\n\nAppModule -->\n\nShoppingCartComponent->AppModule\n\n\n\n\n\nSignatureMilkTeaMenuComponent\n\nSignatureMilkTeaMenuComponent\n\nAppModule -->\n\nSignatureMilkTeaMenuComponent->AppModule\n\n\n\n\n\nSignupButtonComponent\n\nSignupButtonComponent\n\nAppModule -->\n\nSignupButtonComponent->AppModule\n\n\n\n\n\nSlushMenuComponent\n\nSlushMenuComponent\n\nAppModule -->\n\nSlushMenuComponent->AppModule\n\n\n\n\n\nSmoothieMenuComponent\n\nSmoothieMenuComponent\n\nAppModule -->\n\nSmoothieMenuComponent->AppModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nAppModule -->\n\nWeatherComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AuthenticationButtonComponent\n                        \n                        \n                            CapitalizeAndReplacePipe\n                        \n                        \n                            CapitalizePipe\n                        \n                        \n                            CartModalComponent\n                        \n                        \n                            CashierViewComponent\n                        \n                        \n                            CheckoutPopupComponent\n                        \n                        \n                            ConfirmationPopupComponent\n                        \n                        \n                            ContactUsComponent\n                        \n                        \n                            CustomerViewComponent\n                        \n                        \n                            EditItemPopupComponent\n                        \n                        \n                            EmployeeCreationsMenuComponent\n                        \n                        \n                            FormatCamelCasePipe\n                        \n                        \n                            GetRoleComponent\n                        \n                        \n                            LoginButtonComponent\n                        \n                        \n                            LogoutButtonComponent\n                        \n                        \n                            ManagerPopupComponent\n                        \n                        \n                            ManagerViewComponent\n                        \n                        \n                            MenuItemComponent\n                        \n                        \n                            MenuViewComponent\n                        \n                        \n                            MilkTeaMenuComponent\n                        \n                        \n                            NavMenuComponent\n                        \n                        \n                            ProfileComponent\n                        \n                        \n                            QuickAddPopupComponent\n                        \n                        \n                            ReplacePipe\n                        \n                        \n                            ReplaceUnderscoresPipe\n                        \n                        \n                            RestockReportPopupComponent\n                        \n                        \n                            SeasonalItemPopupComponent\n                        \n                        \n                            ShoppingCartComponent\n                        \n                        \n                            SignatureMilkTeaMenuComponent\n                        \n                        \n                            SignupButtonComponent\n                        \n                        \n                            SlushMenuComponent\n                        \n                        \n                            SmoothieMenuComponent\n                        \n                        \n                            WeatherComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavMenuComponent } from './nav-menu/nav-menu.component';\nimport { CustomerViewComponent } from './customer-view/customer-view.component';\nimport { CashierViewComponent } from './cashier-view/cashier-view.component';\nimport { ManagerViewComponent } from './manager-view/manager-view.component';\nimport { MenuViewComponent } from './menu-view/menu-view.component';\nimport { CartModalComponent } from './cart-modal/cart-modal.component';\nimport { WeatherComponent } from './weather/weather.component';\nimport { CartService } from './cart-modal/cart-modal.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AuthModule } from '@auth0/auth0-angular';\nimport { environment as env } from '../environments/environment';\nimport { LoginButtonComponent } from './components/login-button/login-button.component';\nimport { MilkTeaMenuComponent } from './milk-tea-menu/milk-tea-menu.component';\nimport { SignatureMilkTeaMenuComponent } from './signature-milk-tea-menu/signature-milk-tea-menu.component';\nimport { SlushMenuComponent } from './slush-menu/slush-menu.component';\nimport { SmoothieMenuComponent } from './smoothie-menu/smoothie-menu.component';\nimport { EmployeeCreationsMenuComponent } from './employee-creations-menu/employee-creations-menu.component';\nimport { SignupButtonComponent } from './components/signup-button/signup-button.component';\nimport { LogoutButtonComponent } from './components/logout-button/logout-button.component';\nimport { ReplacePipe } from './pipes/replace.pipe';\nimport { CapitalizePipe } from './pipes/capitalize.pipe';\nimport { AuthenticationButtonComponent } from './components/authentication-button/authentication-button.component';\nimport { ManagerPopupComponent } from './manager-view/manager-popup/manager-popup.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { ReplaceUnderscoresPipe } from './pipes/UnderlineRemovat.pipe.service';\nimport { MenuItemComponent } from './menu-item/menu-item.component';\nimport { GetRoleComponent } from './components/get-role/get-role.component';\nimport { EditItemPopupComponent } from './manager-view/edit-item-popup/edit-item-popup.component';\nimport { ConfirmationPopupComponent } from './manager-view/confirmation-popup/confirmation-popup.component';\nimport { QuickAddPopupComponent } from './manager-view/quick-add-popup/quick-add-popup.component';\nimport { ShoppingCartComponent } from './shopping-cart/shopping-cart.component';\nimport { CapitalizeAndReplacePipe } from './pipes/capitalize-and-replace.pipe';\nimport { RestockReportPopupComponent } from './manager-view/restock-report-popup/restock-report-popup.component';\nimport { FormatCamelCasePipe } from './pipes/format-camel-case.pipe';\nimport { ContactUsComponent } from './contact-us/contact-us.component';\nimport { CheckoutPopupComponent } from './shopping-cart/checkout-popup/checkout-popup.component';\n\nimport { SeasonalItemPopupComponent } from './manager-view/seasonal-item-popup/seasonal-item-popup.component';\nimport { CommonModule } from '@angular/common';\n\n\n@NgModule({\n  declarations: [\n    ReplaceUnderscoresPipe,\n    AppComponent,\n    NavMenuComponent,\n    CustomerViewComponent,\n    CashierViewComponent,\n    ManagerViewComponent,\n    MenuViewComponent,\n    CartModalComponent,\n    WeatherComponent,\n    LoginButtonComponent,\n    MilkTeaMenuComponent,\n    SignatureMilkTeaMenuComponent,\n    SlushMenuComponent,\n    SmoothieMenuComponent,\n    EmployeeCreationsMenuComponent,\n    SignupButtonComponent,\n    LogoutButtonComponent,\n    ReplacePipe,\n    CapitalizePipe,\n    AuthenticationButtonComponent,\n    ManagerPopupComponent,\n    ProfileComponent,\n    MenuItemComponent,\n    GetRoleComponent,\n    EditItemPopupComponent,\n    ConfirmationPopupComponent,\n    QuickAddPopupComponent,\n    ShoppingCartComponent,\n    CapitalizeAndReplacePipe,\n    RestockReportPopupComponent,\n    FormatCamelCasePipe,\n    ContactUsComponent,\n    CheckoutPopupComponent,\n    SeasonalItemPopupComponent,\n  ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    FormsModule,\n    RouterModule.forRoot([\n      { path: '', component: CustomerViewComponent, pathMatch: 'full' },\n      { path: 'Cashier', component: CashierViewComponent },\n      { path: 'Manager', component: ManagerViewComponent },\n      { path: 'Menu', component: MenuViewComponent },\n      { path: 'Menu/Milk-Tea', component: MilkTeaMenuComponent },\n      { path: 'Menu/Signature-Milk-Tea', component: SignatureMilkTeaMenuComponent },\n      { path: 'Menu/Slush', component: SlushMenuComponent },\n      { path: 'Menu/Smoothies', component: SmoothieMenuComponent },\n      { path: 'Menu/Employee-Creations', component: EmployeeCreationsMenuComponent },\n      { path: 'Menu/:type/:name', component: MenuItemComponent },\n      { path: 'ShoppingCart', component: ShoppingCartComponent },\n    ]),\n    HttpClientModule,\n    AuthModule.forRoot({\n      ...env.auth,\n    }),\n    ReactiveFormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProfileComponent } from 'src/app/pages/profile/profile.component';\nimport { CustomerViewComponent } from './customer-view/customer-view.component';\n\nimport { AuthGuard } from '@auth0/auth0-angular';\nimport { ContactUsComponent } from './contact-us/contact-us.component';\nimport { LearnMoreComponent } from './learn-more/learn-more.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CustomerViewComponent,\n    pathMatch: 'full',\n  },\n  {\n    path: 'profile',\n    component: ProfileComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'contact',\n    component: ContactUsComponent\n  },\n  {\n    path: 'more-info',\n    component: LearnMoreComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthenticationButtonComponent.html":{"url":"components/AuthenticationButtonComponent.html","title":"component - AuthenticationButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthenticationButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/authentication-button/authentication-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        AuthenticationButtonComponent handles the user interactions on the authentication button.\nIt provides functionality for users to log in or log out of the application.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-authentication-button\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./authentication-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component} from '@angular/core';\nimport { AuthService } from '@auth0/auth0-angular';\n/**\n * `AuthenticationButtonComponent` handles the user interactions on the authentication button.\n * It provides functionality for users to log in or log out of the application.\n */\n@Component({\n  selector: 'app-authentication-button',\n  templateUrl: './authentication-button.component.html',\n  styles: [],\n})\nexport class AuthenticationButtonComponent{\n  /**\n   * Construction that uses teh authService set to call based on click events\n   * @param auth \n   */\n}\n    \n\n    \n        \n\n\n \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'app-authentication-button'},{'name': 'CartModalComponent', 'selector': 'app-cart-modal'},{'name': 'CashierViewComponent', 'selector': 'app-cashier-view'},{'name': 'CheckoutPopupComponent', 'selector': 'app-checkout-popup'},{'name': 'ConfirmationPopupComponent', 'selector': 'app-confirmation-popup'},{'name': 'ContactUsComponent', 'selector': 'app-contact-us'},{'name': 'CustomerViewComponent', 'selector': 'app-customer-view'},{'name': 'EditItemPopupComponent', 'selector': 'app-edit-item-popup'},{'name': 'EmployeeCreationsMenuComponent', 'selector': 'app-employee-creations-menu'},{'name': 'GetRoleComponent', 'selector': 'app-get-role'},{'name': 'LearnMoreComponent', 'selector': 'app-learn-more'},{'name': 'LoginButtonComponent', 'selector': 'app-login-button'},{'name': 'LogoutButtonComponent', 'selector': 'app-logout-button'},{'name': 'ManagerPopupComponent', 'selector': 'app-manager-popup'},{'name': 'ManagerViewComponent', 'selector': 'app-manager-view'},{'name': 'MenuItemComponent', 'selector': 'app-menu-item'},{'name': 'MenuViewComponent', 'selector': 'app-menu-view'},{'name': 'MilkTeaMenuComponent', 'selector': 'app-milk-tea-menu'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuickAddPopupComponent', 'selector': 'app-quick-add-popup'},{'name': 'RestockReportPopupComponent', 'selector': 'app-restock-report-popup'},{'name': 'SeasonalItemPopupComponent', 'selector': 'app-seasonal-item-popup'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'SignatureMilkTeaMenuComponent', 'selector': 'app-signature-milk-tea-menu'},{'name': 'SignupButtonComponent', 'selector': 'app-signup-button'},{'name': 'SlushMenuComponent', 'selector': 'app-slush-menu'},{'name': 'SmoothieMenuComponent', 'selector': 'app-smoothie-menu'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthenticationButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/CapitalizeAndReplacePipe.html":{"url":"pipes/CapitalizeAndReplacePipe.html","title":"pipe - CapitalizeAndReplacePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  CapitalizeAndReplacePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/capitalize-and-replace.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                CapitalizeAndReplacePipe transforms a string by replacing underscores with spaces and capitalizing each word.\nIt also ensures proper spacing after commas.\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        capitalizeAndReplace\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pipes/capitalize-and-replace.pipe.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * `CapitalizeAndReplacePipe` transforms a string by replacing underscores with spaces and capitalizing each word.\n * It also ensures proper spacing after commas.\n */\n@Pipe({\n  name: 'capitalizeAndReplace'\n})\nexport class CapitalizeAndReplacePipe implements PipeTransform {\n  transform(value: string): string {\n    if (!value) return value;\n\n    return value.replace(/_/g, ' ').replace(/\\b\\w/g, firstLetter => firstLetter.toUpperCase()).replace(/,/g, ', ');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/CapitalizePipe.html":{"url":"pipes/CapitalizePipe.html","title":"pipe - CapitalizePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  CapitalizePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/capitalize.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                CapitalizePipe transforms a string by capitalizing the first letter of each word.\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        capitalize\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pipes/capitalize.pipe.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * `CapitalizePipe` transforms a string by capitalizing the first letter of each word.\n */\n@Pipe({\n  name: 'capitalize'\n})\nexport class CapitalizePipe implements PipeTransform {\n  transform(value: string): string {\n    return value.replace(/[^,]+/g, match => match.charAt(0).toUpperCase() + match.slice(1) + ' ');\n  }\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CartModalComponent.html":{"url":"components/CartModalComponent.html","title":"component - CartModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CartModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/cart-modal/cart-modal.component.ts\n\n\n\n    \n        Description\n    \n    \n        CartModalComponent is responsible for displaying the items that are currently in the cart.\nIt allows users to remove items from the cart, proceed with the checkout, or cancel the operation.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-cart-modal\n            \n\n\n\n            \n                styleUrls\n                ./cart-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./cart-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateTotal\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCancelClick\n                            \n                            \n                                onContinueClick\n                            \n                            \n                                removeItem\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                menuItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                cancelClicked\n                            \n                            \n                                continueClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cartService: CartService)\n                    \n                \n                        \n                            \n                                Defined in src/app/cart-modal/cart-modal.component.ts:30\n                            \n                        \n\n                \n                    \n                            Constructor for CartModalComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cartService\n                                                  \n                                                        \n                                                                        CartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service responsible for managing the cart operations.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        menuItems\n                    \n                \n                \n                    \n                        Type :         MenuItem[] | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/cart-modal/cart-modal.component.ts:20\n                            \n                        \n                \n                    \n                        A list of menu items that are currently in the user's cart.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        cancelClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/cart-modal/cart-modal.component.ts:30\n                            \n                        \n                \n                    \n                        An event emitter that notifies the parent component when the user clicks the 'cancel' button.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        continueClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/cart-modal/cart-modal.component.ts:25\n                            \n                        \n                \n                    \n                        An event emitter that notifies the parent component when the user clicks the 'continue' button.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calculateTotal\n                        \n                    \n                \n            \n            \n                \ncalculateTotal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/cart-modal/cart-modal.component.ts:77\n                        \n                    \n\n\n            \n                \n                        Calculates the total price of all items in the cart.\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                The total price as a number.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/cart-modal/cart-modal.component.ts:42\n                        \n                    \n\n\n            \n                \n                        OnInit lifecycle hook to subscribe to the cartService's cartItems$ observable to fetch and update the list of menu items in the cart.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancelClick\n                        \n                    \n                \n            \n            \n                \nonCancelClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/cart-modal/cart-modal.component.ts:67\n                        \n                    \n\n\n            \n                \n                        Emits an event and clears the cart when the user clicks the 'cancel' button to cancel the checkout process.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onContinueClick\n                        \n                    \n                \n            \n            \n                \nonContinueClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/cart-modal/cart-modal.component.ts:60\n                        \n                    \n\n\n            \n                \n                        Emits an event when the user clicks the 'continue' button to proceed with the checkout process.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/cart-modal/cart-modal.component.ts:53\n                        \n                    \n\n\n            \n                \n                        Removes an item from the cart based on the given index.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The index of the item to be removed from the cart.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { MenuItem } from '../menu-view/menu-item.model';\nimport { CartService } from './cart-modal.service';\n\n/**\n * `CartModalComponent` is responsible for displaying the items that are currently in the cart.\n * It allows users to remove items from the cart, proceed with the checkout, or cancel the operation.\n *\n * @Component Decorator that marks the class as an Angular component, specifies the selector, template, and styles.\n */\n@Component({\n  selector: 'app-cart-modal',\n  templateUrl: './cart-modal.component.html',\n  styleUrls: ['./cart-modal.component.scss']\n})\nexport class CartModalComponent {\n  /**\n   * A list of menu items that are currently in the user's cart.\n   */\n  @Input() menuItems: MenuItem[] | undefined;\n\n  /**\n   * An event emitter that notifies the parent component when the user clicks the 'continue' button.\n   */\n  @Output() continueClicked: EventEmitter = new EventEmitter();\n\n  /**\n   * An event emitter that notifies the parent component when the user clicks the 'cancel' button.\n   */\n  @Output() cancelClicked: EventEmitter = new EventEmitter();\n\n  /**\n   * Constructor for `CartModalComponent`.\n   * \n   * @param cartService The service responsible for managing the cart operations.\n   */\n  constructor(private cartService: CartService) { }\n\n  /**\n   * OnInit lifecycle hook to subscribe to the cartService's cartItems$ observable to fetch and update the list of menu items in the cart.\n   */\n  ngOnInit() {\n    this.cartService.cartItems$.subscribe(items => {\n      this.menuItems = items;\n    });\n  }\n\n  /**\n   * Removes an item from the cart based on the given index.\n   * \n   * @param index The index of the item to be removed from the cart.\n   */\n  removeItem(index: number) {\n    this.cartService.removeItem(index);\n  }\n\n  /**\n   * Emits an event when the user clicks the 'continue' button to proceed with the checkout process.\n   */\n  onContinueClick() {\n    this.continueClicked.emit();\n  }\n\n  /**\n   * Emits an event and clears the cart when the user clicks the 'cancel' button to cancel the checkout process.\n   */\n  onCancelClick() {\n    this.cancelClicked.emit();\n    this.cartService.clearCart();\n  }\n\n  /**\n   * Calculates the total price of all items in the cart.\n   * \n   * @returns The total price as a number.\n   */\n  calculateTotal(): number {\n    if (this.menuItems) {\n      return this.menuItems.reduce((total, item) => total + parseFloat(item.menu_item_price), 0);\n    } else {\n      return 0;\n    }\n  }\n}\n\n    \n\n    \n        \n    Ready to Order\n    \n        \n                {{item.menu_item_name | replaceUnderscores | titlecase}}\n            \n            {{item.menu_item_price | currency:'USD':'symbol':'1.2-2' }}\n            \n                Remove\n            \n        \n\n    \n    \n        Total: {{ calculateTotal() | currency:'USD':'symbol':'1.2-2' }}\n    \n    \n        Cancel Order\n        Checkout\n    \n\n    \n\n    \n                \n                    ./cart-modal.component.scss\n                \n                // cart-modal.component.scss\n.cart-modal {\n    position: fixed;\n    top: 20px;\n    left: 0;\n    width: 20%;\n    height: 100%;\n    background: #fff;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    //justify-content: space-between;\n\n    .content {\n        flex: 1;\n    }\n\n    p {\n        text-align: left;\n        font-size: 15px;\n        // position: relative;\n        // display: inline-block;\n        // /* Allow horizontal resize */\n        margin-bottom: 20px;\n\n    }\n\n    h2 {\n        margin-top: 20%;\n        text-align: center;\n    }\n\n    ul {\n        list-style: none;\n        padding: 0;\n    }\n\n    li {\n        padding: 10px 0;\n        border-bottom: 1px solid #eee;\n    }\n\n    .total {\n        display: block;\n        width: 100%;\n        padding: 10px;\n        background: #f9fbf9;\n        color: #030303;\n        border: none;\n        position: absolute;\n        bottom: 100px;\n        width: 90%;\n\n        p {\n            font-size: 28px;\n            text-align: center;\n        }\n    }\n\n\n\n\n    button.continue {\n        display: block;\n        width: 100%;\n        padding: 10px;\n        margin-top: 10px;\n        background: #4CAF50;\n        color: #fff;\n        border: none;\n        position: absolute;\n        bottom: 75px;\n        width: 85%;\n\n        &:hover {\n            transform: scale(1.05);\n        }\n        &:active {\n            background-color: rgb(92, 184, 92);\n        }\n    }\n\n    button.cancel {\n        display: block;\n        width: 100%;\n        padding: 10px;\n        margin-top: 10px;\n        background-color: rgb(250, 4, 4);\n        color: #fff;\n        border: none;\n        position: absolute;\n        bottom: 25px;\n        width: 85%;\n\n        &:hover {\n            transform: scale(1.05);\n        }\n        &:active {\n            background-color: rgb(243, 81, 81);\n        }\n    }\n\n\n    button.small {\n        justify-content: right;\n        margin-bottom: 20px;\n        font-size: 15px;\n        color: #fff;\n        border: none;\n        background-color: #fa0202;\n        border-radius: 10%;\n\n        &:hover {\n            transform: scale(1.05);\n        }\n        &:active {\n            background-color: rgb(243, 81, 81);\n        }\n    }\n\n    .top-row {\n        display: flex;\n        justify-content: space-between;\n        // position: absolute;\n        padding: 0px;\n        align-items: flex-start;\n\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Ready to Order                            {{item.menu_item_name | replaceUnderscores | titlecase}}                        {{item.menu_item_price | currency:\\'USD\\':\\'symbol\\':\\'1.2-2\\' }}                            Remove                                    Total: {{ calculateTotal() | currency:\\'USD\\':\\'symbol\\':\\'1.2-2\\' }}                Cancel Order        Checkout    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'app-authentication-button'},{'name': 'CartModalComponent', 'selector': 'app-cart-modal'},{'name': 'CashierViewComponent', 'selector': 'app-cashier-view'},{'name': 'CheckoutPopupComponent', 'selector': 'app-checkout-popup'},{'name': 'ConfirmationPopupComponent', 'selector': 'app-confirmation-popup'},{'name': 'ContactUsComponent', 'selector': 'app-contact-us'},{'name': 'CustomerViewComponent', 'selector': 'app-customer-view'},{'name': 'EditItemPopupComponent', 'selector': 'app-edit-item-popup'},{'name': 'EmployeeCreationsMenuComponent', 'selector': 'app-employee-creations-menu'},{'name': 'GetRoleComponent', 'selector': 'app-get-role'},{'name': 'LearnMoreComponent', 'selector': 'app-learn-more'},{'name': 'LoginButtonComponent', 'selector': 'app-login-button'},{'name': 'LogoutButtonComponent', 'selector': 'app-logout-button'},{'name': 'ManagerPopupComponent', 'selector': 'app-manager-popup'},{'name': 'ManagerViewComponent', 'selector': 'app-manager-view'},{'name': 'MenuItemComponent', 'selector': 'app-menu-item'},{'name': 'MenuViewComponent', 'selector': 'app-menu-view'},{'name': 'MilkTeaMenuComponent', 'selector': 'app-milk-tea-menu'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuickAddPopupComponent', 'selector': 'app-quick-add-popup'},{'name': 'RestockReportPopupComponent', 'selector': 'app-restock-report-popup'},{'name': 'SeasonalItemPopupComponent', 'selector': 'app-seasonal-item-popup'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'SignatureMilkTeaMenuComponent', 'selector': 'app-signature-milk-tea-menu'},{'name': 'SignupButtonComponent', 'selector': 'app-signup-button'},{'name': 'SlushMenuComponent', 'selector': 'app-slush-menu'},{'name': 'SmoothieMenuComponent', 'selector': 'app-smoothie-menu'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CartModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CartService.html":{"url":"injectables/CartService.html","title":"injectable - CartService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/cart-modal/cart-modal.service.ts\n        \n\n\n            \n                Description\n            \n            \n                CartService provides a service for managing the cart.\nDefine an ngOnInit() method to handle any additional initialization tasks.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cartItems$\n                            \n                            \n                                    Private\n                                cartItemsSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItem\n                            \n                            \n                                clearCart\n                            \n                            \n                                    Async\n                                confirmOrder\n                            \n                            \n                                removeItem\n                            \n                            \n                                    Private\n                                updateSessionStorage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/cart-modal/cart-modal.service.ts:23\n                            \n                        \n\n                \n                    \n                             Constructor for CartService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HttpClient for making HTTP requests.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItem\n                        \n                    \n                \n            \n            \n                \naddItem(item: MenuItem)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/cart-modal/cart-modal.service.ts:45\n                        \n                    \n\n\n            \n                \n                         Method to add an item to the cart.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            MenuItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Menu item to be added to the cart.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearCart\n                        \n                    \n                \n            \n            \n                \nclearCart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/cart-modal/cart-modal.service.ts:64\n                        \n                    \n\n\n            \n                \n                        Method to clear the cart.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        confirmOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    confirmOrder(customerId: number, orderItems: any[], orderTotal: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/cart-modal/cart-modal.service.ts:75\n                        \n                    \n\n\n            \n                \n                         Method to fetch data from the backend.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                customerId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                orderItems\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                orderTotal\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/cart-modal/cart-modal.service.ts:55\n                        \n                    \n\n\n            \n                \n                        Method to remove an item from the cart.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Index of the item to be removed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateSessionStorage\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateSessionStorage(items: MenuItem[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/cart-modal/cart-modal.service.ts:38\n                        \n                    \n\n\n            \n                \n                         Method to update the session storage.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                items\n                                            \n                                                            MenuItem[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Array of menu items.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cartItems$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/cart-modal/cart-modal.service.ts:23\n                        \n                    \n\n            \n                \n                    Observable for cart items.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cartItemsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/cart-modal/cart-modal.service.ts:19\n                        \n                    \n\n            \n                \n                    BehaviorSubject for cart items.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { MenuItem } from '../menu-view/menu-item.model';\nimport { HttpClient } from '@angular/common/http';\n/**\n * `CartService` provides a service for managing the cart.\n * @Injectable Decorator that marks the class as available to be provided and injected as a dependency.\n * @root Specifies that the service should be provided in the root injector.\n * @OnInit Lifecycle hook that is called after Angular has initialized all data-bound properties of a directive.\n * Define an ngOnInit() method to handle any additional initialization tasks.\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class CartService {\n  /**\n   * BehaviorSubject for cart items.\n   */\n    private cartItemsSubject: BehaviorSubject;\n    /**\n     * Observable for cart items.\n     */\n    cartItems$: Observable;\n  /**\n   *  Constructor for `CartService`.\n   * @param http HttpClient for making HTTP requests.\n   */\n    constructor(private http: HttpClient) {\n      const savedCartItems = sessionStorage.getItem('cartItems');\n      const initialCartItems = savedCartItems ? JSON.parse(savedCartItems) : [];\n      this.cartItemsSubject = new BehaviorSubject(initialCartItems);\n      this.cartItems$ = this.cartItemsSubject.asObservable(); // Initialize after cartItemsSubject\n    }\n  /**\n   *  Method to update the session storage.\n   * @param items   Array of menu items.\n   */\n    private updateSessionStorage(items: MenuItem[]) {\n      sessionStorage.setItem('cartItems', JSON.stringify(items));\n    }\n    /**\n     *  Method to add an item to the cart.\n     * @param item Menu item to be added to the cart.\n     */\n    addItem(item: MenuItem) {\n      const currentItems = this.cartItemsSubject.value;\n      const updatedItems = [...currentItems, item];\n      this.cartItemsSubject.next(updatedItems);\n      this.updateSessionStorage(updatedItems);\n    }\n  /**\n   * Method to remove an item from the cart.\n   * @param index Index of the item to be removed.\n   */\n    removeItem(index: number) {\n      const currentItems = this.cartItemsSubject.value;\n      currentItems.splice(index, 1);\n      this.cartItemsSubject.next([...currentItems]);\n      this.updateSessionStorage([...currentItems]);\n    }\n  /**\n   * Method to clear the cart.\n   */\n    clearCart() {\n      this.cartItemsSubject.next([]);\n      sessionStorage.removeItem('cartItems');\n    }\n    /**\n     *  Method to fetch data from the backend.\n     * @param customerId \n     * @param orderItems \n     * @param orderTotal \n     * @returns \n     */\n    async confirmOrder(customerId: number, orderItems: any[], orderTotal: number): Promise {\n      try {\n        // Update the URL to point to your backend server\n        const response = await this.http.post('http://localhost:3000/api/orders/confirmOrder', {\n          customerId,\n          orderItems,\n          orderTotal\n        }).toPromise();\n        return response;\n      } catch (error) {\n        console.error('Error confirming order:', error);\n        throw error;\n      }\n    }\n  }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckoutPopupComponent.html":{"url":"components/CheckoutPopupComponent.html","title":"component - CheckoutPopupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CheckoutPopupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shopping-cart/checkout-popup/checkout-popup.component.ts\n\n\n\n    \n        Description\n    \n    \n        CheckoutPopupComponent is designed to display a checkout interface.\nIt presents a summary of items, their details, and the total cost in a tabular format.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-checkout-popup\n            \n\n\n\n            \n                styleUrls\n                ./checkout-popup.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./checkout-popup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closePopup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                tableConfig\n                            \n                            \n                                title\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shopping-cart/checkout-popup/checkout-popup.component.ts:52\n                            \n                        \n                \n                    \n                        The content to be displayed within the table.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tableConfig\n                    \n                \n                \n                    \n                        Type :         TableConfig\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shopping-cart/checkout-popup/checkout-popup.component.ts:47\n                            \n                        \n                \n                    \n                        The configuration for the table, including the columns to display.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/shopping-cart/checkout-popup/checkout-popup.component.ts:42\n                            \n                        \n                \n                    \n                        The title of the popup, typically describing the content or purpose.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        total\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"0\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/shopping-cart/checkout-popup/checkout-popup.component.ts:57\n                            \n                        \n                \n                    \n                        The total cost of items in the checkout.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shopping-cart/checkout-popup/checkout-popup.component.ts:62\n                            \n                        \n                \n                    \n                        Event emitter to notify the parent component to close the popup.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closePopup\n                        \n                    \n                \n            \n            \n                \nclosePopup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shopping-cart/checkout-popup/checkout-popup.component.ts:67\n                        \n                    \n\n\n            \n                \n                        Emits an event to close the checkout popup.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n/**\n * Represents the structure of a table column.\n */\ninterface TableColumn {\n  /**\n   * The key of the column.\n   */\n  key: string;\n  /**\n   * The header of the column.\n   */\n  header: string;\n}\n\n/**\n * Represents the configuration object for table columns in the checkout popup.\n */\ninterface TableConfig {\n  /**\n   * The columns of the table.\n   */\n  columns: TableColumn[];\n}\n\n/**\n * `CheckoutPopupComponent` is designed to display a checkout interface.\n * It presents a summary of items, their details, and the total cost in a tabular format.\n *\n * @Component Decorator that marks the class as an Angular component, specifying the selector, template, and styles.\n */\n@Component({\n  selector: 'app-checkout-popup',\n  templateUrl: './checkout-popup.component.html',\n  styleUrls: ['./checkout-popup.component.scss']\n})\nexport class CheckoutPopupComponent {\n  /**\n   * The title of the popup, typically describing the content or purpose.\n   */\n  @Input() title: string = '';\n\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  @Input() tableConfig?: TableConfig;\n\n  /**\n   * The content to be displayed within the table.\n   */\n  @Input() content: any[] = [];\n\n  /**\n   * The total cost of items in the checkout.\n   */\n  @Input() total: string = \"0\";\n\n  /**\n   * Event emitter to notify the parent component to close the popup.\n   */\n  @Output() close = new EventEmitter();\n\n  /**\n   * Emits an event to close the checkout popup.\n   */\n  closePopup(): void {\n    this.close.emit();\n  }\n}\n\n    \n\n    \n        \n    &times; -->\n    \n      Exit\n    \n    \n        \n            \n              \n                Order Confirmed\n              \n              \n                Order Total: {{ total | currency:'USD':'symbol':'1.2-2' }}\n              \n            \n            \n              \n                Cart Empty\n              \n            \n            \n              \n            \n        \n    \n  \n  \n    \n\n    \n                \n                    ./checkout-popup.component.scss\n                \n                .backdrop {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n    z-index: 1050;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    // padding-top: 10vh;\n}\n  \n.popup {\n    background-color: white;\n    padding: 20px;\n    border-radius: 5px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    position: relative;\n    z-index: 1051;\n    max-height: 80vh;\n    overflow-y: auto; /* Makes content scrollable */\n    width: 500px;\n    position: relative;\n}\n\ntable {\n    width: 100%;\n    border-collapse: separate;\n}\n\nth, td {\n    border: 1px solid #ddd;\n    padding: 8px;\n    text-align: left;\n    font-size: 20px;\n}\n\nth {\n    background-color: #f2f2f2;\n}\n\n.close {\n    position: fixed;\n    top: 10px;\n    right: 10px;\n    cursor: pointer;\n    font-size: 100px;\n    font-weight: bold;\n    z-index: 1100;\n    color: white;\n  }\n  \n.close:hover {\n    color: red;\n}\n\ninput:disabled {\n    background-color: #f3f3f3;\n}\n\n.actionButtons {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.delete {\n    border-color: rgb(255, 100, 100, 0.75);\n    width: 100%;\n    background-color: white;\n}\n\n.delete:hover {\n    background-color: rgb(255, 100, 100, 0.75);\n}\n\n.edit {\n    border-color: rgb(100, 100, 255, 0.75);\n    width: 100%;\n    background-color: white;\n}\n\n.edit:hover {\n    background-color: rgb(100, 100, 255, 0.75);\n}\n\n.popupHeader {\n    display: flex;\n    justify-content: space-between;\n    font-size: xx-large;\n}\n.price {\n    display: flex;\n    justify-content: space-between;\n    font-size: large;\n}\n\n.quickAdd {\n    border-color: rgb(100, 255, 100, 0.75);\n    background-color: white;\n}\n\n.quickAdd:hover {\n    background-color: rgb(100, 255, 100, 0.75);\n}\n\n.exit {\n    border-color: rgb(255, 100, 100, 0.75);\n    background-color: white;\n}\n\n.exit:hover {\n    background-color: rgb(255, 100, 100, 0.75);\n}\n\n.headerButtons {\n    display: flex;\n    justify-content: right;\n    gap: 5px;\n    padding-bottom: 5px;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    × -->          Exit                                                          Order Confirmed                                            Order Total: {{ total | currency:\\'USD\\':\\'symbol\\':\\'1.2-2\\' }}                                                                    Cart Empty                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'app-authentication-button'},{'name': 'CartModalComponent', 'selector': 'app-cart-modal'},{'name': 'CashierViewComponent', 'selector': 'app-cashier-view'},{'name': 'CheckoutPopupComponent', 'selector': 'app-checkout-popup'},{'name': 'ConfirmationPopupComponent', 'selector': 'app-confirmation-popup'},{'name': 'ContactUsComponent', 'selector': 'app-contact-us'},{'name': 'CustomerViewComponent', 'selector': 'app-customer-view'},{'name': 'EditItemPopupComponent', 'selector': 'app-edit-item-popup'},{'name': 'EmployeeCreationsMenuComponent', 'selector': 'app-employee-creations-menu'},{'name': 'GetRoleComponent', 'selector': 'app-get-role'},{'name': 'LearnMoreComponent', 'selector': 'app-learn-more'},{'name': 'LoginButtonComponent', 'selector': 'app-login-button'},{'name': 'LogoutButtonComponent', 'selector': 'app-logout-button'},{'name': 'ManagerPopupComponent', 'selector': 'app-manager-popup'},{'name': 'ManagerViewComponent', 'selector': 'app-manager-view'},{'name': 'MenuItemComponent', 'selector': 'app-menu-item'},{'name': 'MenuViewComponent', 'selector': 'app-menu-view'},{'name': 'MilkTeaMenuComponent', 'selector': 'app-milk-tea-menu'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuickAddPopupComponent', 'selector': 'app-quick-add-popup'},{'name': 'RestockReportPopupComponent', 'selector': 'app-restock-report-popup'},{'name': 'SeasonalItemPopupComponent', 'selector': 'app-seasonal-item-popup'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'SignatureMilkTeaMenuComponent', 'selector': 'app-signature-milk-tea-menu'},{'name': 'SignupButtonComponent', 'selector': 'app-signup-button'},{'name': 'SlushMenuComponent', 'selector': 'app-slush-menu'},{'name': 'SmoothieMenuComponent', 'selector': 'app-smoothie-menu'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CheckoutPopupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmationPopupComponent.html":{"url":"components/ConfirmationPopupComponent.html","title":"component - ConfirmationPopupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConfirmationPopupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/manager-view/confirmation-popup/confirmation-popup.component.ts\n\n\n\n    \n        Description\n    \n    \n        ConfirmationPopupComponent is a reusable UI component that displays a confirmation dialog to the user.\nIt can be used to confirm actions like edit, delete, or add operations. This component emits events based on the user's choice.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirmation-popup\n            \n\n\n\n            \n                styleUrls\n                ./confirmation-popup.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./confirmation-popup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmAction\n                            \n                            \n                                declineAction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentAction\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                confirm\n                            \n                            \n                                decline\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentAction\n                    \n                \n                \n                    \n                        Type :     \"edit\" | \"delete\" | \"add\" | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/manager-view/confirmation-popup/confirmation-popup.component.ts:33\n                            \n                        \n                \n                    \n                        Input property to specify the current action type like 'edit', 'delete', or 'add'.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/manager-view/confirmation-popup/confirmation-popup.component.ts:18\n                            \n                        \n                \n                    \n                        Input property to receive the item that is subject to confirmation.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        confirm\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/manager-view/confirmation-popup/confirmation-popup.component.ts:23\n                            \n                        \n                \n                    \n                        Output event emitter that fires when the user confirms the action.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        decline\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/manager-view/confirmation-popup/confirmation-popup.component.ts:28\n                            \n                        \n                \n                    \n                        Output event emitter that fires when the user declines the action.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmAction\n                        \n                    \n                \n            \n            \n                \nconfirmAction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/manager-view/confirmation-popup/confirmation-popup.component.ts:38\n                        \n                    \n\n\n            \n                \n                        Emits the confirm event, indicating the action has been confirmed by the user.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        declineAction\n                        \n                    \n                \n            \n            \n                \ndeclineAction()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/manager-view/confirmation-popup/confirmation-popup.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Emits the decline event, indicating the user has declined the action.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n/**\n * `ConfirmationPopupComponent` is a reusable UI component that displays a confirmation dialog to the user.\n * It can be used to confirm actions like edit, delete, or add operations. This component emits events based on the user's choice.\n *\n * @Component Decorator that marks the class as an Angular component, specifying the selector, template, and styles.\n */\n@Component({\n  selector: 'app-confirmation-popup',\n  templateUrl: './confirmation-popup.component.html',\n  styleUrls: ['./confirmation-popup.component.scss']\n})\nexport class ConfirmationPopupComponent {\n  /**\n   * Input property to receive the item that is subject to confirmation.\n   */\n  @Input() item: any;\n\n  /**\n   * Output event emitter that fires when the user confirms the action.\n   */\n  @Output() confirm = new EventEmitter();\n\n  /**\n   * Output event emitter that fires when the user declines the action.\n   */\n  @Output() decline = new EventEmitter();\n\n  /**\n   * Input property to specify the current action type like 'edit', 'delete', or 'add'.\n   */\n  @Input() currentAction: 'edit' | 'delete' | 'add' | null = null;\n\n  /**\n   * Emits the `confirm` event, indicating the action has been confirmed by the user.\n   */\n  confirmAction(): void {\n    this.confirm.emit(this.item);\n  }\n  \n  /**\n   * Emits the `decline` event, indicating the user has declined the action.\n   */\n  declineAction(): void {\n    this.decline.emit();\n  }\n}\n\n    \n\n    \n        \n    \n        \n            Are you sure you want to {{ currentAction }} {{ item?.menu_item_name }} {{ item?.ingredient_name }} {{ item?.item_name }}\n            \n                Yes\n                No\n            \n        \n    \n\n\n    \n\n    \n                \n                    ./confirmation-popup.component.scss\n                \n                .backdrop {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n    z-index: 1050;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    // padding-top: 10vh;\n}\n  \n.popup {\n    background-color: white;\n    padding: 20px;\n    border-radius: 5px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    z-index: 1051;\n    max-height: 80vh;\n    overflow-y: auto; /* Makes content scrollable */\n    width: 40%;\n    position: relative;\n}\n\n.yes {\n    border-color: rgb(100, 255, 100, 0.75);\n    background-color: white;\n    width: 100%;\n}\n\n.yes:hover {\n    background-color: rgb(100, 255, 100, 0.75);\n}\n\n.no {\n    border-color: rgb(255, 100, 100, 0.75);\n    background-color: white;\n    width: 100%;\n}\n\n.no:hover {\n    background-color: rgb(255, 100, 100, 0.75);\n}\n\n.buttons {\n    display: flex;\n    justify-content: center;\n    gap: 10px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Are you sure you want to {{ currentAction }} {{ item?.menu_item_name }} {{ item?.ingredient_name }} {{ item?.item_name }}                            Yes                No                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'app-authentication-button'},{'name': 'CartModalComponent', 'selector': 'app-cart-modal'},{'name': 'CashierViewComponent', 'selector': 'app-cashier-view'},{'name': 'CheckoutPopupComponent', 'selector': 'app-checkout-popup'},{'name': 'ConfirmationPopupComponent', 'selector': 'app-confirmation-popup'},{'name': 'ContactUsComponent', 'selector': 'app-contact-us'},{'name': 'CustomerViewComponent', 'selector': 'app-customer-view'},{'name': 'EditItemPopupComponent', 'selector': 'app-edit-item-popup'},{'name': 'EmployeeCreationsMenuComponent', 'selector': 'app-employee-creations-menu'},{'name': 'GetRoleComponent', 'selector': 'app-get-role'},{'name': 'LearnMoreComponent', 'selector': 'app-learn-more'},{'name': 'LoginButtonComponent', 'selector': 'app-login-button'},{'name': 'LogoutButtonComponent', 'selector': 'app-logout-button'},{'name': 'ManagerPopupComponent', 'selector': 'app-manager-popup'},{'name': 'ManagerViewComponent', 'selector': 'app-manager-view'},{'name': 'MenuItemComponent', 'selector': 'app-menu-item'},{'name': 'MenuViewComponent', 'selector': 'app-menu-view'},{'name': 'MilkTeaMenuComponent', 'selector': 'app-milk-tea-menu'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuickAddPopupComponent', 'selector': 'app-quick-add-popup'},{'name': 'RestockReportPopupComponent', 'selector': 'app-restock-report-popup'},{'name': 'SeasonalItemPopupComponent', 'selector': 'app-seasonal-item-popup'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'SignatureMilkTeaMenuComponent', 'selector': 'app-signature-milk-tea-menu'},{'name': 'SignupButtonComponent', 'selector': 'app-signup-button'},{'name': 'SlushMenuComponent', 'selector': 'app-slush-menu'},{'name': 'SmoothieMenuComponent', 'selector': 'app-smoothie-menu'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmationPopupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContactUsComponent.html":{"url":"components/ContactUsComponent.html","title":"component - ContactUsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContactUsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/contact-us/contact-us.component.ts\n\n\n\n    \n        Description\n    \n    \n        ContactUsComponent handles the user interactions on the contact us page.\nIt provides functionality for users to send queries or feedback to the application's support or management team.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-contact-us\n            \n\n\n\n            \n                styleUrls\n                ./contact-us.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./contact-us.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                customeremail\n                            \n                            \n                                customerfeedback\n                            \n                            \n                                customername\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                submitForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/contact-us/contact-us.component.ts:27\n                            \n                        \n\n                \n                    \n                            Constructor for ContactUsComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        submitForm\n                        \n                    \n                \n            \n            \n                \nsubmitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/contact-us/contact-us.component.ts:41\n                        \n                    \n\n\n            \n                \n                        Submits the contact form data to the ContactService.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/contact-us/contact-us.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customeremail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/contact-us/contact-us.component.ts:23\n                        \n                    \n\n            \n                \n                    The email of the customer.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customerfeedback\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/contact-us/contact-us.component.ts:27\n                        \n                    \n\n            \n                \n                    The feedback of the customer.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customername\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/contact-us/contact-us.component.ts:19\n                        \n                    \n\n            \n                \n                    The name of the customer.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AuthService } from '@auth0/auth0-angular';\nimport { HttpClient } from '@angular/common/http';\n/**\n * `ContactUsComponent` handles the user interactions on the contact us page.\n * It provides functionality for users to send queries or feedback to the application's support or management team.\n *\n * @Component Decorator that marks the class as an Angular component and specifies metadata about the component.\n */\n@Component({\n  selector: 'app-contact-us',\n  templateUrl: './contact-us.component.html',\n  styleUrls: ['./contact-us.component.scss']\n})\nexport class ContactUsComponent {\n  /**\n   * The name of the customer.\n   */\n  customername: string = '';\n  /**\n   * The email of the customer.\n   */\n  customeremail: string = '';\n  /**\n   * The feedback of the customer.\n   */\n  customerfeedback: string = '';\n    /**\n   * Constructor for `ContactUsComponent`.\n   * \n   * @param fb The FormBuilder instance for creating the contact form group.\n   * @param contactService The service that handles contact-related operations.\n   */\n  constructor(\n    public auth: AuthService,\n    private http: HttpClient\n  ) {}\n  /**\n   * Submits the contact form data to the `ContactService`.\n   */\n  submitForm() {\n    /**\n     * The form data to be sent to the backend server.\n     */\n    const formData = {\n      /**\n       * The name of the customer.\n       */\n      customername: this.customername,\n      /**\n       * The email of the customer.\n       */\n      customeremail: this.customeremail,\n      /**\n       * The feedback of the customer.\n       */\n      customerfeedback: this.customerfeedback\n    };\n    /**\n     * Sends the contact form data to the backend server.\n     */\n    this.http.post('http://localhost:3000/send-email', formData)\n      .subscribe(response => {\n        console.log(response);\n      }, error => {\n        console.error(error);\n      });\n  }\n}\n\n    \n\n    \n        \n    Contact Us\n    \n        \n            \n        \n        \n            \n                Phone: (979) 704-5124\n            \n            \n\n                \n                    \n                        Enter your first and last name\n                        \n                    \n                    \n                        Enter your email\n                        \n                    \n                    \n                        What questions do you have for us?\n                        \n                    \n                    Submit\n                                \n\n                \n                    What questions do you have for us? \n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./contact-us.component.scss\n                \n                .contact-info-container {\n    padding: 6rem 3rem;\n    display: flex;\n    flex-direction: column;\n}\n\n.contact-header {\n    background-color: white;\n}\n\n.contact-us-info {\n    display: flex;\n    justify-content: space-between;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Contact Us                                                                    Phone: (979) 704-5124                                                                                    Enter your first and last name                                                                                        Enter your email                                                                                        What questions do you have for us?                                                                Submit                                                                    What questions do you have for us?                                                                                                                             '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'app-authentication-button'},{'name': 'CartModalComponent', 'selector': 'app-cart-modal'},{'name': 'CashierViewComponent', 'selector': 'app-cashier-view'},{'name': 'CheckoutPopupComponent', 'selector': 'app-checkout-popup'},{'name': 'ConfirmationPopupComponent', 'selector': 'app-confirmation-popup'},{'name': 'ContactUsComponent', 'selector': 'app-contact-us'},{'name': 'CustomerViewComponent', 'selector': 'app-customer-view'},{'name': 'EditItemPopupComponent', 'selector': 'app-edit-item-popup'},{'name': 'EmployeeCreationsMenuComponent', 'selector': 'app-employee-creations-menu'},{'name': 'GetRoleComponent', 'selector': 'app-get-role'},{'name': 'LearnMoreComponent', 'selector': 'app-learn-more'},{'name': 'LoginButtonComponent', 'selector': 'app-login-button'},{'name': 'LogoutButtonComponent', 'selector': 'app-logout-button'},{'name': 'ManagerPopupComponent', 'selector': 'app-manager-popup'},{'name': 'ManagerViewComponent', 'selector': 'app-manager-view'},{'name': 'MenuItemComponent', 'selector': 'app-menu-item'},{'name': 'MenuViewComponent', 'selector': 'app-menu-view'},{'name': 'MilkTeaMenuComponent', 'selector': 'app-milk-tea-menu'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuickAddPopupComponent', 'selector': 'app-quick-add-popup'},{'name': 'RestockReportPopupComponent', 'selector': 'app-restock-report-popup'},{'name': 'SeasonalItemPopupComponent', 'selector': 'app-seasonal-item-popup'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'SignatureMilkTeaMenuComponent', 'selector': 'app-signature-milk-tea-menu'},{'name': 'SignupButtonComponent', 'selector': 'app-signup-button'},{'name': 'SlushMenuComponent', 'selector': 'app-slush-menu'},{'name': 'SmoothieMenuComponent', 'selector': 'app-smoothie-menu'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContactUsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CustomerMenuItem.html":{"url":"interfaces/CustomerMenuItem.html","title":"interface - CustomerMenuItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CustomerMenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/menu-view/menu-item.model.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the model for the customer menu item.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            ingredients\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The id of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ingredients\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ingredients:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ingredients of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The price of the menu item.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface MenuItem {\n    /**\n     * The id of the menu item.\n     */\n    menu_item_id: number;\n    /**\n     * The name of the menu item.\n     */\n    menu_item_name: string;\n    /**\n     * The type of the menu item.\n     */\n    menu_item_type: string;\n    /**\n     * The price of the menu item.\n     */\n    menu_item_price: string;\n    /**\n     * The ingredients of the menu item.\n     */\n    ingredients: string[];\n    /**\n     * The image of the menu item.\n     */\n    image: string;\n    /**\n     * The toppings of the menu item.\n     */\n    description: string;\n    /**\n     * The toppings of the menu item.\n     */\n    added_toppings: string[];\n}\n/**\n * This is the model for the customer menu item.\n */\nexport interface CustomerMenuItem {\n    /**\n     * The id of the menu item.\n     */\n    id: number;\n    /**\n     * The name of the menu item.\n     */\n    name: string;\n    /**\n     * The type of the menu item.\n     */\n    image: string;\n    /**\n     * The price of the menu item.\n     */\n    price: number;\n    /**\n     * The ingredients of the menu item.\n     */\n    ingredients: string;\n}\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CustomerViewComponent.html":{"url":"components/CustomerViewComponent.html","title":"component - CustomerViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CustomerViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/customer-view/customer-view.component.ts\n\n\n\n    \n        Description\n    \n    \n        CustomerViewComponent is responsible for displaying weather-related information and managing the magnifier feature for customers.\nIt includes functionality to display different weather conditions and interact with the magnifier service.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-customer-view\n            \n\n\n\n            \n                styleUrls\n                ./customer-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./customer-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cloudyImageUrl\n                            \n                            \n                                magnifierEnabled\n                            \n                            \n                                    Private\n                                magnifierSub\n                            \n                            \n                                rainyImageUrl\n                            \n                            \n                                sunnyImageUrl\n                            \n                            \n                                weatherData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                convertToFahrenheit\n                            \n                            \n                                getWeatherIcon\n                            \n                            \n                                getWeatherImage\n                            \n                            \n                                handleWeatherLoaded\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(magnifierService: MagnifierService)\n                    \n                \n                        \n                            \n                                Defined in src/app/customer-view/customer-view.component.ts:40\n                            \n                        \n\n                \n                    \n                            Constructor for CustomerViewComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        magnifierService\n                                                  \n                                                        \n                                                                        MagnifierService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service to control the magnifier feature.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        convertToFahrenheit\n                        \n                    \n                \n            \n            \n                \nconvertToFahrenheit(kelvinTemp: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/customer-view/customer-view.component.ts:92\n                        \n                    \n\n\n            \n                \n                        Converts a temperature from Kelvin to Fahrenheit.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                kelvinTemp\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The temperature in Kelvin.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The temperature converted to Fahrenheit.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getWeatherIcon\n                        \n                    \n                \n            \n            \n                \ngetWeatherIcon(iconCode: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/customer-view/customer-view.component.ts:102\n                        \n                    \n\n\n            \n                \n                        Gets the full URL for a weather icon based on its code.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                iconCode\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The icon code from the weather data.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The full URL to the weather icon.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getWeatherImage\n                        \n                    \n                \n            \n            \n                \ngetWeatherImage(humidity: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/customer-view/customer-view.component.ts:67\n                        \n                    \n\n\n            \n                \n                        Determines the appropriate weather image URL based on humidity.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                humidity\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The humidity percentage to determine the weather image.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The URL of the corresponding weather image.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleWeatherLoaded\n                        \n                    \n                \n            \n            \n                \nhandleWeatherLoaded(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/customer-view/customer-view.component.ts:82\n                        \n                    \n\n\n            \n                \n                        Handles the loaded weather data and assigns it to the weatherData property.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The weather data object received.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/customer-view/customer-view.component.ts:52\n                        \n                    \n\n\n            \n                \n                        OnInit lifecycle hook to subscribe to the magnifier service state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cloudyImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://i.ibb.co/0FchgTR/360-F-267839295-j-Vbzp-Vskp-Rpn-Paq3x-LFjj-X9g-Yj-NRocx-N.jpg'\n                    \n                \n                    \n                        \n                                Defined in src/app/customer-view/customer-view.component.ts:36\n                        \n                    \n\n            \n                \n                    The URL to the image to be displayed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        magnifierEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/customer-view/customer-view.component.ts:24\n                        \n                    \n\n            \n                \n                    The current weather condition.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        magnifierSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/customer-view/customer-view.component.ts:28\n                        \n                    \n\n            \n                \n                    The subscription to the magnifier service.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rainyImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://i.ibb.co/DCQH1cN/download.jpg'\n                    \n                \n                    \n                        \n                                Defined in src/app/customer-view/customer-view.component.ts:32\n                        \n                    \n\n            \n                \n                     The URL to the image to be displayed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sunnyImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://i.ibb.co/c8QSfJZ/360-F-114186982-28d-EWbci-TYahk-AI0zne-K0-OEvd-HDAAaw2.jpg'\n                    \n                \n                    \n                        \n                                Defined in src/app/customer-view/customer-view.component.ts:40\n                        \n                    \n\n            \n                \n                    The URL to the image to be displayed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weatherData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/customer-view/customer-view.component.ts:20\n                        \n                    \n\n            \n                \n                    The weather data to be displayed.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { MagnifierService } from '../services/Magnifier.service';\n\n/**\n * `CustomerViewComponent` is responsible for displaying weather-related information and managing the magnifier feature for customers.\n * It includes functionality to display different weather conditions and interact with the magnifier service.\n *\n * @Component Decorator that marks the class as an Angular component, specifying the selector, template, and styles.\n */\n@Component({\n  selector: 'app-customer-view',\n  templateUrl: './customer-view.component.html',\n  styleUrls: ['./customer-view.component.scss']\n})\nexport class CustomerViewComponent implements OnInit {\n  /**\n   * The weather data to be displayed.\n   */\n  weatherData: any;\n  /**\n   * The current weather condition.\n   */\n  magnifierEnabled = false;\n  /**\n   * The subscription to the magnifier service.\n   */\n  private magnifierSub: Subscription | undefined;\n  /**\n   *  The URL to the image to be displayed.\n   */\n  rainyImageUrl: string = 'https://i.ibb.co/DCQH1cN/download.jpg'; // URL to the rainy image\n  /**\n   * The URL to the image to be displayed.\n   */\n  cloudyImageUrl: string = 'https://i.ibb.co/0FchgTR/360-F-267839295-j-Vbzp-Vskp-Rpn-Paq3x-LFjj-X9g-Yj-NRocx-N.jpg'; // URL to the cloudy image\n  /**\n   * The URL to the image to be displayed.\n   */\n  sunnyImageUrl: string = 'https://i.ibb.co/c8QSfJZ/360-F-114186982-28d-EWbci-TYahk-AI0zne-K0-OEvd-HDAAaw2.jpg'; // URL to the sunny image\n\n  /**\n   * Constructor for `CustomerViewComponent`.\n   * \n   * @param magnifierService The service to control the magnifier feature.\n   */\n  constructor(private magnifierService: MagnifierService) {}\n\n  /**\n   * OnInit lifecycle hook to subscribe to the magnifier service state.\n   */\n  ngOnInit(): void {\n    this.magnifierSub = this.magnifierService.getMagnifierState().subscribe(\n      (state: boolean) => {\n        this.magnifierEnabled = state.valueOf();\n        console.log(this.magnifierEnabled); // Log the state inside the subscription\n      }\n    );\n  }\n\n  /**\n   * Determines the appropriate weather image URL based on humidity.\n   *\n   * @param humidity The humidity percentage to determine the weather image.\n   * @returns The URL of the corresponding weather image.\n   */\n  getWeatherImage(humidity: number): string {\n    if (humidity >= 60) {\n      return this.rainyImageUrl;\n    } else if (humidity >= 30) {\n      return this.cloudyImageUrl;\n    } else {\n      return this.sunnyImageUrl;\n    }\n  }\n\n  /**\n   * Handles the loaded weather data and assigns it to the weatherData property.\n   *\n   * @param data The weather data object received.\n   */\n  handleWeatherLoaded(data: any): void {\n    this.weatherData = data;  // Assign the data to the property\n  }\n\n  /**\n   * Converts a temperature from Kelvin to Fahrenheit.\n   *\n   * @param kelvinTemp The temperature in Kelvin.\n   * @returns The temperature converted to Fahrenheit.\n   */\n  convertToFahrenheit(kelvinTemp: number): string {\n    return ((kelvinTemp - 273.15) * 9 / 5 + 32).toFixed(2);\n  }\n  \n  /**\n   * Gets the full URL for a weather icon based on its code.\n   *\n   * @param iconCode The icon code from the weather data.\n   * @returns The full URL to the weather icon.\n   */\n  getWeatherIcon(iconCode: string): string {\n    return `http://openweathermap.org/img/wn/${iconCode}.png`; // URL for weather icons\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    \n      \n        \n        \n          ​Bubble Tea,\n            Milk Teas,\n            and Banh Mi\n            Checkout our amazing recipes and learn about the people behind the drinks\n            \n              Learn More\n              Order Now\n              Contact Us\n            \n        \n      \n    \n    \n      \n        \n        \n          Milk Tea's\n          Indulge in the creamy bliss of our milk teas, where traditional flavors meet modern sophistication. Each sip promises a luxurious blend of rich, aromatic tea leaves and velvety milk, creating a perfect symphony for your taste buds.\n        \n        \n      \n\n      \n        \n        \n          Smoothies\n          Energize your day with our vibrant smoothie selection, bursting with fresh, hand-picked fruits and natural ingredients. These refreshing delights offer a healthful escape, blending sweet, tangy, and exotic flavors into a deliciously invigorating experience\n        \n      \n      \n        \n          Boba Tea's\n          Experience the playful joy of our boba teas, a delightful fusion of classic tea infused with chewy, sweet tapioca pearls. A true adventure in every glass, our boba teas are an irresistible treat that tantalize the senses and bring a smile with every sip.\n        \n        \n      \n    \n\n    \n      \n      \n        \n          \n        \n        \n        \n          \n            Location: College Station\n            \n              Temperature: {{ convertToFahrenheit(weatherData.main.temp) }}°F\n              \n            \n            Humidity: {{ weatherData.main.humidity }}%\n          \n        \n      \n    \n\n\n\n    \n\n    \n                \n                    ./customer-view.component.scss\n                \n                .center{\n    padding-top: 90px;\n    width: 100%;\n    text-align: center;\n    padding-bottom: 60px;\n}\n\n.weather-container {\n    display: flex;\n    flex-direction: left;\n    height: 200px;\n}\n\n.weather-data-container {\n    z-index: 1;\n    display: flex;\n    /* additional styling */\n  }\n\n  .background-image{\n    z-index: 0;\n    position: absolute;\n    width: 100%;\n    height: 200px;\n    overflow: hidden;\n  }\n\n  .Bi{\n    width: 100%;\n  }\n\n// .weather-data-container {\n//     width: fit-content;\n//     padding: 4.5rem 4.5rem;\n//     background-size: cover;\n//     background-position: center center;\n//     background-repeat: no-repeat;\n//     flex-direction: column;\n//     justify-content: center;\n//     margin-left: 5rem;\n//     margin-top: 2rem;\n// }\n\n.weather-info-box {\n    /* additional styling */\n  }\n//https://i.ibb.co/DCQH1cN/download.jpg rainy\n//https://i.ibb.co/0FchgTR/360-F-267839295-j-Vbzp-Vskp-Rpn-Paq3x-LFjj-X9g-Yj-NRocx-N.jpg cloudy\n//https://i.ibb.co/c8QSfJZ/360-F-114186982-28d-EWbci-TYahk-AI0zne-K0-OEvd-HDAAaw2.jpg sunny\n.weather-data {\n    // background-color: #242323;\n    // padding-left: 2rem;\n    display: flex;\n    flex-direction: column;\n    padding: 0px;\n    margin:0px;\n}\n\n.location {\nposition: relative;\nleft: -18px;\nmargin-bottom: 0px;\nmargin-top: 20px;\n}\n  \n  .temperature {\n    display: flex;\n    align-items: center;\n    /* additional styling */\n  }\n  \n  .temperature img {\n    width: 50px;\n    margin-right: 10px;\n  }\n  \n  .humidity {\n    position: relative;\n    left: -50px;\n  }\n\n\n\n\n.google-map-placeholder{\n    width:100%;\n    height: 250px;\n    margin-bottom: 10px;\n}\n\n.weather-info-box {\n    margin-left: 1rem;\n}\n.menuimage{\n    width: 100%;\n    height: auto;\n}\n.topholder{\n    display: flex;\n    align-items: center;\n    margin-bottom: 20px;\n    height: fit-content;\n    width: 100%;\n    height: 250px;\n}\n\n.intoholder{\n    display: flex;\n    width:100%;\n    height: 450px;\n    background-color: #242323;\n    padding: 20px;\n}\n\n.inroimage{\n    width: 50%;\n    margin-left: 6%;\n}\n\n.footer{\n    position: relative;\n}\n\n.Maintext{\n    color: black;\n    font-size: 1.5rem;\n    font-weight: bold;\n    margin-bottom: 10px;\n}\n\n.fleximagehold{\n    margin-top: 20px;\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 10px;\n}\n\n.innertext{\n    padding: 5%;\n    text-align: justify;\n}\n\n.innertext >h3{\n    text-decoration: underline;\n    text-align: center;\n}\n\n.imagecard{\n    padding: 0px 10px;\n}\n\n.texthold{\n    padding: 20px;\n    color: white;\n    text-align: center;\n    font-size: large;\n    width: 40%;\n}\n\n.textleft{\n    width: 70%;\n    margin-left: 15%;\n    text-align: center;\n}\n\n.buttonhold{\n    width: 60%;\n    margin-left: 20%;\n    display: flex;\n    justify-content: space-between;\n    margin-top: 40px;\n}\n\n.btn-light {\n    margin-right: 20px;\n}\n\n\n\n.aboutme{\n    display: flex;\n    width:100%;\n    margin-left: 7.5px;\n    padding: 0px;\n    margin-top: 30px;\n    margin-bottom: 30px;\n}\n\n.aboutmetext{\n    padding: 20px;\n    color: black;\n    text-align: justify;\n    font-size: large;\n    width: 60%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                  ​Bubble Tea,            Milk Teas,            and Banh Mi            Checkout our amazing recipes and learn about the people behind the drinks                          Learn More              Order Now              Contact Us                                                                  Milk Tea\\'s          Indulge in the creamy bliss of our milk teas, where traditional flavors meet modern sophistication. Each sip promises a luxurious blend of rich, aromatic tea leaves and velvety milk, creating a perfect symphony for your taste buds.                                                      Smoothies          Energize your day with our vibrant smoothie selection, bursting with fresh, hand-picked fruits and natural ingredients. These refreshing delights offer a healthful escape, blending sweet, tangy, and exotic flavors into a deliciously invigorating experience                                      Boba Tea\\'s          Experience the playful joy of our boba teas, a delightful fusion of classic tea infused with chewy, sweet tapioca pearls. A true adventure in every glass, our boba teas are an irresistible treat that tantalize the senses and bring a smile with every sip.                                                                                                          Location: College Station                          Temperature: {{ convertToFahrenheit(weatherData.main.temp) }}°F                                      Humidity: {{ weatherData.main.humidity }}%                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'app-authentication-button'},{'name': 'CartModalComponent', 'selector': 'app-cart-modal'},{'name': 'CashierViewComponent', 'selector': 'app-cashier-view'},{'name': 'CheckoutPopupComponent', 'selector': 'app-checkout-popup'},{'name': 'ConfirmationPopupComponent', 'selector': 'app-confirmation-popup'},{'name': 'ContactUsComponent', 'selector': 'app-contact-us'},{'name': 'CustomerViewComponent', 'selector': 'app-customer-view'},{'name': 'EditItemPopupComponent', 'selector': 'app-edit-item-popup'},{'name': 'EmployeeCreationsMenuComponent', 'selector': 'app-employee-creations-menu'},{'name': 'GetRoleComponent', 'selector': 'app-get-role'},{'name': 'LearnMoreComponent', 'selector': 'app-learn-more'},{'name': 'LoginButtonComponent', 'selector': 'app-login-button'},{'name': 'LogoutButtonComponent', 'selector': 'app-logout-button'},{'name': 'ManagerPopupComponent', 'selector': 'app-manager-popup'},{'name': 'ManagerViewComponent', 'selector': 'app-manager-view'},{'name': 'MenuItemComponent', 'selector': 'app-menu-item'},{'name': 'MenuViewComponent', 'selector': 'app-menu-view'},{'name': 'MilkTeaMenuComponent', 'selector': 'app-milk-tea-menu'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuickAddPopupComponent', 'selector': 'app-quick-add-popup'},{'name': 'RestockReportPopupComponent', 'selector': 'app-restock-report-popup'},{'name': 'SeasonalItemPopupComponent', 'selector': 'app-seasonal-item-popup'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'SignatureMilkTeaMenuComponent', 'selector': 'app-signature-milk-tea-menu'},{'name': 'SignupButtonComponent', 'selector': 'app-signup-button'},{'name': 'SlushMenuComponent', 'selector': 'app-slush-menu'},{'name': 'SmoothieMenuComponent', 'selector': 'app-smoothie-menu'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CustomerViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Customers.html":{"url":"classes/Customers.html","title":"class - Customers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Customers\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/customers.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the interface for customers with customer_id, first_name, last_name, phone_number\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                customer_id\n                            \n                            \n                                    Optional\n                                first_name\n                            \n                            \n                                    Optional\n                                last_name\n                            \n                            \n                                    Optional\n                                phone_number\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        customer_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/customers.ts:8\n                        \n                    \n\n            \n                \n                    The id of the customer.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        first_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/customers.ts:12\n                        \n                    \n\n            \n                \n                    The first name of the customer.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        last_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/customers.ts:16\n                        \n                    \n\n            \n                \n                    The last name of the customer.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        phone_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/customers.ts:20\n                        \n                    \n\n            \n                \n                    The phone number of the customer.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Customers {\n    /**\n     * The id of the customer.\n     */\n    customer_id?: number;\n    /**\n     * The first name of the customer.\n     */\n    first_name?: string;\n    /**\n     * The last name of the customer.\n     */\n    last_name?: string;\n    /**\n     * The phone number of the customer.\n     */\n    phone_number?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomersService.html":{"url":"injectables/CustomersService.html","title":"injectable - CustomersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/customers.service.ts\n        \n\n\n            \n                Description\n            \n            \n                CustomersService handles HTTP requests related to customer data.\nIt communicates with a specified API endpoint to perform CRUD operations.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCustomers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/customers.service.ts:15\n                            \n                        \n\n                \n                    \n                            Constructor for CustomersService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The HttpClient module to make HTTP requests.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCustomers\n                        \n                    \n                \n            \n            \n                \ngetCustomers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/customers.service.ts:26\n                        \n                    \n\n\n            \n                \n                        Retrieves a list of customers from the API.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable of customer data.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.apiUrl}/customers`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/customers.service.ts:15\n                        \n                    \n\n            \n                \n                    The base URL for the customer API.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n/**\n * `CustomersService` handles HTTP requests related to customer data.\n * It communicates with a specified API endpoint to perform CRUD operations.\n */\n@Injectable({ providedIn: 'root' })\nexport class CustomersService {\n  /**\n   * The base URL for the customer API.\n   */\n  private baseUrl = `${environment.apiUrl}/customers`;\n  /**\n   * Constructor for `CustomersService`.\n   * @param http The HttpClient module to make HTTP requests.\n   */\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Retrieves a list of customers from the API.\n   * @returns An Observable of customer data.\n   */\n  getCustomers(): Observable {\n    return this.http.get(this.baseUrl);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/get-role/get-role.service.ts\n        \n\n\n            \n                Description\n            \n            \n                DataService provides a service for fetching data from the backend.\nIt enables the selection of item types, ingredients, and creation of new menu items.\nDefine an ngOnInit() method to handle any additional initialization tasks.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUserIsCashier\n                            \n                            \n                                currentUserIsManager\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                checkIfUserIsCashier\n                            \n                            \n                                    Public\n                                checkIfUserIsManager\n                            \n                            \n                                getData\n                            \n                            \n                                isCashier\n                            \n                            \n                                isManager\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/get-role/get-role.service.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor for DataService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HttpClient for making HTTP requests.\n\n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                AuthService for authentication-related functionalities.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        checkIfUserIsCashier\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkIfUserIsCashier(user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/get-role/get-role.service.ts:80\n                        \n                    \n\n\n            \n                \n                         Method to fetch data from the backend.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        checkIfUserIsManager\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkIfUserIsManager(user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/get-role/get-role.service.ts:100\n                        \n                    \n\n\n            \n                \n                         Method to fetch data from the backend.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/get-role/get-role.service.ts:60\n                        \n                    \n\n\n            \n                \n                        Method to fetch data from the backend.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable of type Employees[].\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isCashier\n                        \n                    \n                \n            \n            \n                \nisCashier()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/get-role/get-role.service.ts:135\n                        \n                    \n\n\n            \n                \n                        Method to fetch data from the backend.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable of type Employees[].\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isManager\n                        \n                    \n                \n            \n            \n                \nisManager()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/get-role/get-role.service.ts:67\n                        \n                    \n\n\n            \n                \n                        Method to fetch data from the backend.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable of type Employees[].\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/get-role/get-role.service.ts:41\n                        \n                    \n\n\n            \n                \n                        OnInit lifecycle hook to check if the current user is a manager.\nIf the current user is not a manager, check if they are a cashier.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUserIsCashier\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/get-role/get-role.service.ts:26\n                        \n                    \n\n            \n                \n                    Boolean to track if the current user is a cashier.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUserIsManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/get-role/get-role.service.ts:22\n                        \n                    \n\n            \n                \n                    Boolean to track if the current user is a manager.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable, OnInit } from '@angular/core';\nimport { AuthService } from '@auth0/auth0-angular';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Employees } from 'src/app/models/employees';\n/**\n * `DataService` provides a service for fetching data from the backend.\n * It enables the selection of item types, ingredients, and creation of new menu items.\n * @Injectable Decorator that marks the class as available to be provided and injected as a dependency.\n * @root Specifies that the service should be provided in the root injector.\n * @OnInit Lifecycle hook that is called after Angular has initialized all data-bound properties of a directive.\n * Define an ngOnInit() method to handle any additional initialization tasks.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService implements OnInit {\n  /**\n   * Boolean to track if the current user is a manager.\n   */\n  currentUserIsManager: boolean = false;\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  currentUserIsCashier: boolean = false;\n    /**\n   * Constructor for `DataService`.\n   * \n   * @param http HttpClient for making HTTP requests.\n   * @param auth AuthService for authentication-related functionalities.\n   */\n  constructor(\n    private http: HttpClient,\n    private auth: AuthService\n    ) {}\n    /**\n     * OnInit lifecycle hook to check if the current user is a manager.\n     * If the current user is not a manager, check if they are a cashier.\n     */\n  ngOnInit(): void {\n    this.auth.user$.subscribe(\n      user => {\n\n          console.log(user);\n\n          if (user) {\n            this.checkIfUserIsManager(user);\n            if (!this.currentUserIsManager) {\n              this.checkIfUserIsCashier(user);\n            }\n        }\n      }\n    )\n  }\n  /**\n   * Method to fetch data from the backend.\n   * @returns Observable of type Employees[].\n   */\n  getData(): Observable {\n    return this.http.get('http://localhost:3000/api/employees');\n  }\n  /**\n   * Method to fetch data from the backend.\n   * @returns Observable of type Employees[].\n   */\n  isManager(): Observable {\n    return this.getData().pipe(\n      map(employees => employees.filter(employee => \n        employee.position === 'Manager' || \n        employee.position === 'CFO' || \n        employee.position === 'CEO'\n        ))\n    );\n  }\n  /**\n   *  Method to fetch data from the backend.\n   * @param user \n   */\n  public checkIfUserIsCashier(user: any): void {\n    this.getData().subscribe(employees => {\n\n      console.log(\"checking for cashier status\");\n      console.log(user.first_name);\n      console.log(user.last_name);\n\n      // Find the employee in the list that matches the user's first and last name\n      const matchingEmployee = employees.find(employee =>\n        employee.first_name === user.given_name && employee.last_name === user.family_name);\n  \n      // Check if the matching employee's position is 'Cashier'\n      this.currentUserIsCashier = matchingEmployee ? (\n        matchingEmployee.position === 'Cashier') : false;\n    });\n  }\n  /**\n   *  Method to fetch data from the backend.\n   * @param user \n   */\n  public checkIfUserIsManager(user: any): void {\n    this.getData().subscribe(employees => {\n      // Logging for debugging\n      console.log('User:', user);\n      console.log('Employees:', employees);\n  \n      // Find the employee in the list that matches the user's first and last name\n      const matchingEmployee = employees.find(employee =>\n        employee.first_name === user.given_name && employee.last_name === user.family_name);\n  \n      // Logging the matching employee for debugging\n      console.log('Matching Employee:', matchingEmployee);\n  \n      // Check if the matching employee's position is 'Manager', 'CEO', or 'CFO'\n      this.currentUserIsManager = matchingEmployee ? (\n        matchingEmployee.position === 'CEO' || \n        matchingEmployee.position === 'CFO' ||\n        matchingEmployee.position === 'Manager') : false;\n  \n      // Logging the final result for debugging\n      console.log('Is User a Manager/CEO/CFO:', this.currentUserIsManager);\n      this.currentUserIsCashier = this.currentUserIsManager;\n    });\n  }\n  \n  \n\n  // isManager(user: Employees): boolean {\n  //   return user.position === 'Manager' || user.position === 'CFO' || user.position === 'CEO';\n  // }\n\n  /**\n   * Method to fetch data from the backend.\n   * @returns Observable of type Employees[].\n   */\n  isCashier(): Observable {\n    return this.getData().pipe(\n      map(employees => employees.filter(employee => \n        employee.position === 'Cashier'\n        ))\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataType.html":{"url":"interfaces/DataType.html","title":"interface - DataType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DataType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/get-role/data-type.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the data type for the data that is returned from the server.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            property1\n                                        \n                                \n                                \n                                        \n                                            property2\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        property1\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        property1:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The first property of the data type.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        property2\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        property2:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The second property of the data type.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface DataType {\n    /**\n     * The first property of the data type.\n     */\n    property1: string;\n    /**\n     * The second property of the data type.\n     */\n    property2: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditItemPopupComponent.html":{"url":"components/EditItemPopupComponent.html","title":"component - EditItemPopupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditItemPopupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/manager-view/edit-item-popup/edit-item-popup.component.ts\n\n\n\n    \n        Description\n    \n    \n        EditItemPopupComponent provides a popup modal interface for editing items in the menu, inventory, or ingredients.\nThe component supports different edit types and handles the saving and closing of the edit interface.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-item-popup\n            \n\n\n\n            \n                styleUrls\n                ./edit-item-popup.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-item-popup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editedIngredientName\n                            \n                            \n                                editedIngredientQuantity\n                            \n                            \n                                editedInventoryItemName\n                            \n                            \n                                editedInventoryItemQuantity\n                            \n                            \n                                editedMenuItemName\n                            \n                            \n                                editedMenuItemPrice\n                            \n                            \n                                editedMenuItemType\n                            \n                            \n                                ingredientsInput\n                            \n                            \n                                thing\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closePopup\n                            \n                            \n                                    Private\n                                initializeEditFields\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                saveEdit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                editType\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(menuService: MenuService, ingredientsService: IngredientsService, inventoryService: InventoryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/manager-view/edit-item-popup/edit-item-popup.component.ts:73\n                            \n                        \n\n                \n                    \n                            Constructor for EditItemPopupComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        menuService\n                                                  \n                                                        \n                                                                        MenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service for handling menu item operations.\n\n                                                        \n                                                \n                                                \n                                                        ingredientsService\n                                                  \n                                                        \n                                                                        IngredientsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service for handling ingredient operations.\n\n                                                        \n                                                \n                                                \n                                                        inventoryService\n                                                  \n                                                        \n                                                                        InventoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service for handling inventory item operations.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        editType\n                    \n                \n                \n                    \n                        Type :     \"menu\" | \"inventory\" | \"ingredients\" | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/manager-view/edit-item-popup/edit-item-popup.component.ts:27\n                            \n                        \n                \n                    \n                        Specifies the type of edit being performed ('menu', 'inventory', 'ingredients').\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/manager-view/edit-item-popup/edit-item-popup.component.ts:23\n                            \n                        \n                \n                    \n                        The item to be edited, passed from the parent component.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/manager-view/edit-item-popup/edit-item-popup.component.ts:35\n                            \n                        \n                \n                    \n                        Event emitter to notify the parent component to close the edit popup.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        save\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/manager-view/edit-item-popup/edit-item-popup.component.ts:31\n                            \n                        \n                \n                    \n                        Event emitter to notify the parent component to save the edited item.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closePopup\n                        \n                    \n                \n            \n            \n                \nclosePopup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/manager-view/edit-item-popup/edit-item-popup.component.ts:148\n                        \n                    \n\n\n            \n                \n                        Emits an event to close the edit popup.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initializeEditFields\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeEditFields()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/manager-view/edit-item-popup/edit-item-popup.component.ts:102\n                        \n                    \n\n\n            \n                \n                        Initializes the edit fields based on the editType and the item provided.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/manager-view/edit-item-popup/edit-item-popup.component.ts:94\n                        \n                    \n\n\n            \n                \n                        OnChanges lifecycle hook to respond to input changes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Object containing the changes made to input properties.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/manager-view/edit-item-popup/edit-item-popup.component.ts:85\n                        \n                    \n\n\n            \n                \n                        OnInit lifecycle hook to initialize the component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveEdit\n                        \n                    \n                \n            \n            \n                \nsaveEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/manager-view/edit-item-popup/edit-item-popup.component.ts:130\n                        \n                    \n\n\n            \n                \n                        Saves the edits made to the item and emits the updated item to the parent component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        editedIngredientName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/manager-view/edit-item-popup/edit-item-popup.component.ts:65\n                        \n                    \n\n            \n                \n                    Event emitter to notify the parent component to close the edit popup.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editedIngredientQuantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/manager-view/edit-item-popup/edit-item-popup.component.ts:69\n                        \n                    \n\n            \n                \n                    Event emitter to notify the parent component to close the edit popup.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editedInventoryItemName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/manager-view/edit-item-popup/edit-item-popup.component.ts:56\n                        \n                    \n\n            \n                \n                    Event emitter to notify the parent component to close the edit popup.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editedInventoryItemQuantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/manager-view/edit-item-popup/edit-item-popup.component.ts:60\n                        \n                    \n\n            \n                \n                    Event emitter to notify the parent component to close the edit popup.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editedMenuItemName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/manager-view/edit-item-popup/edit-item-popup.component.ts:39\n                        \n                    \n\n            \n                \n                    Event emitter to notify the parent component to close the edit popup.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editedMenuItemPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/manager-view/edit-item-popup/edit-item-popup.component.ts:43\n                        \n                    \n\n            \n                \n                    Event emitter to notify the parent component to close the edit popup.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editedMenuItemType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/manager-view/edit-item-popup/edit-item-popup.component.ts:47\n                        \n                    \n\n            \n                \n                    Event emitter to notify the parent component to close the edit popup.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredientsInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/manager-view/edit-item-popup/edit-item-popup.component.ts:51\n                        \n                    \n\n            \n                \n                    Event emitter to notify the parent component to close the edit popup.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        thing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/manager-view/edit-item-popup/edit-item-popup.component.ts:73\n                        \n                    \n\n            \n                \n                    Event emitter to notify the parent component to close the edit popup.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter, SimpleChanges, OnInit, OnChanges } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\nimport { MenuService } from 'src/app/services/menu.service';\nimport { IngredientsService } from 'src/app/services/ingredients.service';\nimport { InventoryService } from 'src/app/services/inventory.service';\n/**\n * `EditItemPopupComponent` provides a popup modal interface for editing items in the menu, inventory, or ingredients.\n * The component supports different edit types and handles the saving and closing of the edit interface.\n *\n * @Component Decorator that marks the class as an Angular component, specifying the selector, template, and styles.\n */\n@Component({\n  selector: 'app-edit-item-popup',\n  templateUrl: './edit-item-popup.component.html',\n  styleUrls: ['./edit-item-popup.component.scss']\n})\nexport class EditItemPopupComponent implements OnInit, OnChanges {\n  /**\n   * The item to be edited, passed from the parent component.\n   */\n  @Input() item: any;\n    /**\n   * Specifies the type of edit being performed ('menu', 'inventory', 'ingredients').\n   */\n  @Input() editType: 'menu' | 'inventory' | 'ingredients' | null = null;\n    /**\n   * Event emitter to notify the parent component to save the edited item.\n   */\n  @Output() save = new EventEmitter();\n    /**\n   * Event emitter to notify the parent component to close the edit popup.\n   */\n  @Output() close = new EventEmitter();\n/**\n * Event emitter to notify the parent component to close the edit popup.\n */\n  editedMenuItemName: string = '';\n  /**\n   * Event emitter to notify the parent component to close the edit popup.\n   */\n  editedMenuItemPrice: string = '';\n  /**\n   * Event emitter to notify the parent component to close the edit popup.\n   */\n  editedMenuItemType: string = '';\n  /**\n   * Event emitter to notify the parent component to close the edit popup.\n   */\n  ingredientsInput: string = '';\n  /**\n   * Event emitter to notify the parent component to close the edit popup.\n   */\n\n  editedInventoryItemName: string = '';\n  /**\n   * Event emitter to notify the parent component to close the edit popup.\n   */\n  editedInventoryItemQuantity: string = '';\n  /**\n   * Event emitter to notify the parent component to close the edit popup.\n   */\n\n  editedIngredientName: string = '';\n  /**\n   * Event emitter to notify the parent component to close the edit popup.\n   */\n  editedIngredientQuantity: string = '';\n  /**\n   * Event emitter to notify the parent component to close the edit popup.\n   */\n  thing: any;\n  /**\n   * Constructor for `EditItemPopupComponent`.\n   * \n   * @param menuService The service for handling menu item operations.\n   * @param ingredientsService The service for handling ingredient operations.\n   * @param inventoryService The service for handling inventory item operations.\n   */\n  constructor(private menuService: MenuService, private ingredientsService: IngredientsService, private inventoryService: InventoryService) {}\n  /**\n   * OnInit lifecycle hook to initialize the component.\n   */\n  ngOnInit(): void {\n    this.initializeEditFields();\n  }\n\n    /**\n   * OnChanges lifecycle hook to respond to input changes.\n   * \n   * @param changes Object containing the changes made to input properties.\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['thing']) {\n      this.initializeEditFields();\n    }\n  }\n  /**\n   * Initializes the edit fields based on the `editType` and the item provided.\n   */\n  private initializeEditFields(): void {\n    if (this.editType === 'menu') {\n      this.menuService.getMenuItemById(this.item.menu_item_id).subscribe((data: any) => {\n        this.thing = data;\n        this.editedMenuItemName = this.thing.menu_item_name;\n        this.editedMenuItemPrice = this.thing.menu_item_price;\n        this.editedMenuItemType = this.thing.menu_item_type;\n        this.ingredientsInput = Array.isArray(this.thing.ingredients)\n          ? this.thing.ingredients.join(',')\n          : this.thing.ingredients;\n      });\n    } else if (this.editType === 'inventory') {\n      this.inventoryService.getItemById(this.item.item_id).subscribe((data: any) => {\n        this.thing = data;\n        this.editedInventoryItemName = this.thing.item_name;\n        this.editedInventoryItemQuantity = this.thing.item_quantity;\n      });\n    } else if (this.editType === 'ingredients') {\n      this.ingredientsService.getIngredientById(this.item.ingredient_id).subscribe((data: any) => {\n        this.thing = data;\n        this.editedIngredientName = this.thing.ingredient_name;\n        this.editedIngredientQuantity = this.thing.ingredient_quantity;\n      });\n    }\n  }\n  /**\n   * Saves the edits made to the item and emits the updated item to the parent component.\n   */\n  saveEdit(): void {\n    if (this.editType === 'menu') {\n      this.item.menu_item_name = this.editedMenuItemName;\n      this.item.menu_item_price = this.editedMenuItemPrice;\n      this.item.menu_item_type = this.editedMenuItemType;\n      this.item.ingredients = this.ingredientsInput.split(',').map(ingredient => ingredient.trim());\n    } else if (this.editType === 'inventory') {\n      this.item.item_name = this.editedInventoryItemName;\n      this.item.item_quantity = this.editedInventoryItemQuantity;\n    } else if (this.editType === 'ingredients') {\n      this.item.ingredient_name = this.editedIngredientName;\n      this.item.ingredient_quantity = this.editedIngredientQuantity;\n    }\n    this.save.emit(this.item);\n  }\n  /**\n   * Emits an event to close the edit popup.\n   */\n  closePopup(): void {\n    this.close.emit();\n  }\n}\n\n    \n\n    \n        \n    \n      \n        \n          Edit Menu Item: {{ item?.menu_item_name }}\n          Current Name: {{ item?.menu_item_name }}\n          \n  \n          Current Price: ${{ item?.menu_item_price }}\n          $ \n  \n          Current Type: {{ item?.menu_item_type }}\n          \n  \n          Current Ingredients: {{ item?.ingredients }}\n          \n        \n        \n        \n          Edit Ingredient: {{ item?.ingredient_name }}\n          Current Name: {{ item?.ingredient_name }}\n          \n  \n          Current Quantity: {{ item?.ingredient_quantity }}\n          \n        \n  \n        \n          Edit Inventory Item: {{ item?.item_name }}\n          Current Name: {{ item?.item_name }}\n          \n  \n          Current Quantity: {{ item?.item_quantity }}\n          \n        \n  \n        \n          Save\n          Cancel\n        \n      \n    \n  \n  \n    \n\n    \n                \n                    ./edit-item-popup.component.scss\n                \n                .backdrop {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n    z-index: 1050;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    // padding-top: 10vh;\n}\n  \n.popup {\n    background-color: white;\n    padding: 20px;\n    border-radius: 5px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    position: relative;\n    z-index: 1051;\n    max-height: 80vh;\n    overflow-y: auto; /* Makes content scrollable */\n    width: 80%;\n    position: relative;\n}\n\n.buttons {\n    display: flex;\n    justify-content: right;\n    gap: 5px;\n}\n\n.save {\n    border-color: rgb(100, 255, 100, 0.75);\n    background-color: white;\n}\n\n.save:hover {\n    background-color: rgb(100, 255, 100, 0.75);\n}\n\n.cancel {\n    border-color: rgb(255, 100, 100, 0.75);\n    background-color: white;\n}\n\n.cancel:hover {\n    background-color: rgb(255, 100, 100, 0.75);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Edit Menu Item: {{ item?.menu_item_name }}          Current Name: {{ item?.menu_item_name }}                      Current Price: ${{ item?.menu_item_price }}          $             Current Type: {{ item?.menu_item_type }}                      Current Ingredients: {{ item?.ingredients }}                                            Edit Ingredient: {{ item?.ingredient_name }}          Current Name: {{ item?.ingredient_name }}                      Current Quantity: {{ item?.ingredient_quantity }}                                      Edit Inventory Item: {{ item?.item_name }}          Current Name: {{ item?.item_name }}                      Current Quantity: {{ item?.item_quantity }}                                      Save          Cancel                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'app-authentication-button'},{'name': 'CartModalComponent', 'selector': 'app-cart-modal'},{'name': 'CashierViewComponent', 'selector': 'app-cashier-view'},{'name': 'CheckoutPopupComponent', 'selector': 'app-checkout-popup'},{'name': 'ConfirmationPopupComponent', 'selector': 'app-confirmation-popup'},{'name': 'ContactUsComponent', 'selector': 'app-contact-us'},{'name': 'CustomerViewComponent', 'selector': 'app-customer-view'},{'name': 'EditItemPopupComponent', 'selector': 'app-edit-item-popup'},{'name': 'EmployeeCreationsMenuComponent', 'selector': 'app-employee-creations-menu'},{'name': 'GetRoleComponent', 'selector': 'app-get-role'},{'name': 'LearnMoreComponent', 'selector': 'app-learn-more'},{'name': 'LoginButtonComponent', 'selector': 'app-login-button'},{'name': 'LogoutButtonComponent', 'selector': 'app-logout-button'},{'name': 'ManagerPopupComponent', 'selector': 'app-manager-popup'},{'name': 'ManagerViewComponent', 'selector': 'app-manager-view'},{'name': 'MenuItemComponent', 'selector': 'app-menu-item'},{'name': 'MenuViewComponent', 'selector': 'app-menu-view'},{'name': 'MilkTeaMenuComponent', 'selector': 'app-milk-tea-menu'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuickAddPopupComponent', 'selector': 'app-quick-add-popup'},{'name': 'RestockReportPopupComponent', 'selector': 'app-restock-report-popup'},{'name': 'SeasonalItemPopupComponent', 'selector': 'app-seasonal-item-popup'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'SignatureMilkTeaMenuComponent', 'selector': 'app-signature-milk-tea-menu'},{'name': 'SignupButtonComponent', 'selector': 'app-signup-button'},{'name': 'SlushMenuComponent', 'selector': 'app-slush-menu'},{'name': 'SmoothieMenuComponent', 'selector': 'app-smoothie-menu'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditItemPopupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmployeeCreationsMenuComponent.html":{"url":"components/EmployeeCreationsMenuComponent.html","title":"component - EmployeeCreationsMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EmployeeCreationsMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/employee-creations-menu/employee-creations-menu.component.ts\n\n\n\n    \n        Description\n    \n    \n        EmployeeCreationsMenuComponent provides a user interface for adding seasonal menu items.\nIt enables the selection of item types, ingredients, and creation of new menu items.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-employee-creations-menu\n            \n\n\n\n            \n                styleUrls\n                ./employee-creations-menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./employee-creations-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                menuItems\n                            \n                            \n                                tableData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchMenuItemsByType\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(menuService: MenuService)\n                    \n                \n                        \n                            \n                                Defined in src/app/employee-creations-menu/employee-creations-menu.component.ts:21\n                            \n                        \n\n                \n                    \n                            Constructor for EmployeeCreationsMenuComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        menuService\n                                                  \n                                                        \n                                                                        MenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchMenuItemsByType\n                        \n                    \n                \n            \n            \n                \nfetchMenuItemsByType(type: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/employee-creations-menu/employee-creations-menu.component.ts:40\n                        \n                    \n\n\n            \n                \n                        Fetches menu items by type.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/employee-creations-menu/employee-creations-menu.component.ts:33\n                        \n                    \n\n\n            \n                \n                        OnInit lifecycle hook to fetch available menu item types and ingredient names.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        menuItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/employee-creations-menu/employee-creations-menu.component.ts:21\n                        \n                    \n\n            \n                \n                    Array of menu item types available for selection.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tableData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : [{items: [] }]\n                    \n                \n                    \n                        \n                                Defined in src/app/employee-creations-menu/employee-creations-menu.component.ts:17\n                        \n                    \n\n            \n                \n                    Array of menu item types available for selection.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MenuService } from '../services/menu.service';\nimport { response } from 'express';\n/**\n * `EmployeeCreationsMenuComponent` provides a user interface for adding seasonal menu items.\n * It enables the selection of item types, ingredients, and creation of new menu items.\n */\n@Component({\n  selector: 'app-employee-creations-menu',\n  templateUrl: './employee-creations-menu.component.html',\n  styleUrls: ['./employee-creations-menu.component.scss']\n})\nexport class EmployeeCreationsMenuComponent implements OnInit{\n  /**\n   * Array of menu item types available for selection.\n   */\n  tableData: any[] = [{items: [] }];\n  /**\n   * Array of menu item types available for selection.\n   */\n  menuItems:MenuItem[] = [];\n  /**\n   * Constructor for `EmployeeCreationsMenuComponent`.\n   * @param menuService \n   */\n  constructor(\n    private menuService: MenuService,) \n    {\n  } \n  /**\n   * OnInit lifecycle hook to fetch available menu item types and ingredient names.\n   */\n  ngOnInit() { \n    this.fetchMenuItemsByType('employee_creations');\n  }\n  /**\n   * Fetches menu items by type.\n   * @param type \n   */\n  fetchMenuItemsByType(type: string) {\n    this.menuService.getMenuByType(type).subscribe(data => {\n      this.tableData = this.tableData.concat(data);\n      this.menuItems = [...this.menuItems, ...data];\n    });\n  }\n}\n/**\n * Interface for a menu item.\n */\ninterface MenuItem {\n  /**\n   * The id of the menu item.\n   */\n  menu_item_id: number;\n  /**\n   * The name of the menu item.\n   */\n  menu_item_name: string;\n  /**\n   * The type of the menu item.\n   */\n  menu_item_type: string;\n  /**\n   * The price of the menu item.\n   */\n  menu_item_price: string;\n  /**\n   * The ingredients of the menu item.\n   */\n  ingredients: string[];\n  /**\n   * The image of the menu item.\n   */\n  image: string;\n  /**\n   * The toppings of the menu item.\n   */\n  description: string;\n  /**\n   * The toppings of the menu item.\n   */\n  added_toppings: string[];\n}\n    \n\n    \n        \n  \n  \n    \n      \n        \n          Flavored Tea & Coffee\n        \n        \n          Milk-Tea\n        \n        \n          Signature Milk Tea\n        \n        \n          Slush\n        \n        \n          Smoothies\n        \n        \n          Employee Creations\n        \n        \n          Cart\n        \n      \n    \n  \n\n\n\n\n\n\nEmployee Creations\n  \n      \n        \n          \n          {{ menuItem.menu_item_name | replaceUnderscores | titlecase }}\n          Price: ${{ menuItem.menu_item_price }}\n        \n      \n    \n\n    \n\n    \n                \n                    ./employee-creations-menu.component.scss\n                \n                .menu-item {\n    padding: 10px;\n    margin: 10px;\n    width: 400px; /* Fixed width for each item */\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    height: calc(100% - 20px)\n  }\n\n.menu-item-nav{\n    padding-top: 20%;\n}\n  \n  .menu-container {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-around;\n  }\n  \n  .menu-item-image {\n    width: 100%;\n    overflow: hidden;\n    height: auto;\n    margin-bottom: 10px;\n    border-radius: 10%;\n    border: solid 4px black;\n  }\n  \n  .menu-item-name {\n    margin: 5px 0;\n  }\n  \n  .menu-item-price {\n    margin-bottom: 10px;\n  }\n  \n  .menu-item-ingredients ul {\n    list-style-type: none;\n    padding: 0;\n  }\n.center {\n    width: 100%;\n    text-align: center;\n}\n\n.spacer {\n    margin-top: 20px;\n}\n\n.horizontal-list {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n    display: flex;\n}\n\n.horizontal-list li {\n    flex: 1;\n    border: 1px solid rgb(138, 139, 136);\n    padding: 10px;\n    display: flex;\n    flex-direction: column;\n    align-items: right;\n    background-color: #c2ebff;\n    border-radius: 30px;\n}\n\n.menu-items {\n    display: flex;\n    flex-direction: column;\n    margin-top: 5px;\n}\n\n.top-row {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.menu-items p.name {\n    font-size: 20px;\n}\n\n.menu-items p.price {\n    font-size: 18px;\n}\n\n.menu-items p.ingredients {\n    font-size: 12px;\n    text-align: left;\n}\n\n.horizontal-list li+li {\n    margin-left: 10px;\n}\n\n.horizontal-list li p strong {\n    font-size: 24px;\n    justify-content: center;\n}\n\n.transparent-ingredients {\n    color: transparent;\n}\n\n\n.TradNav{\n    width: 100vw;\n    background-color: aqua;\n    position: fixed;\n    left: 0;\n    margin-top: 55px;\n}\n\n.Food-Hold{\n    width: 100%;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    position: relative;\n    text-align: center;\n    padding-top: 30px;\n}\n\n.Food-Item{\n    width: 30%;\n    text-align: center;\n}\n\n.food-im{\n    width: 100%;\n}\n\n.flex-im-text{\n    display: flex;\n    flex-direction: column;\n}\n\n\n.title{\n    text-decoration: underline;\n    color: green;\n    display: flex;\n    padding: 0 5%;\n}\ntable {\n    width: 100%;\n    border-collapse: collapse;\n\n    th,\n    td {\n        border: 1px solid #ddd;\n        padding: 8px;\n        text-align: left;\n    }\n\n    th {\n        background-color: #f2f2f2;\n    }\n\n    tr.category-row {\n        background-color: #e6e6e6;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Flavored Tea & Coffee                          Milk-Tea                          Signature Milk Tea                          Slush                          Smoothies                          Employee Creations                          Cart                    Employee Creations                                    {{ menuItem.menu_item_name | replaceUnderscores | titlecase }}          Price: ${{ menuItem.menu_item_price }}                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'app-authentication-button'},{'name': 'CartModalComponent', 'selector': 'app-cart-modal'},{'name': 'CashierViewComponent', 'selector': 'app-cashier-view'},{'name': 'CheckoutPopupComponent', 'selector': 'app-checkout-popup'},{'name': 'ConfirmationPopupComponent', 'selector': 'app-confirmation-popup'},{'name': 'ContactUsComponent', 'selector': 'app-contact-us'},{'name': 'CustomerViewComponent', 'selector': 'app-customer-view'},{'name': 'EditItemPopupComponent', 'selector': 'app-edit-item-popup'},{'name': 'EmployeeCreationsMenuComponent', 'selector': 'app-employee-creations-menu'},{'name': 'GetRoleComponent', 'selector': 'app-get-role'},{'name': 'LearnMoreComponent', 'selector': 'app-learn-more'},{'name': 'LoginButtonComponent', 'selector': 'app-login-button'},{'name': 'LogoutButtonComponent', 'selector': 'app-logout-button'},{'name': 'ManagerPopupComponent', 'selector': 'app-manager-popup'},{'name': 'ManagerViewComponent', 'selector': 'app-manager-view'},{'name': 'MenuItemComponent', 'selector': 'app-menu-item'},{'name': 'MenuViewComponent', 'selector': 'app-menu-view'},{'name': 'MilkTeaMenuComponent', 'selector': 'app-milk-tea-menu'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuickAddPopupComponent', 'selector': 'app-quick-add-popup'},{'name': 'RestockReportPopupComponent', 'selector': 'app-restock-report-popup'},{'name': 'SeasonalItemPopupComponent', 'selector': 'app-seasonal-item-popup'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'SignatureMilkTeaMenuComponent', 'selector': 'app-signature-milk-tea-menu'},{'name': 'SignupButtonComponent', 'selector': 'app-signup-button'},{'name': 'SlushMenuComponent', 'selector': 'app-slush-menu'},{'name': 'SmoothieMenuComponent', 'selector': 'app-smoothie-menu'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EmployeeCreationsMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Employees.html":{"url":"classes/Employees.html","title":"class - Employees","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Employees\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/employees.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the interface for Employees with employee_id, first_name, last_name, phone_number\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                employee_id\n                            \n                            \n                                    Optional\n                                first_name\n                            \n                            \n                                    Optional\n                                last_name\n                            \n                            \n                                    Optional\n                                position\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        employee_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/employees.ts:8\n                        \n                    \n\n            \n                \n                    The id of the employee.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        first_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/employees.ts:12\n                        \n                    \n\n            \n                \n                    The first name of the employee.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        last_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/employees.ts:16\n                        \n                    \n\n            \n                \n                     The last name of the employee.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        position\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/employees.ts:20\n                        \n                    \n\n            \n                \n                    The phone number of the employee.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Employees {\n    /**\n     * The id of the employee.\n     */\n    employee_id?: number;\n    /**\n     * The first name of the employee.\n     */\n    first_name?: string;\n    /**\n     *  The last name of the employee.\n     */\n    last_name?: string;\n    /**\n     * The phone number of the employee.\n     */\n    position?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmployeesService.html":{"url":"injectables/EmployeesService.html","title":"injectable - EmployeesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmployeesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/employees.service.ts\n        \n\n\n            \n                Description\n            \n            \n                EmployeesService manages interactions with the API for employee-related data.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEmployees\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/employees.service.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor for EmployeesService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The HttpClient module to make HTTP requests.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getEmployees\n                        \n                    \n                \n            \n            \n                \ngetEmployees()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/employees.service.ts:25\n                        \n                    \n\n\n            \n                \n                        Fetches employee data from the API.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable containing the list of employees.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.apiUrl}/employees`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/employees.service.ts:14\n                        \n                    \n\n            \n                \n                    The base URL for the employee API.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n/**\n * `EmployeesService` manages interactions with the API for employee-related data.\n */\n@Injectable({ providedIn: 'root' })\nexport class EmployeesService {\n  /**\n   * The base URL for the employee API.\n   */\n  private baseUrl = `${environment.apiUrl}/employees`;\n  /**\n   * Constructor for `EmployeesService`.\n   * @param http The HttpClient module to make HTTP requests.\n   */\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Fetches employee data from the API.\n   * @returns An Observable containing the list of employees.\n   */\n  getEmployees(): Observable {\n    return this.http.get(this.baseUrl);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/FormatCamelCasePipe.html":{"url":"pipes/FormatCamelCasePipe.html","title":"pipe - FormatCamelCasePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  FormatCamelCasePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/format-camel-case.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                FormatCamelCasePipe transforms camel case strings into a space-separated string with each word capitalized.\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        formatCamelCase\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(inputString: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pipes/format-camel-case.pipe.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inputString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * `FormatCamelCasePipe` transforms camel case strings into a space-separated string with each word capitalized.\n */\n@Pipe({\n  name: 'formatCamelCase'\n})\nexport class FormatCamelCasePipe implements PipeTransform {\n  transform(inputString: string): string {\n    return inputString.replace(/([A-Z])/g, ' $1').replace(/^./, function(str){ return str.toUpperCase(); });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GetRoleComponent.html":{"url":"components/GetRoleComponent.html","title":"component - GetRoleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GetRoleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/get-role/get-role.component.ts\n\n\n\n    \n        Description\n    \n    \n        GetRoleComponent manages the role-based access within the application.\nIt subscribes to the DataService to determine whether the current user\nhas a role of a cashier or a manager, which in turn controls the accessibility\nof certain UI tabs based on the user's role.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-get-role\n            \n\n\n\n            \n                styleUrls\n                ./get-role.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./get-role.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/get-role/get-role.component.ts:18\n                            \n                        \n\n                \n                    \n                            The constructor for GetRoleComponent.\nIt injects DataService for fetching user roles.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for obtaining user roles and permissions.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/get-role/get-role.component.ts:33\n                        \n                    \n\n\n            \n                \n                        OnInit lifecycle hook to perform component initialization.\nHere it subscribes to the isManager observable from DataService\nto check the user's role and log it to the console.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { DataService } from './get-role.service';\nimport { AuthService } from '@auth0/auth0-angular';\n\n/**\n * `GetRoleComponent` manages the role-based access within the application.\n * It subscribes to the DataService to determine whether the current user\n * has a role of a cashier or a manager, which in turn controls the accessibility\n * of certain UI tabs based on the user's role.\n *\n * @Component Decorator that marks a class as an Angular component and provides configuration metadata that determines how the component should be processed, instantiated, and used at runtime.\n */\n@Component({\n  selector: 'app-get-role',\n  templateUrl: './get-role.component.html',\n  styleUrls: ['./get-role.component.scss']\n})\nexport class GetRoleComponent implements OnInit {\n\n  /**\n   * The constructor for `GetRoleComponent`.\n   * It injects `DataService` for fetching user roles.\n   *\n   * @param dataService Service for obtaining user roles and permissions.\n   */\n  constructor(private dataService: DataService) {}\n\n  /**\n   * OnInit lifecycle hook to perform component initialization.\n   * Here it subscribes to the `isManager` observable from `DataService`\n   * to check the user's role and log it to the console.\n   */\n  ngOnInit(): void {\n    this.dataService.isManager().subscribe(data => {\n      // Log the data received from the isManager subscription\n      console.log(data);\n    });\n  }\n}\n\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./get-role.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'app-authentication-button'},{'name': 'CartModalComponent', 'selector': 'app-cart-modal'},{'name': 'CashierViewComponent', 'selector': 'app-cashier-view'},{'name': 'CheckoutPopupComponent', 'selector': 'app-checkout-popup'},{'name': 'ConfirmationPopupComponent', 'selector': 'app-confirmation-popup'},{'name': 'ContactUsComponent', 'selector': 'app-contact-us'},{'name': 'CustomerViewComponent', 'selector': 'app-customer-view'},{'name': 'EditItemPopupComponent', 'selector': 'app-edit-item-popup'},{'name': 'EmployeeCreationsMenuComponent', 'selector': 'app-employee-creations-menu'},{'name': 'GetRoleComponent', 'selector': 'app-get-role'},{'name': 'LearnMoreComponent', 'selector': 'app-learn-more'},{'name': 'LoginButtonComponent', 'selector': 'app-login-button'},{'name': 'LogoutButtonComponent', 'selector': 'app-logout-button'},{'name': 'ManagerPopupComponent', 'selector': 'app-manager-popup'},{'name': 'ManagerViewComponent', 'selector': 'app-manager-view'},{'name': 'MenuItemComponent', 'selector': 'app-menu-item'},{'name': 'MenuViewComponent', 'selector': 'app-menu-view'},{'name': 'MilkTeaMenuComponent', 'selector': 'app-milk-tea-menu'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuickAddPopupComponent', 'selector': 'app-quick-add-popup'},{'name': 'RestockReportPopupComponent', 'selector': 'app-restock-report-popup'},{'name': 'SeasonalItemPopupComponent', 'selector': 'app-seasonal-item-popup'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'SignatureMilkTeaMenuComponent', 'selector': 'app-signature-milk-tea-menu'},{'name': 'SignupButtonComponent', 'selector': 'app-signup-button'},{'name': 'SlushMenuComponent', 'selector': 'app-slush-menu'},{'name': 'SmoothieMenuComponent', 'selector': 'app-smoothie-menu'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GetRoleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Ingredients.html":{"url":"classes/Ingredients.html","title":"class - Ingredients","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Ingredients\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/ingredients.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the structure of an ingredient in the system.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                ingredient_id\n                            \n                            \n                                    Optional\n                                ingredient_name\n                            \n                            \n                                    Optional\n                                ingredient_quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ingredient_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/ingredients.ts:8\n                        \n                    \n\n            \n                \n                    The id of the ingredient.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ingredient_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/ingredients.ts:12\n                        \n                    \n\n            \n                \n                    The name of the ingredient.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ingredient_quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/ingredients.ts:16\n                        \n                    \n\n            \n                \n                    The quantity of the ingredient.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Ingredients {\n    /**\n     * The id of the ingredient.\n     */\n    ingredient_id?: number;\n    /**\n     * The name of the ingredient.\n     */\n    ingredient_name?: string;\n    /**\n     * The quantity of the ingredient.\n     */\n    ingredient_quantity?: number;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IngredientsService.html":{"url":"injectables/IngredientsService.html","title":"injectable - IngredientsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IngredientsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/ingredients.service.ts\n        \n\n\n            \n                Description\n            \n            \n                IngredientsService provides functionality to manage ingredient data through HTTP requests.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addIngredient\n                            \n                            \n                                deleteIngredient\n                            \n                            \n                                editIngredient\n                            \n                            \n                                getIngredientById\n                            \n                            \n                                getIngredientNames\n                            \n                            \n                                getIngredients\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/ingredients.service.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor for IngredientsService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HttpClient for making HTTP requests.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addIngredient\n                        \n                    \n                \n            \n            \n                \naddIngredient(ingredient: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/ingredients.service.ts:49\n                        \n                    \n\n\n            \n                \n                        Method to add an ingredient.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ingredient\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable of type any.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteIngredient\n                        \n                    \n                \n            \n            \n                \ndeleteIngredient(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/ingredients.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Method to delete an ingredient.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable of type any.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editIngredient\n                        \n                    \n                \n            \n            \n                \neditIngredient(id: number, ingredient: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/ingredients.service.ts:41\n                        \n                    \n\n\n            \n                \n                         Method to edit an ingredient.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ingredient\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable of type any.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIngredientById\n                        \n                    \n                \n            \n            \n                \ngetIngredientById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/ingredients.service.ts:64\n                        \n                    \n\n\n            \n                \n                        Method to get ingredient by id.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable of type any.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIngredientNames\n                        \n                    \n                \n            \n            \n                \ngetIngredientNames()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/ingredients.service.ts:56\n                        \n                    \n\n\n            \n                \n                        Method to get ingredient names.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable of type any.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIngredients\n                        \n                    \n                \n            \n            \n                \ngetIngredients()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/ingredients.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Method to get ingredients.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable of type any.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.apiUrl}/ingredients`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/ingredients.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n/**\n * `IngredientsService` provides functionality to manage ingredient data through HTTP requests.\n */\n@Injectable({ providedIn: 'root' })\nexport class IngredientsService {\n  private baseUrl = `${environment.apiUrl}/ingredients`;\n/**\n * Constructor for `IngredientsService`.\n * @param http HttpClient for making HTTP requests.\n */\n  constructor(private http: HttpClient) {}\n\n  // Methods for getIngredients, deleteIngredient, editIngredient, addIngredient, getIngredientNames, getIngredientById\n/**\n * Method to get ingredients.\n * @returns Observable of type any.\n */\n  getIngredients(): Observable {\n    return this.http.get(this.baseUrl);\n  }\n/**\n * Method to delete an ingredient.\n * @param id \n * @returns Observable of type any.\n */\n  deleteIngredient(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}/${id}`);\n  }\n/**\n *  Method to edit an ingredient.\n * @param id \n * @param ingredient \n * @returns  Observable of type any.\n */\n  editIngredient(id: number, ingredient: any): Observable {\n    return this.http.put(`${this.baseUrl}/${id}`, ingredient);\n  }\n/**\n * Method to add an ingredient.\n * @param ingredient \n * @returns Observable of type any.\n */\n  addIngredient(ingredient: any): Observable {\n    return this.http.post(`${this.baseUrl}`, ingredient);\n  }\n/**\n * Method to get ingredient names.\n * @returns Observable of type any.\n */\n  getIngredientNames(): Observable {\n    return this.http.get(`${this.baseUrl}/ingredientNames`);\n  }\n/**\n * Method to get ingredient by id.\n * @param id \n * @returns  Observable of type any.\n */\n  getIngredientById(id: number): Observable {\n    return this.http.get(`${this.baseUrl}/get/by/${id}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Inventory.html":{"url":"classes/Inventory.html","title":"class - Inventory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Inventory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/inventory.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents an item in the inventory, including its ID, name, and quantity.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                item_id\n                            \n                            \n                                    Optional\n                                item_name\n                            \n                            \n                                    Optional\n                                item_quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        item_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/inventory.ts:8\n                        \n                    \n\n            \n                \n                    The id of the item.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        item_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/inventory.ts:12\n                        \n                    \n\n            \n                \n                    The name of the item.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        item_quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/inventory.ts:16\n                        \n                    \n\n            \n                \n                    The quantity of the item.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Inventory {\n    /**\n     * The id of the item.\n     */\n    item_id?: number;\n    /**\n     * The name of the item.\n     */\n    item_name?: string;\n    /**\n     * The quantity of the item.\n     */\n    item_quantity?: number;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InventoryItem.html":{"url":"interfaces/InventoryItem.html","title":"interface - InventoryItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InventoryItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/manager-view/manager-view.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the model for the inventory item.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            item_id\n                                        \n                                \n                                \n                                        \n                                            item_name\n                                        \n                                \n                                \n                                        \n                                            item_quantity\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        item_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        item_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The item's id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        item_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The item's name\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item_quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        item_quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The item's quantity\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MenuService } from '../services/menu.service';\nimport { IngredientsService } from '../services/ingredients.service';\nimport { InventoryService } from '../services/inventory.service';\nimport { OrderHistoryService } from '../services/order-history.service';\nimport { FormsModule } from '@angular/forms';\nimport { forkJoin } from 'rxjs';\n/**\n * This is the model for the table configuration.\n */\ninterface TableConfig {\n  /**\n   * The table's title\n   */\n  columns: TableColumn[];\n}\n/**\n *  This is the model for the table column.\n */\ninterface TableColumn {\n  // The column's key\n  /**\n   * The column's key\n   */\n  key: string;\n  /**\n   * The column's header\n   */\n  // The column's header\n  header: string;\n}\n/**\n * This is the model for the table row.\n */\ninterface InventoryMap {\n  // The row's key\n  /**\n   * The row's key\n   */\n  [key: string]: number;\n}\n/**\n * This is the model for the inventory item.\n */\ninterface InventoryItem {\n  // The item's id\n  /**\n   * The item's id\n   */\n  item_id: number;\n  /**\n   * The item's name\n   */\n  // The item's name\n  item_name: string;\n  /**\n   * The item's quantity\n   */\n  // The item's quantity\n  item_quantity: number;\n}\n/**\n * This is the model for the sales summary.\n */\ninterface SalesSummary {\n  // The row's key\n  /**\n   * The row's key\n   */\n  [key: string]: number; // Adjust the key type if necessary\n}\n\n// Define an interface for the order item\n/**\n * This is the model for the order item.\n */\ninterface OrderItem {\n  /**\n   * The item's id\n   */\n  // The item's id\n  item_name: string;\n  /**\n   * The item's quantity\n   */\n   // or item_id if it's a number\n  quantity: number;\n}\n\n/**\n * `ManagerViewComponent` serves as the main interface for the manager's dashboard.\n * It handles operations related to menu management, ingredients, inventory, and order history,\n * providing functionalities to refresh and manipulate these data sets.\n *\n * @Component Decorator that marks the class as an Angular component and provides metadata about the component.\n */\n @Component({\n  selector: 'app-manager-view',\n  templateUrl: './manager-view.component.html',\n  styleUrls: ['./manager-view.component.scss']\n})\nexport class ManagerViewComponent implements OnInit {\n  // Component properties\n  /**\n   * Boolean to track if the current user is a manager.\n   */\n  showPopup: boolean = false;\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  showRestockReportPopup: boolean = false;\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  popupTitle: string = '';\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  start: string = '';\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  end: string = '';\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  popupContent: any;\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  menu: any[] = [];\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  ingredients: any[] = [];\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  inventory: any[] = [];\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  orderHistory: any[] = [];\n\n  /**\n   * Constructor for `ManagerViewComponent`.\n   * \n   * @param MenuService Service to manage menu items.\n   * @param IngredientsService Service to manage ingredients.\n   * @param InventoryService Service to manage inventory.\n   * @param OrderHistoryService Service to manage order history.\n   */\n  constructor(\n    private MenuService: MenuService, \n    private IngredientsService: IngredientsService, \n    private InventoryService: InventoryService, \n    private OrderHistoryService: OrderHistoryService\n  ) {}\n\n  /**\n   * OnInit lifecycle hook for initial component setup.\n   */\n  ngOnInit(): void {\n    // Initialization logic can go here\n  }\n\n  /**\n   * Refreshes the menu items by fetching the latest data from the `MenuService`.\n   */\n  refreshMenu(): void {\n    this.MenuService.getMenu().subscribe(items => {\n      // Refresh menu logic\n    });\n  }\n  \n  /**\n   * Refreshes the ingredients by fetching the latest data from the `IngredientsService`.\n   */\n  refreshIngredients(): void {\n    this.IngredientsService.getIngredients().subscribe(ingredients => {\n      // Refresh ingredients logic\n    });\n  }\n  \n  /**\n   * Refreshes the inventory by fetching the latest data from the `InventoryService`.\n   */\n  refreshInventory(): void {\n    this.InventoryService.getInventory().subscribe(invItems => {\n      // Refresh inventory logic\n    });\n  }\n\n  /**\n   * Refreshes the order history by fetching the latest data from the `OrderHistoryService`.\n   */\n  lowInventItems: any[] = [];\n  /**\n   * Get all of the elements that have only sold 10 percent of their stock\n   */\n  lowIngredItems: any[] = [];\n  /**\n   * Get all of the elements that have only sold 10 percent of their stock\n   */\n  getLowStock(): void {\n    this.InventoryService.getInventory().subscribe(invItems => {\n      this.inventory = invItems;\n\n      this.lowInventItems = this.inventory.filter(item => item.item_quantity  {\n        item.item_quantity_to_order = 1500 - item.item_quantity;\n      });\n    });\n\n    this.IngredientsService.getIngredients().subscribe(ingredients => {\n      this.ingredients = ingredients;\n      \n      this.lowIngredItems = this.ingredients.filter(item => item.ingredient_quantity  {\n        item.item_quantity_to_order = 1500 - item.ingredient_quantity;\n        item.item_name = item.ingredient_name;\n        item.item_quantity = item.ingredient_quantity;\n      });\n      const temp = [...this.lowInventItems, ...this.lowIngredItems];\n\n      temp.forEach(item => {\n        item.item_name = this.formatCamelCase(item.item_name);\n      });\n      this.popupContent = temp\n    });\n  }  \n\n  /**\n   * gets the sales from that time period\n   * @param start \n   * @param end \n   */\n  refreshSales(start: string, end: string): void {\n    this.OrderHistoryService.getOrderHistory().subscribe(ordItems => {\n      this.orderHistory = ordItems;\n\n      const startDate = new Date(start);\n      startDate.setUTCHours(0, 0, 0, 0);\n\n      const endDate = new Date(end);\n      endDate.setUTCHours(23, 59, 59, 999);\n\n      // console.log(ordItems);\n      // console.log(startDate);\n      // console.log(endDate);\n\n      const ItemsInRange = this.orderHistory.filter(order => {\n        const orderDate = new Date(order.order_timestamp);\n        return orderDate > startDate && orderDate  {\n        item.order_items = this.formatOrderItems(item.order_items);\n      });\n\n      console.log(ItemsInRange)\n\n      this.popupContent = ItemsInRange;\n    });\n  }\n  /**\n   * gets the sales from that time period\n   * @param start \n   * @param end \n   */\n  getExcess(start: string, end: string): void {\n    let inventory_ingrident_map = new Map();\n    // const additionalItems = ['napkins', 'plastic_seals', 'cups', 'straws'];\n    this.OrderHistoryService.getIngridents().subscribe(\n      data => {\n        data.forEach((item: { menu_item_name: string; ingredients: string[]; }) => {\n          let itemIngredients = item.ingredients.slice(); // Create a copy of the ingredients array\n\n          // // Check if the item has more than one ingredient and add additional items if so\n          // if (itemIngredients.length > 1) {\n          //   itemIngredients = itemIngredients.concat(additionalItems);\n          // }\n\n          inventory_ingrident_map.set(item.menu_item_name, itemIngredients);\n        });\n        console.log(inventory_ingrident_map); // This will log the map with the data\n      },\n      error => {\n        console.error('Error:', error); // This will log any error that occurs during the request\n      }\n    );\n\n    let ogIngrdientmap = new Map();\n      this.OrderHistoryService.getIng().subscribe(\n        data => {\n          data.forEach((item: { ingredient_name: string;  ingredient_quantity : number; }) => {\n            ogIngrdientmap.set(item.ingredient_name, item.ingredient_quantity);\n        });\n        console.log(ogIngrdientmap)\n      },\n        error => {\n          console.error('Error:', error); // This will log any error that occurs during the request\n        }\n      );\n    this.OrderHistoryService.getOrderHistory().subscribe(ordItems => {\n      this.orderHistory = ordItems;\n\n      // Initialize initialInventory\n      const initialInventory: InventoryMap = {};\n      this.InventoryService.getInventory().subscribe((inventoryItems: InventoryItem[]) => {\n        inventoryItems.forEach((item: InventoryItem) => {\n          initialInventory[item.item_name] = item.item_quantity;\n        });\n\n        console.log(initialInventory); // Log the map of item counts\n      });\n\n      const startDate = new Date(start);\n      startDate.setUTCHours(0, 0, 0, 0);\n  \n      const endDate = new Date(end);\n      endDate.setUTCHours(23, 59, 59, 999);\n  \n      const itemsInRange = this.orderHistory.filter(order => {\n        const orderDate = new Date(order.order_timestamp);\n        return orderDate >= startDate && orderDate ();\n      itemsInRange.forEach(order => {\n      order.order_items.forEach((item: OrderItem) => {\n        //@ts-ignore\n        const ingredients = inventory_ingrident_map.get(item) || [];\n        ingredients.forEach(ingredient => {\n          const currentCount = ingredientCountMap.get(ingredient) || 0;\n          ingredientCountMap.set(ingredient, currentCount + 1);\n        });\n      });\n    });\n\n    console.log(\"Ingredient Usage Count:\", ingredientCountMap);\n      // console.log(\"passed sales\")\n      let excessIngredients: { excessIngredients: string }[] = [];\n      ingredientCountMap.forEach((count, ingredient) => {\n        //@ts-ignore\n        if(count  {\n      let formattedItem = item.replace(/_/g, ' ');\n  \n      formattedItem = formattedItem.replace(/\\w\\S*/g, (word) => {\n        return word.charAt(0).toUpperCase() + word.substr(1).toLowerCase();\n      });\n  \n      return formattedItem;\n    });\n  \n    return formatted.join(', ');\n  }\n  /**\n   * Takes a string of items formatted with _ for a space and fixes them\n   * @param ordItem \n   * @returns formatted string\n   */\n  //Same as above but for only one string\n  formatSingleUnderscore(ordItem: string): string {\n    let formattedItem = ordItem.replace(/_/g, ' ');\n  \n    formattedItem = formattedItem.replace(/\\w\\S*/g, (word) => {\n      return word.charAt(0).toUpperCase() + word.substr(1).toLowerCase();\n    });\n  \n    return formattedItem;\n  }\n  /**\n   * Takes a string of items formatted with camelCase and fixes them\n   * @param name \n   * @returns formatted string\n   */\n  // Fixes camelCase words (one string)\n  formatCamelCase(name: string): string {\n    return name.replace(/([A-Z])/g, ' $1').replace(/^./, function(str){ return str.toUpperCase(); });\n  }\n  /**\n   * Takes a string of items formatted with camelCase and fixes them\n   * @param names \n   * @returns formatted string\n   */\n  // Same as above but for array of strings\n  formatCamelCaseArray(names: string[]): string[] {\n    return names.map(name => {\n      return name.replace(/([A-Z])/g, ' $1').replace(/^./, function(str){ return str.toUpperCase(); }).split(',').join(', ');\n    });\n  }\n  \n  /**\n   * This function is called when the user clicks on the \"View Inventory\" button\n   */\n  tableConfig?: TableConfig;\n/**\n * This hold all of the possible table configs for the value\n */\n  menuTableConfig: TableConfig = {\n    columns: [\n      { key: 'menu_item_id', header: 'ID' },\n      { key: 'menu_item_name', header: 'Name' },\n      { key: 'menu_item_type', header: 'Type' },\n      { key: 'menu_item_price', header: 'Price' },\n      { key: 'ingredients', header: 'Ingredients' }\n    ]\n  };\n  /**\n   * This hold all of the possible table configs for the value\n   */\n  ingredientsTableConfig: TableConfig = {\n    columns: [\n      { key: 'ingredient_id', header: 'ID' },\n      { key: 'ingredient_name', header: 'Name' },\n      { key: 'ingredient_quantity', header: 'Quantity' }\n    ]\n  };\n/**\n * This hold all of the possible table configs for the value\n */\n  inventoryTableConfig: TableConfig = {\n    columns: [\n      { key: 'item_id', header: 'ID' },\n      { key: 'item_name', header: 'Name' },\n      { key: 'item_quantity', header: 'Quantity' }\n    ]\n  };\n/**\n * This hold all of the possible table configs for the value\n */\n  restockReport: TableConfig = {\n    columns: [\n      { key: 'item_name', header: 'Name' },\n      { key: 'item_quantity', header: 'Current Quantity' },\n      { key: 'item_quantity_to_order', header: 'Amount to Order' }\n    ]\n  };\n/**\n * This hold all of the possible table configs for the value\n */\n  salesReport: TableConfig = {\n    columns: [\n      { key: 'order_timestamp', header: 'Date' },\n      { key: 'order_total', header: 'Price' },\n      { key: 'order_items', header: 'Items Ordered' }\n    ]\n  };\n/**\n * This hold all of the possible table configs for the value\n */\n  excessReport: TableConfig = {\n    columns: [\n      { key: 'excessIngredients',  header: 'Excess Item' }\n    ]\n  };\n  /**\n   * This hold all of the possible table configs for the value\n   * @param type \n   */\n  openPopup(type: string) {\n    this.showPopup = true;\n    switch (type) {\n      case 'menu':\n        this.popupTitle = 'Edit Menu';\n        this.tableConfig = this.menuTableConfig;\n        this.refreshMenu();\n        break;\n      case 'ingredients':\n        this.popupTitle = 'Edit Ingredients';\n        this.tableConfig = this.ingredientsTableConfig;\n        this.refreshIngredients();\n        break;\n      case 'inventory':\n        this.popupTitle = 'Edit Inventory';\n        this.tableConfig = this.inventoryTableConfig;\n        this.refreshInventory();\n        break;\n      }\n  }\n\n  // ACTION BUTTONS\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  showEditPopup: boolean = false;\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  selectedItem: any = null;\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  currentAction: 'edit' | 'delete' | 'add' | null = null;\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   * @param item \n   */\n  editRow(item: any): void {\n    console.log('Editing item, opening edit popup', item);\n    this.currentAction = 'edit';\n    this.selectedItem = item;\n    if (this.popupTitle === 'Edit Menu') {\n      this.editType = 'menu';\n    } else if (this.popupTitle === 'Edit Ingredients') {\n      this.editType = 'ingredients';\n    } else if (this.popupTitle === 'Edit Inventory') {\n      this.editType = 'inventory';\n    }\n    if (this.editType === 'menu') {\n      this.popupTitle = 'Edit Menu';\n    } else if (this.editType === 'ingredients') {\n      this.popupTitle = 'Edit Ingredients';\n    } else if (this.editType === 'inventory') {\n      this.popupTitle = 'Edit Inventory';\n    }\n    this.showPopup = false;\n    this.showEditPopup = true;\n  }  \n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   * @param item \n   */\n  deleteRow(item: any): void {\n    console.log('Deleting item:', item);\n    if (this.editType === 'menu') {\n      this.popupTitle = 'Edit Menu';\n    } else if (this.editType === 'ingredients') {\n      this.popupTitle = 'Edit Ingredients';\n    } else if (this.editType === 'inventory') {\n      this.popupTitle = 'Edit Inventory';\n    }\n    this.currentAction = 'delete';\n    this.selectedItem = item;\n    this.showConfirmationPopup = true;\n    this.showPopup = false;\n  }\n\n  // EDIT CONFIRMATIONS\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  onEditCancel(): void {\n    this.selectedItem = null;\n    this.showEditPopup = false;\n    this.showPopup = true; // Reopen the main popup if needed\n  }\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   * @param editedItem \n   */\n  onItemSave(editedItem: any): void {\n    // Process the edited item\n    if (this.popupTitle === 'Edit Menu') {\n      this.refreshMenu();\n    } else if (this.popupTitle === 'Edit Ingredients') {\n      this.refreshIngredients();\n    } else if (this.popupTitle === 'Edit Inventory') {\n      this.refreshInventory();\n    }\n    this.selectedItem = editedItem;\n    this.showEditPopup = false;\n    this.showConfirmationPopup = true;\n  }  \n\n  // CONFIRMATION POPUP\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  showConfirmationPopup: boolean = false;\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  editType: 'menu' | 'ingredients' | 'inventory' | null = null;\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   * @param item \n   */\n  onItemConfirm(item: any): void {\n    this.selectedItem = item;\n    this.showConfirmationPopup = false;\n    if (this.popupTitle === 'Edit Menu') {\n      if (this.currentAction === 'edit') {\n        this.MenuService.editMenuItem(item.menu_item_id, item).subscribe(() => {\n          this.refreshMenu();\n        });\n      } else if (this.currentAction === 'delete') {\n        console.log('Deleting menu item', item);\n        this.MenuService.deleteMenuItem(item.menu_item_id).subscribe(() => {\n          this.refreshMenu();\n        });\n      }\n    } else if (this.popupTitle === 'Edit Ingredients') {\n      if (this.currentAction === 'edit') {\n        this.IngredientsService.editIngredient(item.ingredient_id, item).subscribe(() => {\n          this.refreshIngredients();\n        });\n      } else if (this.currentAction === 'delete') {\n        this.IngredientsService.deleteIngredient(item.ingredient_id).subscribe(() => {\n          this.refreshIngredients();\n        });\n      }\n    } else if (this.popupTitle === 'Edit Inventory') {\n      if (this.currentAction === 'edit') {\n        this.InventoryService.editInventoryItem(item.item_id, item).subscribe(() => {\n          this.refreshInventory();\n        });\n      } else if (this.currentAction === 'delete') {\n        this.InventoryService.deleteInventoryItem(item.item_id).subscribe(() => {\n          this.refreshInventory();\n        });\n      }\n    } else if (this.popupTitle === 'Quick Add') {\n      if (this.editType === 'menu') {\n        this.MenuService.addMenuItem(item).subscribe(() => {\n          this.refreshMenu();\n        });\n        console.log('Adding menu item', item.menu_item_name);\n      } else if (this.editType === 'ingredients') {\n        this.IngredientsService.addIngredient(item).subscribe(() => {\n          this.refreshIngredients();\n        });\n      } else if (this.editType === 'inventory') {\n        this.InventoryService.addInventoryItem(item).subscribe(() => {\n          this.refreshInventory();\n        });\n      }\n    }\n    this.showPopup = true;\n    if (this.popupTitle === 'Add Seasonal Item') {\n      this.MenuService.addMenuItem(item).subscribe(() => {\n        this.refreshMenu();\n      });\n      this.showPopup = false;\n    }\n  }\n/**\n * This function is called when the user clicks on the \"Add\" button\n */\n  onItemDecline(): void {\n    this.showConfirmationPopup = false;\n    if (this.popupTitle === 'Edit Menu') {\n      this.showPopup = true;\n    } else if (this.popupTitle === 'Edit Ingredients') {\n      this.showPopup = true;\n    } else if (this.popupTitle === 'Edit Inventory') {\n      this.showPopup = true;\n    } else if (this.popupTitle === 'Quick Add') {\n      this.showQuickAddPopup = true;\n    } else if (this.popupTitle === 'Add Seasonal Item') {\n      this.showSeasonalItemPopup = true;\n    }\n  }\n\n  // QUICK ADD POPUP\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  showQuickAddPopup: boolean = false;\n/**\n *  This function is called when the user clicks on the \"Add\" button\n * @param type \n */\n  quickAdd(type: string): void {\n    if (this.popupTitle === 'Edit Menu') {\n      this.editType = 'menu';\n    } else if (this.popupTitle === 'Edit Ingredients') {\n      this.editType = 'ingredients';\n    } else if (this.popupTitle === 'Edit Inventory') {\n      this.editType = 'inventory';\n    }\n    this.popupTitle = 'Quick Add';\n    console.log('Quick add');\n    this.showPopup = false;\n    this.showQuickAddPopup = true;\n  }\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  onQuickAddCancel(): void {\n    this.showQuickAddPopup = false;\n    this.showPopup = true;\n  }\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   * @param newItem \n   */\n  onItemAdd(newItem: any): void {\n    // Process the new item\n    this.currentAction = 'add';\n    if (this.popupTitle === 'Edit Menu') {\n      this.refreshMenu();\n    } else if (this.popupTitle === 'Edit Ingredients') {\n      this.refreshIngredients();\n    } else if (this.popupTitle === 'Edit Inventory') {\n      this.refreshInventory();\n    }\n    this.selectedItem = newItem;\n    this.showQuickAddPopup = false;\n    this.showConfirmationPopup = true;\n  }\n\n  // SEAOSONAL ITEM POPUP\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  showSeasonalItemPopup: boolean = false;\n/**\n * This function is called when the user clicks on the \"Add\" button\n * @param type \n */\n  seasonalItem(type: string): void {\n    this.popupTitle = 'Add Seasonal Item';\n    this.currentAction = 'add';\n    console.log('Seasonal item');\n    this.showSeasonalItemPopup = true;\n  }\n/**\n * This function is called when the user clicks on the \"Add\" button\n */\n  onSeasonalItemCancel(): void {\n    this.showSeasonalItemPopup = false;\n  }\n/**\n * This function is called when the user clicks on the \"Add\" button\n * @param newItem \n */\n  seasonalItemAdd(newItem: any): void {\n    this.selectedItem = newItem;\n    this.showSeasonalItemPopup = false;\n    this.showConfirmationPopup = true;\n  }\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   * @param type \n   * @param start \n   * @param end \n   */\n  // OTHER\n  reportPopup(type: string, start?: string, end?: string) {\n    this.showRestockReportPopup = true;\n    switch (type) {\n      case 'restock': \n        this.popupTitle = 'Restock Report';\n        this.tableConfig = this.restockReport;\n        this.getLowStock();\n        break;\n      case 'sales': \n        if (!start) {\n          start = \"2023-01-01\";\n        }\n        if (!end) {\n          end = \"2023-03-01\";\n        }\n        this.popupTitle = 'Sales Report';\n        this.tableConfig = this.salesReport;\n        this.refreshSales(start, end);\n        break;\n      case 'excess':\n        this.popupTitle = 'Excess Report';\n        this.tableConfig = this.excessReport;\n        if (!start) {\n          start = \"2023-01-01\";\n        }\n        if (!end) {\n          end = \"2023-03-01\";\n        }\n        this.getExcess(start, end);\n        break;\n      }\n  }\n\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  clickSalesReport() {\n    // Do something cool\n    console.log('clickSalesReport()');\n  }\n  /**\n   *  This function is called when the user clicks on the \"Add\" button\n   */\n  clickExcessReport() {\n    // Do something cool\n    console.log('clickExcessReport()');\n  }\n  /**\n   *  This function is called when the user clicks on the \"Add\" button\n   */\n  clickRestockReport() {\n    // Do something cool\n    console.log('clickStockReport()');\n  }\n  /**\n   *  This function is called when the user clicks on the \"Add\" button\n   */\n  clickPPReport() {\n    // Do something cool\n    console.log('clickPPReport()');\n  }\n  /**\n   *  This function is called when the user clicks on the \"Add\" button\n   */\n  clickIPReport() {\n    // Do something cool\n    console.log('clickIPReport()');\n  }\n}\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InventoryMap.html":{"url":"interfaces/InventoryMap.html","title":"interface - InventoryMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InventoryMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/manager-view/manager-view.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the model for the table row.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        number\n\n                    \n                \n                        \n                            \n                                Defined in src/app/manager-view/manager-view.component.ts:35\n                            \n                        \n                \n                    \n                        The row's key\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MenuService } from '../services/menu.service';\nimport { IngredientsService } from '../services/ingredients.service';\nimport { InventoryService } from '../services/inventory.service';\nimport { OrderHistoryService } from '../services/order-history.service';\nimport { FormsModule } from '@angular/forms';\nimport { forkJoin } from 'rxjs';\n/**\n * This is the model for the table configuration.\n */\ninterface TableConfig {\n  /**\n   * The table's title\n   */\n  columns: TableColumn[];\n}\n/**\n *  This is the model for the table column.\n */\ninterface TableColumn {\n  // The column's key\n  /**\n   * The column's key\n   */\n  key: string;\n  /**\n   * The column's header\n   */\n  // The column's header\n  header: string;\n}\n/**\n * This is the model for the table row.\n */\ninterface InventoryMap {\n  // The row's key\n  /**\n   * The row's key\n   */\n  [key: string]: number;\n}\n/**\n * This is the model for the inventory item.\n */\ninterface InventoryItem {\n  // The item's id\n  /**\n   * The item's id\n   */\n  item_id: number;\n  /**\n   * The item's name\n   */\n  // The item's name\n  item_name: string;\n  /**\n   * The item's quantity\n   */\n  // The item's quantity\n  item_quantity: number;\n}\n/**\n * This is the model for the sales summary.\n */\ninterface SalesSummary {\n  // The row's key\n  /**\n   * The row's key\n   */\n  [key: string]: number; // Adjust the key type if necessary\n}\n\n// Define an interface for the order item\n/**\n * This is the model for the order item.\n */\ninterface OrderItem {\n  /**\n   * The item's id\n   */\n  // The item's id\n  item_name: string;\n  /**\n   * The item's quantity\n   */\n   // or item_id if it's a number\n  quantity: number;\n}\n\n/**\n * `ManagerViewComponent` serves as the main interface for the manager's dashboard.\n * It handles operations related to menu management, ingredients, inventory, and order history,\n * providing functionalities to refresh and manipulate these data sets.\n *\n * @Component Decorator that marks the class as an Angular component and provides metadata about the component.\n */\n @Component({\n  selector: 'app-manager-view',\n  templateUrl: './manager-view.component.html',\n  styleUrls: ['./manager-view.component.scss']\n})\nexport class ManagerViewComponent implements OnInit {\n  // Component properties\n  /**\n   * Boolean to track if the current user is a manager.\n   */\n  showPopup: boolean = false;\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  showRestockReportPopup: boolean = false;\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  popupTitle: string = '';\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  start: string = '';\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  end: string = '';\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  popupContent: any;\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  menu: any[] = [];\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  ingredients: any[] = [];\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  inventory: any[] = [];\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  orderHistory: any[] = [];\n\n  /**\n   * Constructor for `ManagerViewComponent`.\n   * \n   * @param MenuService Service to manage menu items.\n   * @param IngredientsService Service to manage ingredients.\n   * @param InventoryService Service to manage inventory.\n   * @param OrderHistoryService Service to manage order history.\n   */\n  constructor(\n    private MenuService: MenuService, \n    private IngredientsService: IngredientsService, \n    private InventoryService: InventoryService, \n    private OrderHistoryService: OrderHistoryService\n  ) {}\n\n  /**\n   * OnInit lifecycle hook for initial component setup.\n   */\n  ngOnInit(): void {\n    // Initialization logic can go here\n  }\n\n  /**\n   * Refreshes the menu items by fetching the latest data from the `MenuService`.\n   */\n  refreshMenu(): void {\n    this.MenuService.getMenu().subscribe(items => {\n      // Refresh menu logic\n    });\n  }\n  \n  /**\n   * Refreshes the ingredients by fetching the latest data from the `IngredientsService`.\n   */\n  refreshIngredients(): void {\n    this.IngredientsService.getIngredients().subscribe(ingredients => {\n      // Refresh ingredients logic\n    });\n  }\n  \n  /**\n   * Refreshes the inventory by fetching the latest data from the `InventoryService`.\n   */\n  refreshInventory(): void {\n    this.InventoryService.getInventory().subscribe(invItems => {\n      // Refresh inventory logic\n    });\n  }\n\n  /**\n   * Refreshes the order history by fetching the latest data from the `OrderHistoryService`.\n   */\n  lowInventItems: any[] = [];\n  /**\n   * Get all of the elements that have only sold 10 percent of their stock\n   */\n  lowIngredItems: any[] = [];\n  /**\n   * Get all of the elements that have only sold 10 percent of their stock\n   */\n  getLowStock(): void {\n    this.InventoryService.getInventory().subscribe(invItems => {\n      this.inventory = invItems;\n\n      this.lowInventItems = this.inventory.filter(item => item.item_quantity  {\n        item.item_quantity_to_order = 1500 - item.item_quantity;\n      });\n    });\n\n    this.IngredientsService.getIngredients().subscribe(ingredients => {\n      this.ingredients = ingredients;\n      \n      this.lowIngredItems = this.ingredients.filter(item => item.ingredient_quantity  {\n        item.item_quantity_to_order = 1500 - item.ingredient_quantity;\n        item.item_name = item.ingredient_name;\n        item.item_quantity = item.ingredient_quantity;\n      });\n      const temp = [...this.lowInventItems, ...this.lowIngredItems];\n\n      temp.forEach(item => {\n        item.item_name = this.formatCamelCase(item.item_name);\n      });\n      this.popupContent = temp\n    });\n  }  \n\n  /**\n   * gets the sales from that time period\n   * @param start \n   * @param end \n   */\n  refreshSales(start: string, end: string): void {\n    this.OrderHistoryService.getOrderHistory().subscribe(ordItems => {\n      this.orderHistory = ordItems;\n\n      const startDate = new Date(start);\n      startDate.setUTCHours(0, 0, 0, 0);\n\n      const endDate = new Date(end);\n      endDate.setUTCHours(23, 59, 59, 999);\n\n      // console.log(ordItems);\n      // console.log(startDate);\n      // console.log(endDate);\n\n      const ItemsInRange = this.orderHistory.filter(order => {\n        const orderDate = new Date(order.order_timestamp);\n        return orderDate > startDate && orderDate  {\n        item.order_items = this.formatOrderItems(item.order_items);\n      });\n\n      console.log(ItemsInRange)\n\n      this.popupContent = ItemsInRange;\n    });\n  }\n  /**\n   * gets the sales from that time period\n   * @param start \n   * @param end \n   */\n  getExcess(start: string, end: string): void {\n    let inventory_ingrident_map = new Map();\n    // const additionalItems = ['napkins', 'plastic_seals', 'cups', 'straws'];\n    this.OrderHistoryService.getIngridents().subscribe(\n      data => {\n        data.forEach((item: { menu_item_name: string; ingredients: string[]; }) => {\n          let itemIngredients = item.ingredients.slice(); // Create a copy of the ingredients array\n\n          // // Check if the item has more than one ingredient and add additional items if so\n          // if (itemIngredients.length > 1) {\n          //   itemIngredients = itemIngredients.concat(additionalItems);\n          // }\n\n          inventory_ingrident_map.set(item.menu_item_name, itemIngredients);\n        });\n        console.log(inventory_ingrident_map); // This will log the map with the data\n      },\n      error => {\n        console.error('Error:', error); // This will log any error that occurs during the request\n      }\n    );\n\n    let ogIngrdientmap = new Map();\n      this.OrderHistoryService.getIng().subscribe(\n        data => {\n          data.forEach((item: { ingredient_name: string;  ingredient_quantity : number; }) => {\n            ogIngrdientmap.set(item.ingredient_name, item.ingredient_quantity);\n        });\n        console.log(ogIngrdientmap)\n      },\n        error => {\n          console.error('Error:', error); // This will log any error that occurs during the request\n        }\n      );\n    this.OrderHistoryService.getOrderHistory().subscribe(ordItems => {\n      this.orderHistory = ordItems;\n\n      // Initialize initialInventory\n      const initialInventory: InventoryMap = {};\n      this.InventoryService.getInventory().subscribe((inventoryItems: InventoryItem[]) => {\n        inventoryItems.forEach((item: InventoryItem) => {\n          initialInventory[item.item_name] = item.item_quantity;\n        });\n\n        console.log(initialInventory); // Log the map of item counts\n      });\n\n      const startDate = new Date(start);\n      startDate.setUTCHours(0, 0, 0, 0);\n  \n      const endDate = new Date(end);\n      endDate.setUTCHours(23, 59, 59, 999);\n  \n      const itemsInRange = this.orderHistory.filter(order => {\n        const orderDate = new Date(order.order_timestamp);\n        return orderDate >= startDate && orderDate ();\n      itemsInRange.forEach(order => {\n      order.order_items.forEach((item: OrderItem) => {\n        //@ts-ignore\n        const ingredients = inventory_ingrident_map.get(item) || [];\n        ingredients.forEach(ingredient => {\n          const currentCount = ingredientCountMap.get(ingredient) || 0;\n          ingredientCountMap.set(ingredient, currentCount + 1);\n        });\n      });\n    });\n\n    console.log(\"Ingredient Usage Count:\", ingredientCountMap);\n      // console.log(\"passed sales\")\n      let excessIngredients: { excessIngredients: string }[] = [];\n      ingredientCountMap.forEach((count, ingredient) => {\n        //@ts-ignore\n        if(count  {\n      let formattedItem = item.replace(/_/g, ' ');\n  \n      formattedItem = formattedItem.replace(/\\w\\S*/g, (word) => {\n        return word.charAt(0).toUpperCase() + word.substr(1).toLowerCase();\n      });\n  \n      return formattedItem;\n    });\n  \n    return formatted.join(', ');\n  }\n  /**\n   * Takes a string of items formatted with _ for a space and fixes them\n   * @param ordItem \n   * @returns formatted string\n   */\n  //Same as above but for only one string\n  formatSingleUnderscore(ordItem: string): string {\n    let formattedItem = ordItem.replace(/_/g, ' ');\n  \n    formattedItem = formattedItem.replace(/\\w\\S*/g, (word) => {\n      return word.charAt(0).toUpperCase() + word.substr(1).toLowerCase();\n    });\n  \n    return formattedItem;\n  }\n  /**\n   * Takes a string of items formatted with camelCase and fixes them\n   * @param name \n   * @returns formatted string\n   */\n  // Fixes camelCase words (one string)\n  formatCamelCase(name: string): string {\n    return name.replace(/([A-Z])/g, ' $1').replace(/^./, function(str){ return str.toUpperCase(); });\n  }\n  /**\n   * Takes a string of items formatted with camelCase and fixes them\n   * @param names \n   * @returns formatted string\n   */\n  // Same as above but for array of strings\n  formatCamelCaseArray(names: string[]): string[] {\n    return names.map(name => {\n      return name.replace(/([A-Z])/g, ' $1').replace(/^./, function(str){ return str.toUpperCase(); }).split(',').join(', ');\n    });\n  }\n  \n  /**\n   * This function is called when the user clicks on the \"View Inventory\" button\n   */\n  tableConfig?: TableConfig;\n/**\n * This hold all of the possible table configs for the value\n */\n  menuTableConfig: TableConfig = {\n    columns: [\n      { key: 'menu_item_id', header: 'ID' },\n      { key: 'menu_item_name', header: 'Name' },\n      { key: 'menu_item_type', header: 'Type' },\n      { key: 'menu_item_price', header: 'Price' },\n      { key: 'ingredients', header: 'Ingredients' }\n    ]\n  };\n  /**\n   * This hold all of the possible table configs for the value\n   */\n  ingredientsTableConfig: TableConfig = {\n    columns: [\n      { key: 'ingredient_id', header: 'ID' },\n      { key: 'ingredient_name', header: 'Name' },\n      { key: 'ingredient_quantity', header: 'Quantity' }\n    ]\n  };\n/**\n * This hold all of the possible table configs for the value\n */\n  inventoryTableConfig: TableConfig = {\n    columns: [\n      { key: 'item_id', header: 'ID' },\n      { key: 'item_name', header: 'Name' },\n      { key: 'item_quantity', header: 'Quantity' }\n    ]\n  };\n/**\n * This hold all of the possible table configs for the value\n */\n  restockReport: TableConfig = {\n    columns: [\n      { key: 'item_name', header: 'Name' },\n      { key: 'item_quantity', header: 'Current Quantity' },\n      { key: 'item_quantity_to_order', header: 'Amount to Order' }\n    ]\n  };\n/**\n * This hold all of the possible table configs for the value\n */\n  salesReport: TableConfig = {\n    columns: [\n      { key: 'order_timestamp', header: 'Date' },\n      { key: 'order_total', header: 'Price' },\n      { key: 'order_items', header: 'Items Ordered' }\n    ]\n  };\n/**\n * This hold all of the possible table configs for the value\n */\n  excessReport: TableConfig = {\n    columns: [\n      { key: 'excessIngredients',  header: 'Excess Item' }\n    ]\n  };\n  /**\n   * This hold all of the possible table configs for the value\n   * @param type \n   */\n  openPopup(type: string) {\n    this.showPopup = true;\n    switch (type) {\n      case 'menu':\n        this.popupTitle = 'Edit Menu';\n        this.tableConfig = this.menuTableConfig;\n        this.refreshMenu();\n        break;\n      case 'ingredients':\n        this.popupTitle = 'Edit Ingredients';\n        this.tableConfig = this.ingredientsTableConfig;\n        this.refreshIngredients();\n        break;\n      case 'inventory':\n        this.popupTitle = 'Edit Inventory';\n        this.tableConfig = this.inventoryTableConfig;\n        this.refreshInventory();\n        break;\n      }\n  }\n\n  // ACTION BUTTONS\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  showEditPopup: boolean = false;\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  selectedItem: any = null;\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  currentAction: 'edit' | 'delete' | 'add' | null = null;\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   * @param item \n   */\n  editRow(item: any): void {\n    console.log('Editing item, opening edit popup', item);\n    this.currentAction = 'edit';\n    this.selectedItem = item;\n    if (this.popupTitle === 'Edit Menu') {\n      this.editType = 'menu';\n    } else if (this.popupTitle === 'Edit Ingredients') {\n      this.editType = 'ingredients';\n    } else if (this.popupTitle === 'Edit Inventory') {\n      this.editType = 'inventory';\n    }\n    if (this.editType === 'menu') {\n      this.popupTitle = 'Edit Menu';\n    } else if (this.editType === 'ingredients') {\n      this.popupTitle = 'Edit Ingredients';\n    } else if (this.editType === 'inventory') {\n      this.popupTitle = 'Edit Inventory';\n    }\n    this.showPopup = false;\n    this.showEditPopup = true;\n  }  \n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   * @param item \n   */\n  deleteRow(item: any): void {\n    console.log('Deleting item:', item);\n    if (this.editType === 'menu') {\n      this.popupTitle = 'Edit Menu';\n    } else if (this.editType === 'ingredients') {\n      this.popupTitle = 'Edit Ingredients';\n    } else if (this.editType === 'inventory') {\n      this.popupTitle = 'Edit Inventory';\n    }\n    this.currentAction = 'delete';\n    this.selectedItem = item;\n    this.showConfirmationPopup = true;\n    this.showPopup = false;\n  }\n\n  // EDIT CONFIRMATIONS\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  onEditCancel(): void {\n    this.selectedItem = null;\n    this.showEditPopup = false;\n    this.showPopup = true; // Reopen the main popup if needed\n  }\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   * @param editedItem \n   */\n  onItemSave(editedItem: any): void {\n    // Process the edited item\n    if (this.popupTitle === 'Edit Menu') {\n      this.refreshMenu();\n    } else if (this.popupTitle === 'Edit Ingredients') {\n      this.refreshIngredients();\n    } else if (this.popupTitle === 'Edit Inventory') {\n      this.refreshInventory();\n    }\n    this.selectedItem = editedItem;\n    this.showEditPopup = false;\n    this.showConfirmationPopup = true;\n  }  \n\n  // CONFIRMATION POPUP\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  showConfirmationPopup: boolean = false;\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  editType: 'menu' | 'ingredients' | 'inventory' | null = null;\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   * @param item \n   */\n  onItemConfirm(item: any): void {\n    this.selectedItem = item;\n    this.showConfirmationPopup = false;\n    if (this.popupTitle === 'Edit Menu') {\n      if (this.currentAction === 'edit') {\n        this.MenuService.editMenuItem(item.menu_item_id, item).subscribe(() => {\n          this.refreshMenu();\n        });\n      } else if (this.currentAction === 'delete') {\n        console.log('Deleting menu item', item);\n        this.MenuService.deleteMenuItem(item.menu_item_id).subscribe(() => {\n          this.refreshMenu();\n        });\n      }\n    } else if (this.popupTitle === 'Edit Ingredients') {\n      if (this.currentAction === 'edit') {\n        this.IngredientsService.editIngredient(item.ingredient_id, item).subscribe(() => {\n          this.refreshIngredients();\n        });\n      } else if (this.currentAction === 'delete') {\n        this.IngredientsService.deleteIngredient(item.ingredient_id).subscribe(() => {\n          this.refreshIngredients();\n        });\n      }\n    } else if (this.popupTitle === 'Edit Inventory') {\n      if (this.currentAction === 'edit') {\n        this.InventoryService.editInventoryItem(item.item_id, item).subscribe(() => {\n          this.refreshInventory();\n        });\n      } else if (this.currentAction === 'delete') {\n        this.InventoryService.deleteInventoryItem(item.item_id).subscribe(() => {\n          this.refreshInventory();\n        });\n      }\n    } else if (this.popupTitle === 'Quick Add') {\n      if (this.editType === 'menu') {\n        this.MenuService.addMenuItem(item).subscribe(() => {\n          this.refreshMenu();\n        });\n        console.log('Adding menu item', item.menu_item_name);\n      } else if (this.editType === 'ingredients') {\n        this.IngredientsService.addIngredient(item).subscribe(() => {\n          this.refreshIngredients();\n        });\n      } else if (this.editType === 'inventory') {\n        this.InventoryService.addInventoryItem(item).subscribe(() => {\n          this.refreshInventory();\n        });\n      }\n    }\n    this.showPopup = true;\n    if (this.popupTitle === 'Add Seasonal Item') {\n      this.MenuService.addMenuItem(item).subscribe(() => {\n        this.refreshMenu();\n      });\n      this.showPopup = false;\n    }\n  }\n/**\n * This function is called when the user clicks on the \"Add\" button\n */\n  onItemDecline(): void {\n    this.showConfirmationPopup = false;\n    if (this.popupTitle === 'Edit Menu') {\n      this.showPopup = true;\n    } else if (this.popupTitle === 'Edit Ingredients') {\n      this.showPopup = true;\n    } else if (this.popupTitle === 'Edit Inventory') {\n      this.showPopup = true;\n    } else if (this.popupTitle === 'Quick Add') {\n      this.showQuickAddPopup = true;\n    } else if (this.popupTitle === 'Add Seasonal Item') {\n      this.showSeasonalItemPopup = true;\n    }\n  }\n\n  // QUICK ADD POPUP\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  showQuickAddPopup: boolean = false;\n/**\n *  This function is called when the user clicks on the \"Add\" button\n * @param type \n */\n  quickAdd(type: string): void {\n    if (this.popupTitle === 'Edit Menu') {\n      this.editType = 'menu';\n    } else if (this.popupTitle === 'Edit Ingredients') {\n      this.editType = 'ingredients';\n    } else if (this.popupTitle === 'Edit Inventory') {\n      this.editType = 'inventory';\n    }\n    this.popupTitle = 'Quick Add';\n    console.log('Quick add');\n    this.showPopup = false;\n    this.showQuickAddPopup = true;\n  }\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  onQuickAddCancel(): void {\n    this.showQuickAddPopup = false;\n    this.showPopup = true;\n  }\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   * @param newItem \n   */\n  onItemAdd(newItem: any): void {\n    // Process the new item\n    this.currentAction = 'add';\n    if (this.popupTitle === 'Edit Menu') {\n      this.refreshMenu();\n    } else if (this.popupTitle === 'Edit Ingredients') {\n      this.refreshIngredients();\n    } else if (this.popupTitle === 'Edit Inventory') {\n      this.refreshInventory();\n    }\n    this.selectedItem = newItem;\n    this.showQuickAddPopup = false;\n    this.showConfirmationPopup = true;\n  }\n\n  // SEAOSONAL ITEM POPUP\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  showSeasonalItemPopup: boolean = false;\n/**\n * This function is called when the user clicks on the \"Add\" button\n * @param type \n */\n  seasonalItem(type: string): void {\n    this.popupTitle = 'Add Seasonal Item';\n    this.currentAction = 'add';\n    console.log('Seasonal item');\n    this.showSeasonalItemPopup = true;\n  }\n/**\n * This function is called when the user clicks on the \"Add\" button\n */\n  onSeasonalItemCancel(): void {\n    this.showSeasonalItemPopup = false;\n  }\n/**\n * This function is called when the user clicks on the \"Add\" button\n * @param newItem \n */\n  seasonalItemAdd(newItem: any): void {\n    this.selectedItem = newItem;\n    this.showSeasonalItemPopup = false;\n    this.showConfirmationPopup = true;\n  }\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   * @param type \n   * @param start \n   * @param end \n   */\n  // OTHER\n  reportPopup(type: string, start?: string, end?: string) {\n    this.showRestockReportPopup = true;\n    switch (type) {\n      case 'restock': \n        this.popupTitle = 'Restock Report';\n        this.tableConfig = this.restockReport;\n        this.getLowStock();\n        break;\n      case 'sales': \n        if (!start) {\n          start = \"2023-01-01\";\n        }\n        if (!end) {\n          end = \"2023-03-01\";\n        }\n        this.popupTitle = 'Sales Report';\n        this.tableConfig = this.salesReport;\n        this.refreshSales(start, end);\n        break;\n      case 'excess':\n        this.popupTitle = 'Excess Report';\n        this.tableConfig = this.excessReport;\n        if (!start) {\n          start = \"2023-01-01\";\n        }\n        if (!end) {\n          end = \"2023-03-01\";\n        }\n        this.getExcess(start, end);\n        break;\n      }\n  }\n\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  clickSalesReport() {\n    // Do something cool\n    console.log('clickSalesReport()');\n  }\n  /**\n   *  This function is called when the user clicks on the \"Add\" button\n   */\n  clickExcessReport() {\n    // Do something cool\n    console.log('clickExcessReport()');\n  }\n  /**\n   *  This function is called when the user clicks on the \"Add\" button\n   */\n  clickRestockReport() {\n    // Do something cool\n    console.log('clickStockReport()');\n  }\n  /**\n   *  This function is called when the user clicks on the \"Add\" button\n   */\n  clickPPReport() {\n    // Do something cool\n    console.log('clickPPReport()');\n  }\n  /**\n   *  This function is called when the user clicks on the \"Add\" button\n   */\n  clickIPReport() {\n    // Do something cool\n    console.log('clickIPReport()');\n  }\n}\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InventoryService.html":{"url":"injectables/InventoryService.html","title":"injectable - InventoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InventoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/inventory.service.ts\n        \n\n\n            \n                Description\n            \n            \n                InventoryService handles operations related to inventory management, including fetching, adding, editing, and deleting inventory items.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addInventoryItem\n                            \n                            \n                                deleteInventoryItem\n                            \n                            \n                                editInventoryItem\n                            \n                            \n                                getInventory\n                            \n                            \n                                getItemById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/inventory.service.ts:15\n                            \n                        \n\n                \n                    \n                            Constructor for InventoryService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The HttpClient module to make HTTP requests.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addInventoryItem\n                        \n                    \n                \n            \n            \n                \naddInventoryItem(inventoryItem: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/inventory.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Method to add inventory item.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                inventoryItem\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable of type any.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteInventoryItem\n                        \n                    \n                \n            \n            \n                \ndeleteInventoryItem(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/inventory.service.ts:35\n                        \n                    \n\n\n            \n                \n                        Method to delete inventory item.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable of type any.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editInventoryItem\n                        \n                    \n                \n            \n            \n                \neditInventoryItem(id: number, inventoryItem: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/inventory.service.ts:44\n                        \n                    \n\n\n            \n                \n                        Method to edit inventory item.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                inventoryItem\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable of type any.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInventory\n                        \n                    \n                \n            \n            \n                \ngetInventory()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/inventory.service.ts:27\n                        \n                    \n\n\n            \n                \n                        Method to get inventory.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable of type any.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItemById\n                        \n                    \n                \n            \n            \n                \ngetItemById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/inventory.service.ts:60\n                        \n                    \n\n\n            \n                \n                        Method to get item by id.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable of type any.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.apiUrl}/inventory`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/inventory.service.ts:15\n                        \n                    \n\n            \n                \n                    The base URL for the inventory API.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n/**\n * `InventoryService` handles operations related to inventory management, including fetching, adding, editing, and deleting inventory items.\n */\n@Injectable({ providedIn: 'root' })\nexport class InventoryService {\n  /**\n   * The base URL for the inventory API.\n   */\n  private baseUrl = `${environment.apiUrl}/inventory`;\n  /**\n   * Constructor for `InventoryService`.\n   * @param http The HttpClient module to make HTTP requests.\n   */\n  constructor(private http: HttpClient) {}\n\n  // Methods for getInventory, deleteInventoryItem, editInventoryItem, addInventoryItem, getItemById\n/**\n * Method to get inventory.\n * @returns Observable of type any.\n */\n  getInventory(): Observable {\n    return this.http.get(this.baseUrl);\n  }\n/**\n * Method to delete inventory item.\n * @param id \n * @returns Observable of type any.\n */\n  deleteInventoryItem(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}/${id}`);\n  }\n/**\n * Method to edit inventory item.\n * @param id \n * @param inventoryItem \n * @returns Observable of type any.\n */\n  editInventoryItem(id: number, inventoryItem: any): Observable {\n    return this.http.put(`${this.baseUrl}/${id}`, inventoryItem);\n  }\n/**\n * Method to add inventory item.\n * @param inventoryItem \n * @returns Observable of type any.\n */\n  addInventoryItem(inventoryItem: any): Observable {\n    return this.http.post(`${this.baseUrl}`, inventoryItem);\n  }\n/**\n * Method to get item by id.\n * @param id \n * @returns Observable of type any.\n */\n  getItemById(id: number): Observable {\n    return this.http.get(`${this.baseUrl}/${id}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LearnMoreComponent.html":{"url":"components/LearnMoreComponent.html","title":"component - LearnMoreComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LearnMoreComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/learn-more/learn-more.component.ts\n\n\n\n    \n        Description\n    \n    \n        LearnMoreComponent provides a view for users to access additional information about the application or service.\nThis component typically includes detailed descriptions, features, and other relevant content to help users understand more about what is offered.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-learn-more\n            \n\n\n\n            \n                styleUrls\n                ./learn-more.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./learn-more.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * `LearnMoreComponent` provides a view for users to access additional information about the application or service.\n * This component typically includes detailed descriptions, features, and other relevant content to help users understand more about what is offered.\n *\n * @Component Decorator that marks the class as an Angular component, specifying the metadata like the selector, template, and styles.\n */\n@Component({\n  selector: 'app-learn-more',\n  templateUrl: './learn-more.component.html',\n  styleUrls: ['./learn-more.component.scss']\n})\nexport class LearnMoreComponent {\n  // The component can include specific methods, properties, and lifecycle hooks as needed.\n}\n\n    \n\n    \n        \n    About Us\n    Our vision is to leave you with an appetite that is satiated whether you've had our thirst-quenching bubble tea or our savory Bánh Mì.\n    \n    \n\n    Try our Sister store Nam Cafe for Delicious Authentic Vietnamese Food! \n    Towerpoint and Northgate Locations now accepting online orders! \n    \n    \n    www.namcafetx.com\n    \n    \n    \n    \n    \n    \n        \n            \n        \n        \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./learn-more.component.scss\n                \n                .about-us-container {\n    padding: 6rem 3rem;\n}\n\n.about-us-socials-container {\n    display: flex;\n    padding-top: 1rem;\n    flex-direction: row;\n}\n\n.social-btn {\n    margin-right: 20px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    About Us    Our vision is to leave you with an appetite that is satiated whether you\\'ve had our thirst-quenching bubble tea or our savory Bánh Mì.            Try our Sister store Nam Cafe for Delicious Authentic Vietnamese Food!     Towerpoint and Northgate Locations now accepting online orders!             www.namcafetx.com                                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'app-authentication-button'},{'name': 'CartModalComponent', 'selector': 'app-cart-modal'},{'name': 'CashierViewComponent', 'selector': 'app-cashier-view'},{'name': 'CheckoutPopupComponent', 'selector': 'app-checkout-popup'},{'name': 'ConfirmationPopupComponent', 'selector': 'app-confirmation-popup'},{'name': 'ContactUsComponent', 'selector': 'app-contact-us'},{'name': 'CustomerViewComponent', 'selector': 'app-customer-view'},{'name': 'EditItemPopupComponent', 'selector': 'app-edit-item-popup'},{'name': 'EmployeeCreationsMenuComponent', 'selector': 'app-employee-creations-menu'},{'name': 'GetRoleComponent', 'selector': 'app-get-role'},{'name': 'LearnMoreComponent', 'selector': 'app-learn-more'},{'name': 'LoginButtonComponent', 'selector': 'app-login-button'},{'name': 'LogoutButtonComponent', 'selector': 'app-logout-button'},{'name': 'ManagerPopupComponent', 'selector': 'app-manager-popup'},{'name': 'ManagerViewComponent', 'selector': 'app-manager-view'},{'name': 'MenuItemComponent', 'selector': 'app-menu-item'},{'name': 'MenuViewComponent', 'selector': 'app-menu-view'},{'name': 'MilkTeaMenuComponent', 'selector': 'app-milk-tea-menu'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuickAddPopupComponent', 'selector': 'app-quick-add-popup'},{'name': 'RestockReportPopupComponent', 'selector': 'app-restock-report-popup'},{'name': 'SeasonalItemPopupComponent', 'selector': 'app-seasonal-item-popup'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'SignatureMilkTeaMenuComponent', 'selector': 'app-signature-milk-tea-menu'},{'name': 'SignupButtonComponent', 'selector': 'app-signup-button'},{'name': 'SlushMenuComponent', 'selector': 'app-slush-menu'},{'name': 'SmoothieMenuComponent', 'selector': 'app-smoothie-menu'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LearnMoreComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginButtonComponent.html":{"url":"components/LoginButtonComponent.html","title":"component - LoginButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login-button/login-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        LoginButtonComponent serves as a user interface component that triggers the authentication process.\nIt uses the AuthService from Auth0 to initiate a login flow which redirects the user to the Auth0 hosted login page.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-button\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./login-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loginWithRedirect\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login-button/login-button.component.ts:15\n                            \n                        \n\n                \n                    \n                            The constructor for LoginButtonComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The injected AuthService from Auth0 that provides authentication functionality.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loginWithRedirect\n                        \n                    \n                \n            \n            \n                \nloginWithRedirect()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login-button/login-button.component.ts:34\n                        \n                    \n\n\n            \n                \n                        Calls the loginWithRedirect method from Auth0's AuthService to start the login process.\nThis method redirects the user to the Auth0 Universal Login page.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login-button/login-button.component.ts:26\n                        \n                    \n\n\n            \n                \n                        OnInit lifecycle hook that is called after Angular has initialized all data-bound properties of a directive.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login-button/login-button.component.ts:21\n                        \n                    \n\n            \n                \n                    The injected `AuthService` from Auth0 that provides authentication functionality.\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '@auth0/auth0-angular';\n\n/**\n * `LoginButtonComponent` serves as a user interface component that triggers the authentication process.\n * It uses the `AuthService` from Auth0 to initiate a login flow which redirects the user to the Auth0 hosted login page.\n *\n * @Component Decorator that marks a class as an Angular component, specifies metadata about the component including its selector, template, and styles.\n */\n@Component({\n  selector: 'app-login-button',\n  templateUrl: './login-button.component.html',\n  styles: []\n})\nexport class LoginButtonComponent implements OnInit {\n  /**\n   * The constructor for `LoginButtonComponent`.\n   * \n   * @param auth The injected `AuthService` from Auth0 that provides authentication functionality.\n   */\n  constructor(public auth: AuthService) {}\n\n  /**\n   * OnInit lifecycle hook that is called after Angular has initialized all data-bound properties of a directive.\n   */\n  ngOnInit(): void {\n    // Lifecycle hook implementation goes here\n  }\n\n  /**\n   * Calls the `loginWithRedirect` method from Auth0's `AuthService` to start the login process.\n   * This method redirects the user to the Auth0 Universal Login page.\n   */\n  loginWithRedirect(): void {\n    this.auth.loginWithRedirect();\n  }\n}\n\n    \n\n    \n        \n    Log in\n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Log in  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'app-authentication-button'},{'name': 'CartModalComponent', 'selector': 'app-cart-modal'},{'name': 'CashierViewComponent', 'selector': 'app-cashier-view'},{'name': 'CheckoutPopupComponent', 'selector': 'app-checkout-popup'},{'name': 'ConfirmationPopupComponent', 'selector': 'app-confirmation-popup'},{'name': 'ContactUsComponent', 'selector': 'app-contact-us'},{'name': 'CustomerViewComponent', 'selector': 'app-customer-view'},{'name': 'EditItemPopupComponent', 'selector': 'app-edit-item-popup'},{'name': 'EmployeeCreationsMenuComponent', 'selector': 'app-employee-creations-menu'},{'name': 'GetRoleComponent', 'selector': 'app-get-role'},{'name': 'LearnMoreComponent', 'selector': 'app-learn-more'},{'name': 'LoginButtonComponent', 'selector': 'app-login-button'},{'name': 'LogoutButtonComponent', 'selector': 'app-logout-button'},{'name': 'ManagerPopupComponent', 'selector': 'app-manager-popup'},{'name': 'ManagerViewComponent', 'selector': 'app-manager-view'},{'name': 'MenuItemComponent', 'selector': 'app-menu-item'},{'name': 'MenuViewComponent', 'selector': 'app-menu-view'},{'name': 'MilkTeaMenuComponent', 'selector': 'app-milk-tea-menu'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuickAddPopupComponent', 'selector': 'app-quick-add-popup'},{'name': 'RestockReportPopupComponent', 'selector': 'app-restock-report-popup'},{'name': 'SeasonalItemPopupComponent', 'selector': 'app-seasonal-item-popup'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'SignatureMilkTeaMenuComponent', 'selector': 'app-signature-milk-tea-menu'},{'name': 'SignupButtonComponent', 'selector': 'app-signup-button'},{'name': 'SlushMenuComponent', 'selector': 'app-slush-menu'},{'name': 'SmoothieMenuComponent', 'selector': 'app-smoothie-menu'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogoutButtonComponent.html":{"url":"components/LogoutButtonComponent.html","title":"component - LogoutButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LogoutButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/logout-button/logout-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        LogoutButtonComponent is a user interface component that allows users to sign out of the application.\nIt utilizes the AuthService from Auth0 to perform the logout operation, which will redirect the user\nto a specified route after successfully logging out.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-logout-button\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./logout-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, doc: Document)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/logout-button/logout-button.component.ts:17\n                            \n                        \n\n                \n                    \n                            Constructs the LogoutButtonComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The injected AuthService from Auth0 that handles the authentication operations.\n\n                                                        \n                                                \n                                                \n                                                        doc\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A reference to the document object, injected using the DOCUMENT token from Angular's common package.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/logout-button/logout-button.component.ts:40\n                        \n                    \n\n\n            \n                \n                        Initiates the logout process using Auth0's AuthService.\nUpon calling logout, the user is redirected to the origin of the application, effectively logging them out.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/logout-button/logout-button.component.ts:32\n                        \n                    \n\n\n            \n                \n                        OnInit lifecycle hook that is called after Angular has initialized all data-bound properties of a directive.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/logout-button/logout-button.component.ts:25\n                        \n                    \n\n            \n                \n                    The injected `AuthService` from Auth0 that handles the authentication operations.\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { AuthService } from '@auth0/auth0-angular';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * `LogoutButtonComponent` is a user interface component that allows users to sign out of the application.\n * It utilizes the `AuthService` from Auth0 to perform the logout operation, which will redirect the user\n * to a specified route after successfully logging out.\n *\n * @Component Decorator that marks a class as an Angular component, specifying the selector, template, and styles.\n */\n@Component({\n  selector: 'app-logout-button',\n  templateUrl: './logout-button.component.html',\n  styles: []\n})\nexport class LogoutButtonComponent implements OnInit {\n  /**\n   * Constructs the `LogoutButtonComponent`.\n   *\n   * @param auth The injected `AuthService` from Auth0 that handles the authentication operations.\n   * @param doc A reference to the document object, injected using the `DOCUMENT` token from Angular's common package.\n   */\n  constructor(\n    public auth: AuthService,\n    @Inject(DOCUMENT) private doc: Document,\n  ) {}\n\n  /**\n   * OnInit lifecycle hook that is called after Angular has initialized all data-bound properties of a directive.\n   */\n  ngOnInit(): void {\n    // Lifecycle hook implementation goes here.\n  }\n\n  /**\n   * Initiates the logout process using Auth0's `AuthService`.\n   * Upon calling `logout`, the user is redirected to the origin of the application, effectively logging them out.\n   */\n  logout(): void {\n    this.auth.logout({ returnTo: this.doc.location.origin });\n  }\n}\n\n    \n\n    \n        Log out\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Log out'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'app-authentication-button'},{'name': 'CartModalComponent', 'selector': 'app-cart-modal'},{'name': 'CashierViewComponent', 'selector': 'app-cashier-view'},{'name': 'CheckoutPopupComponent', 'selector': 'app-checkout-popup'},{'name': 'ConfirmationPopupComponent', 'selector': 'app-confirmation-popup'},{'name': 'ContactUsComponent', 'selector': 'app-contact-us'},{'name': 'CustomerViewComponent', 'selector': 'app-customer-view'},{'name': 'EditItemPopupComponent', 'selector': 'app-edit-item-popup'},{'name': 'EmployeeCreationsMenuComponent', 'selector': 'app-employee-creations-menu'},{'name': 'GetRoleComponent', 'selector': 'app-get-role'},{'name': 'LearnMoreComponent', 'selector': 'app-learn-more'},{'name': 'LoginButtonComponent', 'selector': 'app-login-button'},{'name': 'LogoutButtonComponent', 'selector': 'app-logout-button'},{'name': 'ManagerPopupComponent', 'selector': 'app-manager-popup'},{'name': 'ManagerViewComponent', 'selector': 'app-manager-view'},{'name': 'MenuItemComponent', 'selector': 'app-menu-item'},{'name': 'MenuViewComponent', 'selector': 'app-menu-view'},{'name': 'MilkTeaMenuComponent', 'selector': 'app-milk-tea-menu'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuickAddPopupComponent', 'selector': 'app-quick-add-popup'},{'name': 'RestockReportPopupComponent', 'selector': 'app-restock-report-popup'},{'name': 'SeasonalItemPopupComponent', 'selector': 'app-seasonal-item-popup'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'SignatureMilkTeaMenuComponent', 'selector': 'app-signature-milk-tea-menu'},{'name': 'SignupButtonComponent', 'selector': 'app-signup-button'},{'name': 'SlushMenuComponent', 'selector': 'app-slush-menu'},{'name': 'SmoothieMenuComponent', 'selector': 'app-smoothie-menu'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LogoutButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MagnifierService.html":{"url":"injectables/MagnifierService.html","title":"injectable - MagnifierService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MagnifierService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/Magnifier.service.ts\n        \n\n\n            \n                Description\n            \n            \n                MagnifierService manages the state of a magnifier feature in the application.\nIt allows toggling the magnifier on and off and provides access to its current state.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                magnifierState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMagnifierState\n                            \n                            \n                                toggleMagnifier\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMagnifierState\n                        \n                    \n                \n            \n            \n                \ngetMagnifierState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/Magnifier.service.ts:27\n                        \n                    \n\n\n            \n                \n                        Returns an observable for the current state of the magnifier.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMagnifier\n                        \n                    \n                \n            \n            \n                \ntoggleMagnifier()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/Magnifier.service.ts:20\n                        \n                    \n\n\n            \n                \n                        Toggles the magnifier's state between on and off.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        magnifierState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/Magnifier.service.ts:15\n                        \n                    \n\n            \n                \n                    The current state of the magnifier.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * `MagnifierService` manages the state of a magnifier feature in the application.\n * It allows toggling the magnifier on and off and provides access to its current state.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MagnifierService {\n  /**\n   * The current state of the magnifier.\n   */\n  private magnifierState = new BehaviorSubject(false);\n\n  /**\n   * Toggles the magnifier's state between on and off.\n   */\n  toggleMagnifier(): void {\n    this.magnifierState.next(!this.magnifierState.value);\n  }\n\n  /**\n   * Returns an observable for the current state of the magnifier.\n   */\n  getMagnifierState() {\n    return this.magnifierState.asObservable();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManagerPopupComponent.html":{"url":"components/ManagerPopupComponent.html","title":"component - ManagerPopupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ManagerPopupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/manager-view/manager-popup/manager-popup.component.ts\n\n\n\n    \n        Description\n    \n    \n        ManagerPopupComponent is a reusable UI component designed for displaying and managing tabular data in a popup modal.\nIt provides functionalities like edit, delete, and quick add operations for each row in the table.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-manager-popup\n            \n\n\n\n            \n                styleUrls\n                ./manager-popup.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./manager-popup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closePopup\n                            \n                            \n                                deleteRow\n                            \n                            \n                                editRow\n                            \n                            \n                                quickAdd\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                tableConfig\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                delete\n                            \n                            \n                                edit\n                            \n                            \n                                quick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/manager-view/manager-popup/manager-popup.component.ts:52\n                            \n                        \n                \n                    \n                        The content to be displayed within the table.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tableConfig\n                    \n                \n                \n                    \n                        Type :         TableConfig\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/manager-view/manager-popup/manager-popup.component.ts:47\n                            \n                        \n                \n                    \n                        The configuration for the table, including the columns to display.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/manager-view/manager-popup/manager-popup.component.ts:42\n                            \n                        \n                \n                    \n                        The title of the popup, typically describing the table content or action.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/manager-view/manager-popup/manager-popup.component.ts:57\n                            \n                        \n                \n                    \n                        Event emitter to notify the parent component to close the popup.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        delete\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/manager-view/manager-popup/manager-popup.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        edit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/manager-view/manager-popup/manager-popup.component.ts:62\n                            \n                        \n                \n                    \n                        Event emitters for table row actions.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        quick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/manager-view/manager-popup/manager-popup.component.ts:64\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closePopup\n                        \n                    \n                \n            \n            \n                \nclosePopup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/manager-view/manager-popup/manager-popup.component.ts:96\n                        \n                    \n\n\n            \n                \n                        Emits an event to close the popup.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteRow\n                        \n                    \n                \n            \n            \n                \ndeleteRow(row: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/manager-view/manager-popup/manager-popup.component.ts:81\n                        \n                    \n\n\n            \n                \n                        Handles the delete action for a row in the table.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                row\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The data row to be deleted.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editRow\n                        \n                    \n                \n            \n            \n                \neditRow(row: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/manager-view/manager-popup/manager-popup.component.ts:71\n                        \n                    \n\n\n            \n                \n                        Handles the edit action for a row in the table.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                row\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The data row to be edited.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quickAdd\n                        \n                    \n                \n            \n            \n                \nquickAdd()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/manager-view/manager-popup/manager-popup.component.ts:89\n                        \n                    \n\n\n            \n                \n                        Emits an event for a quick add action.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n/**\n * Represents the structure of a table column.\n */\ninterface TableColumn {\n  /**\n   * The key of the column.\n   */\n  key: string;\n  /**\n   * The header of the column.\n   */\n  header: string;\n}\n\n/**\n * Represents the configuration object for table columns in the manager's popup.\n */\ninterface TableConfig {\n  /**\n   * The columns of the table.\n   */\n  columns: TableColumn[];\n}\n\n/**\n * `ManagerPopupComponent` is a reusable UI component designed for displaying and managing tabular data in a popup modal.\n * It provides functionalities like edit, delete, and quick add operations for each row in the table.\n *\n * @Component Decorator that marks the class as an Angular component and provides metadata about the component.\n */\n@Component({\n  selector: 'app-manager-popup',\n  templateUrl: './manager-popup.component.html',\n  styleUrls: ['./manager-popup.component.scss']\n})\nexport class ManagerPopupComponent {\n  /**\n   * The title of the popup, typically describing the table content or action.\n   */\n  @Input() title: string = '';\n\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  @Input() tableConfig?: TableConfig;\n\n  /**\n   * The content to be displayed within the table.\n   */\n  @Input() content: any[] = [];\n\n  /**\n   * Event emitter to notify the parent component to close the popup.\n   */\n  @Output() close = new EventEmitter();\n\n  /**\n   * Event emitters for table row actions.\n   */\n  @Output() edit = new EventEmitter();\n  @Output() delete = new EventEmitter();\n  @Output() quick = new EventEmitter();\n\n  /**\n   * Handles the edit action for a row in the table.\n   *\n   * @param row The data row to be edited.\n   */\n  editRow(row: any): void {\n    console.log('Editing row:', row);\n    this.edit.emit(row);\n  }\n\n  /**\n   * Handles the delete action for a row in the table.\n   *\n   * @param row The data row to be deleted.\n   */\n  deleteRow(row: any): void {\n    console.log('Deleting row:', row);\n    this.delete.emit(row);\n  }\n\n  /**\n   * Emits an event for a quick add action.\n   */\n  quickAdd(): void {\n    this.quick.emit();\n  }\n\n  /**\n   * Emits an event to close the popup.\n   */\n  closePopup(): void {\n    this.close.emit();\n  }\n}\n\n    \n\n    \n        \n  &times; -->\n  \n    Quick Add\n    Exit\n  \n  \n      \n          \n            {{ title }}\n          \n          \n              \n                \n                  \n                    {{ col.header }}\n                    Actions\n                  \n                \n                \n                  \n                    \n                      {{ row[col.key] }}\n                    \n                    \n                      Edit \n                      Delete\n                    \n                  \n                \n              \n          \n          \n            No data to display.\n          \n      \n  \n\n\n    \n\n    \n                \n                    ./manager-popup.component.scss\n                \n                .backdrop {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n    z-index: 1050;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    // padding-top: 10vh;\n}\n  \n.popup {\n    background-color: white;\n    padding: 20px;\n    border-radius: 5px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    position: relative;\n    z-index: 1051;\n    max-height: 80vh;\n    overflow-y: auto; /* Makes content scrollable */\n    width: 80%;\n    position: relative;\n}\n\ntable {\n    width: 100%;\n    border-collapse: separate;\n}\n\nth, td {\n    border: 1px solid #ddd;\n    padding: 8px;\n    text-align: left;\n    font-size: 20px;\n}\n\nth {\n    background-color: #f2f2f2;\n}\n\n.close {\n    position: fixed;\n    top: 10px;\n    right: 10px;\n    cursor: pointer;\n    font-size: 100px;\n    font-weight: bold;\n    z-index: 1100;\n    color: white;\n  }\n  \n.close:hover {\n    color: red;\n}\n\ninput:disabled {\n    background-color: #f3f3f3;\n}\n\n.actionButtons {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.delete {\n    border-color: rgb(255, 100, 100, 0.75);\n    width: 100%;\n    background-color: white;\n}\n\n.delete:hover {\n    background-color: rgb(255, 100, 100, 0.75);\n}\n\n.edit {\n    border-color: rgb(100, 100, 255, 0.75);\n    width: 100%;\n    background-color: white;\n}\n\n.edit:hover {\n    background-color: rgb(100, 100, 255, 0.75);\n}\n\n.popupHeader {\n    display: flex;\n    justify-content: space-between;\n}\n\n.quickAdd {\n    border-color: rgb(100, 255, 100, 0.75);\n    background-color: white;\n}\n\n.quickAdd:hover {\n    background-color: rgb(100, 255, 100, 0.75);\n}\n\n.exit {\n    border-color: rgb(255, 100, 100, 0.75);\n    background-color: white;\n}\n\n.exit:hover {\n    background-color: rgb(255, 100, 100, 0.75);\n}\n\n.headerButtons {\n    display: flex;\n    justify-content: right;\n    gap: 5px;\n    padding-bottom: 5px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  × -->      Quick Add    Exit                                {{ title }}                                                                                        {{ col.header }}                    Actions                                                                                                              {{ row[col.key] }}                                                              Edit                       Delete                                                                                                    No data to display.                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'app-authentication-button'},{'name': 'CartModalComponent', 'selector': 'app-cart-modal'},{'name': 'CashierViewComponent', 'selector': 'app-cashier-view'},{'name': 'CheckoutPopupComponent', 'selector': 'app-checkout-popup'},{'name': 'ConfirmationPopupComponent', 'selector': 'app-confirmation-popup'},{'name': 'ContactUsComponent', 'selector': 'app-contact-us'},{'name': 'CustomerViewComponent', 'selector': 'app-customer-view'},{'name': 'EditItemPopupComponent', 'selector': 'app-edit-item-popup'},{'name': 'EmployeeCreationsMenuComponent', 'selector': 'app-employee-creations-menu'},{'name': 'GetRoleComponent', 'selector': 'app-get-role'},{'name': 'LearnMoreComponent', 'selector': 'app-learn-more'},{'name': 'LoginButtonComponent', 'selector': 'app-login-button'},{'name': 'LogoutButtonComponent', 'selector': 'app-logout-button'},{'name': 'ManagerPopupComponent', 'selector': 'app-manager-popup'},{'name': 'ManagerViewComponent', 'selector': 'app-manager-view'},{'name': 'MenuItemComponent', 'selector': 'app-menu-item'},{'name': 'MenuViewComponent', 'selector': 'app-menu-view'},{'name': 'MilkTeaMenuComponent', 'selector': 'app-milk-tea-menu'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuickAddPopupComponent', 'selector': 'app-quick-add-popup'},{'name': 'RestockReportPopupComponent', 'selector': 'app-restock-report-popup'},{'name': 'SeasonalItemPopupComponent', 'selector': 'app-seasonal-item-popup'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'SignatureMilkTeaMenuComponent', 'selector': 'app-signature-milk-tea-menu'},{'name': 'SignupButtonComponent', 'selector': 'app-signup-button'},{'name': 'SlushMenuComponent', 'selector': 'app-slush-menu'},{'name': 'SmoothieMenuComponent', 'selector': 'app-smoothie-menu'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManagerPopupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Menu.html":{"url":"classes/Menu.html","title":"class - Menu","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Menu\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/menu.ts\n        \n\n\n            \n                Description\n            \n            \n                Describes a menu item with properties such as ID, name, type, price, ingredients, image, and description.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                description\n                            \n                            \n                                    Optional\n                                image\n                            \n                            \n                                    Optional\n                                ingredients\n                            \n                            \n                                    Optional\n                                menu_item_id\n                            \n                            \n                                    Optional\n                                menu_item_name\n                            \n                            \n                                    Optional\n                                menu_item_price\n                            \n                            \n                                    Optional\n                                menu_item_type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/menu.ts:32\n                        \n                    \n\n            \n                \n                    The toppings of the menu item.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/menu.ts:28\n                        \n                    \n\n            \n                \n                    The image of the menu item.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ingredients\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/menu.ts:24\n                        \n                    \n\n            \n                \n                    The ingredients of the menu item.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        menu_item_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/menu.ts:8\n                        \n                    \n\n            \n                \n                    The id of the menu item.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        menu_item_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/menu.ts:12\n                        \n                    \n\n            \n                \n                    The name of the menu item.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        menu_item_price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/menu.ts:20\n                        \n                    \n\n            \n                \n                    The price of the menu item.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        menu_item_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/menu.ts:16\n                        \n                    \n\n            \n                \n                    The type of the menu item.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Menu {\n    /**\n     * The id of the menu item.\n     */\n    menu_item_id?: number;\n    /**\n     * The name of the menu item.\n     */\n    menu_item_name?: string;\n    /**\n     * The type of the menu item.\n     */\n    menu_item_type?: string;\n    /**\n     * The price of the menu item.\n     */\n    menu_item_price?: number;\n    /**\n     * The ingredients of the menu item.\n     */\n    ingredients?: string[];\n    /**\n     * The image of the menu item.\n     */\n    image?: string;\n    /**\n     * The toppings of the menu item.\n     */\n    description?: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItem.html":{"url":"interfaces/MenuItem.html","title":"interface - MenuItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/employee-creations-menu/employee-creations-menu.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for a menu item.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            added_toppings\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            ingredients\n                                        \n                                \n                                \n                                        \n                                            menu_item_id\n                                        \n                                \n                                \n                                        \n                                            menu_item_name\n                                        \n                                \n                                \n                                        \n                                            menu_item_price\n                                        \n                                \n                                \n                                        \n                                            menu_item_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        added_toppings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        added_toppings:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The toppings of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The toppings of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The image of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ingredients\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ingredients:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ingredients of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu_item_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menu_item_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The id of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu_item_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menu_item_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu_item_price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menu_item_price:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The price of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu_item_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menu_item_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of the menu item.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MenuService } from '../services/menu.service';\nimport { response } from 'express';\n/**\n * `EmployeeCreationsMenuComponent` provides a user interface for adding seasonal menu items.\n * It enables the selection of item types, ingredients, and creation of new menu items.\n */\n@Component({\n  selector: 'app-employee-creations-menu',\n  templateUrl: './employee-creations-menu.component.html',\n  styleUrls: ['./employee-creations-menu.component.scss']\n})\nexport class EmployeeCreationsMenuComponent implements OnInit{\n  /**\n   * Array of menu item types available for selection.\n   */\n  tableData: any[] = [{items: [] }];\n  /**\n   * Array of menu item types available for selection.\n   */\n  menuItems:MenuItem[] = [];\n  /**\n   * Constructor for `EmployeeCreationsMenuComponent`.\n   * @param menuService \n   */\n  constructor(\n    private menuService: MenuService,) \n    {\n  } \n  /**\n   * OnInit lifecycle hook to fetch available menu item types and ingredient names.\n   */\n  ngOnInit() { \n    this.fetchMenuItemsByType('employee_creations');\n  }\n  /**\n   * Fetches menu items by type.\n   * @param type \n   */\n  fetchMenuItemsByType(type: string) {\n    this.menuService.getMenuByType(type).subscribe(data => {\n      this.tableData = this.tableData.concat(data);\n      this.menuItems = [...this.menuItems, ...data];\n    });\n  }\n}\n/**\n * Interface for a menu item.\n */\ninterface MenuItem {\n  /**\n   * The id of the menu item.\n   */\n  menu_item_id: number;\n  /**\n   * The name of the menu item.\n   */\n  menu_item_name: string;\n  /**\n   * The type of the menu item.\n   */\n  menu_item_type: string;\n  /**\n   * The price of the menu item.\n   */\n  menu_item_price: string;\n  /**\n   * The ingredients of the menu item.\n   */\n  ingredients: string[];\n  /**\n   * The image of the menu item.\n   */\n  image: string;\n  /**\n   * The toppings of the menu item.\n   */\n  description: string;\n  /**\n   * The toppings of the menu item.\n   */\n  added_toppings: string[];\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItem-1.html":{"url":"interfaces/MenuItem-1.html","title":"interface - MenuItem-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/menu-item/menu-item.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for a menu item.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            added_toppings\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            ingredients\n                                        \n                                \n                                \n                                        \n                                            menu_item_id\n                                        \n                                \n                                \n                                        \n                                            menu_item_name\n                                        \n                                \n                                \n                                        \n                                            menu_item_price\n                                        \n                                \n                                \n                                        \n                                            menu_item_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        added_toppings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        added_toppings:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The toppings of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The toppings of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The image of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ingredients\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ingredients:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ingredients of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu_item_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menu_item_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The id of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu_item_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menu_item_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu_item_price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menu_item_price:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The price of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu_item_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menu_item_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of the menu item.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MenuService } from '../services/menu.service';\nimport { ActiveComponentService } from '../services/currentcomp.service';\nimport { CartService } from '../cart-modal/cart-modal.service';\nimport { FormatCamelCasePipe } from '../pipes/format-camel-case.pipe';\nimport { Location } from '@angular/common';\n/**\n * `MenuItemComponent` displays detailed information about a specific menu item.\n * It handles operations like selecting toppings, adding items to cart, and navigating back to the previous view.\n *\n * @Component Decorator that marks the class as an Angular component and provides metadata about the component.\n */\n@Component({\n  selector: 'app-menu-item',\n  templateUrl: './menu-item.component.html',\n  styleUrls: ['./menu-item.component.scss'],\n  providers: [FormatCamelCasePipe]\n})\n\nexport class MenuItemComponent implements OnInit {\n  /**\n   * The menu item to be displayed.\n   */\n  menuItems: MenuItem[] = [];\n  /**\n   * The toppings to be displayed.\n   */\n  ToppingItems: MenuItem[] = [];\n  /**\n   * The selected toppings.\n   */\n  selectedToppings: Set = new Set();\n  /**\n   * The constructor for the `MenuItemComponent`.\n   * @param activeComponentService \n   * @param route \n   * @param menuService \n   * @param cartService \n   * @param camelCase \n   * @param location \n   */\n  constructor(\n    private activeComponentService: ActiveComponentService,\n    private route: ActivatedRoute,\n    private menuService: MenuService,\n    private cartService: CartService,\n    private camelCase: FormatCamelCasePipe,\n    private location: Location\n  ) { }\n  /**\n   * OnInit lifecycle hook to perform initial data loading and setup.\n   */\n  ngOnInit() {\n    this.activeComponentService.setActiveComponent('MenuItemComponent');\n    this.route.paramMap.subscribe(params => {\n      let type = params.get('type');\n      let name = params.get('name');\n      let toppings = params.get('toppings');\n\n      if (name && type) {\n        this.menuService.getMenuItemByName(name, type).subscribe(data => {\n          console.log(data);\n          this.menuItems = data;\n\n          if (toppings) {\n            const addedToppings = JSON.parse(toppings);\n            this.menuItems[0].added_toppings = addedToppings;\n          }\n        });\n      }\n    });\n\n    this.menuService.getMenuByType('toppings').subscribe(data => {\n      this.ToppingItems = data;\n    }\n    );\n\n  }\n    /**\n   * Handles checkbox changes for selecting toppings.\n   *\n   * @param event The DOM event associated with the checkbox change.\n   * @param toppingId The ID of the topping being changed.\n   */\n  onToppingCheckboxChange(event: Event, toppingId: number) {\n    const checkbox = event.target as HTMLInputElement;\n    this.onToppingChange(toppingId, checkbox.checked);\n  }\n  /**\n   * Adds or removes a topping based on its selection state.\n   *\n   * @param toppingId The ID of the topping.\n   * @param isChecked Boolean indicating whether the topping is selected.\n   */\n  onToppingChange(toppingId: number, isChecked: boolean) {\n    if (isChecked) {\n      this.selectedToppings.add(toppingId);\n    } else {\n      this.selectedToppings.delete(toppingId);\n    }\n    console.log(this.selectedToppings)\n  }\n\n  /**\n   * Adds a menu item to the cart.\n   *\n   * @param item The menu item being added.\n   */\n\n  onAdd(item: MenuItem) {\n    this.cartService.addItem(item);\n    // Update the local menuItems array (optional, if you want to display the added item immediately)\n    // this.menuItems = this.cartService.getCartItems();\n  }\n  /**\n   * Adds a topping to a menu item and updates its price.\n   *\n   * @param item The menu item to which the topping is being added.\n   * @param topping The topping being added.\n   */\n\n  toppingAdd(item: MenuItem, topping: MenuItem) {\n    if (!item.added_toppings) {\n      item.added_toppings = [];\n    }\n    item.added_toppings.push(topping.menu_item_name);\n\n    // Include price of topping in menu item price\n    const toppingPrice = parseFloat(topping.menu_item_price);\n    item.menu_item_price = (parseFloat(item.menu_item_price) + toppingPrice).toFixed(2);\n  }\n  /**\n   * Removes a topping from a menu item and updates its price.\n   */\n  onCancel() {\n    this.cartService.clearCart();\n  }\n  /**\n   * Clears the cart.\n   */\n  onOrderCompleted() {\n    this.cartService.clearCart();\n  }\n  //(change)=\"onToppingChange(topping.menu_item_id $event.target.checked)\"\n  /**\n   * Navigates back to the previous view.\n   */\n  goBack(): void {\n    this.location.back();\n  }\n\n}\n/**\n * Represents the structure of a menu item.\n */\n/**\n * Interface for a menu item.\n */\n interface MenuItem {\n  /**\n   * The id of the menu item.\n   */\n  menu_item_id: number;\n  /**\n   * The name of the menu item.\n   */\n  menu_item_name: string;\n  /**\n   * The type of the menu item.\n   */\n  menu_item_type: string;\n  /**\n   * The price of the menu item.\n   */\n  menu_item_price: string;\n  /**\n   * The ingredients of the menu item.\n   */\n  ingredients: string[];\n  /**\n   * The image of the menu item.\n   */\n  image: string;\n  /**\n   * The toppings of the menu item.\n   */\n  description: string;\n  /**\n   * The toppings of the menu item.\n   */\n  added_toppings: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItem-2.html":{"url":"interfaces/MenuItem-2.html","title":"interface - MenuItem-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/menu-view/menu-item.model.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the model for the menu item.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            added_toppings\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            ingredients\n                                        \n                                \n                                \n                                        \n                                            menu_item_id\n                                        \n                                \n                                \n                                        \n                                            menu_item_name\n                                        \n                                \n                                \n                                        \n                                            menu_item_price\n                                        \n                                \n                                \n                                        \n                                            menu_item_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        added_toppings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        added_toppings:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The toppings of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The toppings of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The image of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ingredients\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ingredients:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ingredients of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu_item_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menu_item_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The id of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu_item_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menu_item_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu_item_price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menu_item_price:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The price of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu_item_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menu_item_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of the menu item.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface MenuItem {\n    /**\n     * The id of the menu item.\n     */\n    menu_item_id: number;\n    /**\n     * The name of the menu item.\n     */\n    menu_item_name: string;\n    /**\n     * The type of the menu item.\n     */\n    menu_item_type: string;\n    /**\n     * The price of the menu item.\n     */\n    menu_item_price: string;\n    /**\n     * The ingredients of the menu item.\n     */\n    ingredients: string[];\n    /**\n     * The image of the menu item.\n     */\n    image: string;\n    /**\n     * The toppings of the menu item.\n     */\n    description: string;\n    /**\n     * The toppings of the menu item.\n     */\n    added_toppings: string[];\n}\n/**\n * This is the model for the customer menu item.\n */\nexport interface CustomerMenuItem {\n    /**\n     * The id of the menu item.\n     */\n    id: number;\n    /**\n     * The name of the menu item.\n     */\n    name: string;\n    /**\n     * The type of the menu item.\n     */\n    image: string;\n    /**\n     * The price of the menu item.\n     */\n    price: number;\n    /**\n     * The ingredients of the menu item.\n     */\n    ingredients: string;\n}\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItem-3.html":{"url":"interfaces/MenuItem-3.html","title":"interface - MenuItem-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/menu-view/menu-view.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for a menu item.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            added_toppings\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            ingredients\n                                        \n                                \n                                \n                                        \n                                            menu_item_id\n                                        \n                                \n                                \n                                        \n                                            menu_item_name\n                                        \n                                \n                                \n                                        \n                                            menu_item_price\n                                        \n                                \n                                \n                                        \n                                            menu_item_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        added_toppings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        added_toppings:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The toppings of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The toppings of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The image of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ingredients\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ingredients:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ingredients of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu_item_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menu_item_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The id of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu_item_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menu_item_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu_item_price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menu_item_price:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The price of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu_item_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menu_item_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of the menu item.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MenuService } from '../services/menu.service';\nimport { ActiveComponentService } from '../services/currentcomp.service';\n\n/**\n * Represents the structure of a menu item.\n */\n/**\n * Interface for a menu item.\n */\n interface MenuItem {\n  /**\n   * The id of the menu item.\n   */\n  menu_item_id: number;\n  /**\n   * The name of the menu item.\n   */\n  menu_item_name: string;\n  /**\n   * The type of the menu item.\n   */\n  menu_item_type: string;\n  /**\n   * The price of the menu item.\n   */\n  menu_item_price: string;\n  /**\n   * The ingredients of the menu item.\n   */\n  ingredients: string[];\n  /**\n   * The image of the menu item.\n   */\n  image: string;\n  /**\n   * The toppings of the menu item.\n   */\n  description: string;\n  /**\n   * The toppings of the menu item.\n   */\n  added_toppings: string[];\n}\n\n/**\n * `MenuViewComponent` displays the menu items available in different categories such as flavored tea, coffee, etc.\n * It fetches menu items from the `MenuService` and presents them to the user.\n *\n * @Component Decorator that marks the class as an Angular component, specifying the selector, template, and styles.\n */\n@Component({\n  selector: 'app-menu-view',\n  templateUrl: './menu-view.component.html',\n  styleUrls: ['./menu-view.component.scss'],\n})\nexport class MenuViewComponent implements OnInit {\n  /**\n   * The data to be displayed in the table.\n   */\n  FlavoredTeaData = {};\n  /**\n   * The data to be displayed in the table.\n   */\n  menuItems: MenuItem[] = [];\n\n  /**\n   * Constructor for `MenuViewComponent`.\n   * \n   * @param menuService Service to fetch and manage menu items.\n   * @param activeComponentService Service to manage the active component state.\n   */\n  constructor(\n    private menuService: MenuService, \n    private activeComponentService: ActiveComponentService\n  ) {}\n\n  /**\n   * OnInit lifecycle hook to fetch menu items and set the current active component.\n   */\n  ngOnInit(): void {\n    this.activeComponentService.setActiveComponent('MenuViewComponent');\n    // Fetch menu items by type\n    this.fetchMenuItemsByType('flavored_tea');\n    // Additional fetch calls for other types can be uncommented as needed\n  }\n\n  /**\n   * Handles image loading errors for menu items.\n   *\n   * @param event The DOM event associated with the image error.\n   * @param menuItem The menu item whose image failed to load.\n   */\n  handleImageError(event: any, menuItem: any): void {\n    console.error('Error loading image for menu item', menuItem.menu_item_name);\n    // Logic to handle image loading errors, such as setting a default image\n  }\n\n  /**\n   * Fetches menu items by a specific type.\n   *\n   * @param type The type of menu items to fetch (e.g., 'flavored_tea', 'coffee').\n   */\n  fetchMenuItemsByType(type: string): void {\n    this.menuService.getMenuByType(type).subscribe(data => {\n      this.menuItems = [...this.menuItems, ...data];\n    });\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItem-4.html":{"url":"interfaces/MenuItem-4.html","title":"interface - MenuItem-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/milk-tea-menu/milk-tea-menu.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for a menu item.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            added_toppings\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            ingredients\n                                        \n                                \n                                \n                                        \n                                            menu_item_id\n                                        \n                                \n                                \n                                        \n                                            menu_item_name\n                                        \n                                \n                                \n                                        \n                                            menu_item_price\n                                        \n                                \n                                \n                                        \n                                            menu_item_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        added_toppings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        added_toppings:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The toppings of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The toppings of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The image of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ingredients\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ingredients:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ingredients of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu_item_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menu_item_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The id of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu_item_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menu_item_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu_item_price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menu_item_price:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The price of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu_item_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menu_item_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of the menu item.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MenuService } from '../services/menu.service';\n\n/**\n * Interface for a menu item.\n */\n interface MenuItem {\n  /**\n   * The id of the menu item.\n   */\n  menu_item_id: number;\n  /**\n   * The name of the menu item.\n   */\n  menu_item_name: string;\n  /**\n   * The type of the menu item.\n   */\n  menu_item_type: string;\n  /**\n   * The price of the menu item.\n   */\n  menu_item_price: string;\n  /**\n   * The ingredients of the menu item.\n   */\n  ingredients: string[];\n  /**\n   * The image of the menu item.\n   */\n  image: string;\n  /**\n   * The toppings of the menu item.\n   */\n  description: string;\n  /**\n   * The toppings of the menu item.\n   */\n  added_toppings: string[];\n}\n\n/**\n * `MilkTeaMenuComponent` is responsible for displaying a menu of milk tea items.\n * It fetches and displays a variety of milk tea options available, along with other related categories.\n *\n * @Component Decorator that marks the class as an Angular component, specifying the selector, template, and styles.\n */\n@Component({\n  selector: 'app-milk-tea-menu',\n  templateUrl: './milk-tea-menu.component.html',\n  styleUrls: ['./milk-tea-menu.component.scss']\n})\nexport class MilkTeaMenuComponent implements OnInit {\n  /**\n   * The data to be displayed in the table.\n   */\n  menuItems: MenuItem[] = [];\n  /**\n   * The data to be displayed in the table.\n   */\n  tableData: any[] = [\n    { name: 'Flavored Tea', items: [] },\n    { name: 'Milk Tea', items: [] },\n    // ... additional categories\n  ];\n\n  /**\n   * Constructor for `MilkTeaMenuComponent`.\n   * \n   * @param menuService Service to fetch and manage menu items.\n   */\n  constructor(private menuService: MenuService) {}\n\n  /**\n   * OnInit lifecycle hook to fetch milk tea menu items.\n   */\n  ngOnInit(): void {\n    this.fetchMenuItemsByType('milk_tea');\n  }\n\n  /**\n   * Fetches menu items by a specific type.\n   *\n   * @param type The type of menu items to fetch (e.g., 'milk_tea').\n   */\n  fetchMenuItemsByType(type: string): void {\n    this.menuService.getMenuByType(type).subscribe(data => {\n      this.menuItems = [...this.menuItems, ...data];\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItem-5.html":{"url":"interfaces/MenuItem-5.html","title":"interface - MenuItem-5","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/signature-milk-tea-menu/signature-milk-tea-menu.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for a menu item.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            added_toppings\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            ingredients\n                                        \n                                \n                                \n                                        \n                                            menu_item_id\n                                        \n                                \n                                \n                                        \n                                            menu_item_name\n                                        \n                                \n                                \n                                        \n                                            menu_item_price\n                                        \n                                \n                                \n                                        \n                                            menu_item_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        added_toppings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        added_toppings:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The toppings of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The toppings of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The image of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ingredients\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ingredients:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ingredients of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu_item_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menu_item_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The id of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu_item_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menu_item_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu_item_price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menu_item_price:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The price of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu_item_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menu_item_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of the menu item.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MenuService } from '../services/menu.service';\n\n/**\n * Represents the structure of a menu item.\n */\n/**\n * Interface for a menu item.\n */\n interface MenuItem {\n  /**\n   * The id of the menu item.\n   */\n  menu_item_id: number;\n  /**\n   * The name of the menu item.\n   */\n  menu_item_name: string;\n  /**\n   * The type of the menu item.\n   */\n  menu_item_type: string;\n  /**\n   * The price of the menu item.\n   */\n  menu_item_price: string;\n  /**\n   * The ingredients of the menu item.\n   */\n  ingredients: string[];\n  /**\n   * The image of the menu item.\n   */\n  image: string;\n  /**\n   * The toppings of the menu item.\n   */\n  description: string;\n  /**\n   * The toppings of the menu item.\n   */\n  added_toppings: string[];\n}\n\n/**\n * `SignatureMilkTeaMenuComponent` displays a menu of signature milk tea items.\n * It utilizes the `MenuService` to fetch and display a variety of signature milk tea options.\n *\n * @Component Decorator that marks the class as an Angular component, specifying the selector, template, and styles.\n */\n@Component({\n  selector: 'app-signature-milk-tea-menu',\n  templateUrl: './signature-milk-tea-menu.component.html',\n  styleUrls: ['./signature-milk-tea-menu.component.scss']\n})\nexport class SignatureMilkTeaMenuComponent implements OnInit {\n  /**\n   * The data to be displayed in the table.\n   */\n  tableData: any[] = [{items: [] }];\n  /**\n   * The data to be displayed in the table.\n   */\n  Data = {};\n  /**\n   * The data to be displayed in the table.\n   */\n  menuItems: MenuItem[] = [];\n  /**\n   * The data to be displayed in the table.\n   */\n  FlavoredTeaData = {};\n\n  /**\n   * Constructor for `SignatureMilkTeaMenuComponent`.\n   * \n   * @param menuService Service to fetch and manage menu items.\n   */\n  constructor(private menuService: MenuService) {}\n\n  /**\n   * OnInit lifecycle hook to fetch signature milk tea menu items.\n   */\n  ngOnInit(): void {\n    this.fetchMenuItemsByType('signature_milk_tea');\n  }\n\n  /**\n   * Fetches menu items by a specific type.\n   *\n   * @param type The type of menu items to fetch (e.g., 'signature_milk_tea').\n   */\n  fetchMenuItemsByType(type: string): void {\n    this.menuService.getMenuByType(type).subscribe(data => {\n      this.menuItems = [...this.menuItems, ...data];\n      this.Data = data;\n      console.log(this.Data);\n      // Additional logic for processing data\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItem-6.html":{"url":"interfaces/MenuItem-6.html","title":"interface - MenuItem-6","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/slush-menu/slush-menu.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for a menu item.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            added_toppings\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            ingredients\n                                        \n                                \n                                \n                                        \n                                            menu_item_id\n                                        \n                                \n                                \n                                        \n                                            menu_item_name\n                                        \n                                \n                                \n                                        \n                                            menu_item_price\n                                        \n                                \n                                \n                                        \n                                            menu_item_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        added_toppings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        added_toppings:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The toppings of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The toppings of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The image of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ingredients\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ingredients:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ingredients of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu_item_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menu_item_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The id of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu_item_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menu_item_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu_item_price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menu_item_price:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The price of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu_item_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menu_item_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of the menu item.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MenuService } from '../services/menu.service';\n\n/**\n * Represents the structure of a menu item.\n */\n/**\n * Interface for a menu item.\n */\n interface MenuItem {\n  /**\n   * The id of the menu item.\n   */\n  menu_item_id: number;\n  /**\n   * The name of the menu item.\n   */\n  menu_item_name: string;\n  /**\n   * The type of the menu item.\n   */\n  menu_item_type: string;\n  /**\n   * The price of the menu item.\n   */\n  menu_item_price: string;\n  /**\n   * The ingredients of the menu item.\n   */\n  ingredients: string[];\n  /**\n   * The image of the menu item.\n   */\n  image: string;\n  /**\n   * The toppings of the menu item.\n   */\n  description: string;\n  /**\n   * The toppings of the menu item.\n   */\n  added_toppings: string[];\n}\n\n/**\n * `SlushMenuComponent` displays a menu of slush items.\n * It utilizes the `MenuService` to fetch and display a variety of slush options and other categories.\n *\n * @Component Decorator that marks the class as an Angular component, specifying the selector, template, and styles.\n */\n@Component({\n  selector: 'app-slush-menu',\n  templateUrl: './slush-menu.component.html',\n  styleUrls: ['./slush-menu.component.scss']\n})\nexport class SlushMenuComponent implements OnInit {\n  /**\n   * The data to be displayed in the table.\n   */\n  FlavoredTeaData = {};\n  /**\n   * The menu items to be displayed.\n   */\n  menuItems: MenuItem[] = [];\n  /**\n   * The data to be displayed in the table.\n   */\n  tableData: any[] = [{items: [] }];\n\n  /**\n   * Constructor for `SlushMenuComponent`.\n   * \n   * @param menuService Service to fetch and manage menu items.\n   */\n  constructor(private menuService: MenuService) {}\n\n  /**\n   * OnInit lifecycle hook to fetch slush menu items.\n   */\n  ngOnInit(): void {\n    this.fetchMenuItemsByType('slush');\n  }\n\n  /**\n   * Fetches menu items by a specific type.\n   *\n   * @param type The type of menu items to fetch (e.g., 'slush').\n   */\n  fetchMenuItemsByType(type: string): void {\n    this.menuService.getMenuByType(type).subscribe(data => {\n      this.menuItems = [...this.menuItems, ...data];\n      console.log(this.FlavoredTeaData);\n      // Additional logic for processing data\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MenuItem-7.html":{"url":"interfaces/MenuItem-7.html","title":"interface - MenuItem-7","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MenuItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/smoothie-menu/smoothie-menu.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for a menu item.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            added_toppings\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            ingredients\n                                        \n                                \n                                \n                                        \n                                            menu_item_id\n                                        \n                                \n                                \n                                        \n                                            menu_item_name\n                                        \n                                \n                                \n                                        \n                                            menu_item_price\n                                        \n                                \n                                \n                                        \n                                            menu_item_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        added_toppings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        added_toppings:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The toppings of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The toppings of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The image of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ingredients\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ingredients:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ingredients of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu_item_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menu_item_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The id of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu_item_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menu_item_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu_item_price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menu_item_price:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The price of the menu item.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        menu_item_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        menu_item_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of the menu item.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MenuService } from '../services/menu.service';\n\n/**\n * Represents the structure of a menu item.\n */\n/**\n * Interface for a menu item.\n */\n interface MenuItem {\n  /**\n   * The id of the menu item.\n   */\n  menu_item_id: number;\n  /**\n   * The name of the menu item.\n   */\n  menu_item_name: string;\n  /**\n   * The type of the menu item.\n   */\n  menu_item_type: string;\n  /**\n   * The price of the menu item.\n   */\n  menu_item_price: string;\n  /**\n   * The ingredients of the menu item.\n   */\n  ingredients: string[];\n  /**\n   * The image of the menu item.\n   */\n  image: string;\n  /**\n   * The toppings of the menu item.\n   */\n  description: string;\n  /**\n   * The toppings of the menu item.\n   */\n  added_toppings: string[];\n}\n\n/**\n * `SmoothieMenuComponent` is responsible for displaying a menu of smoothie items.\n * It uses the `MenuService` to fetch and display a variety of smoothie options, along with other menu categories.\n *\n * @Component Decorator that marks the class as an Angular component, specifying the selector, template, and styles.\n */\n@Component({\n  selector: 'app-smoothie-menu',\n  templateUrl: './smoothie-menu.component.html',\n  styleUrls: ['./smoothie-menu.component.scss']\n})\nexport class SmoothieMenuComponent implements OnInit {\n  /**\n   * The data to be displayed in the table.\n   */\n  FlavoredTeaData = {};\n  /**\n   * The menu items to be displayed.\n   */\n  menuItems: MenuItem[] = [];\n\n  /**\n   * Constructor for `SmoothieMenuComponent`.\n   * \n   * @param menuService Service to fetch and manage menu items.\n   */\n  constructor(private menuService: MenuService) {}\n\n  /**\n   * OnInit lifecycle hook to fetch smoothie menu items.\n   */\n  ngOnInit(): void {\n    this.fetchMenuItemsByType('smoothies');\n  }\n\n  /**\n   * Fetches menu items by a specific type.\n   * \n   * @param type The type of menu items to fetch (e.g., 'smoothies').\n   * @param index The index in the tableData array to populate (if applicable).\n   */\n  fetchMenuItemsByType(type: string): void {\n    this.menuService.getMenuByType(type).subscribe(data => {\n      this.menuItems = [...this.menuItems, ...data];\n      this.FlavoredTeaData = data;\n      console.log(this.FlavoredTeaData);\n      // Additional logic for processing data\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuItemComponent.html":{"url":"components/MenuItemComponent.html","title":"component - MenuItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MenuItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/menu-item/menu-item.component.ts\n\n\n\n    \n        Description\n    \n    \n        MenuItemComponent displays detailed information about a specific menu item.\nIt handles operations like selecting toppings, adding items to cart, and navigating back to the previous view.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            FormatCamelCasePipe\n                \n            \n\n\n            \n                selector\n                app-menu-item\n            \n\n\n\n            \n                styleUrls\n                ./menu-item.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                menuItems\n                            \n                            \n                                selectedToppings\n                            \n                            \n                                ToppingItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onAdd\n                            \n                            \n                                onCancel\n                            \n                            \n                                onOrderCompleted\n                            \n                            \n                                onToppingChange\n                            \n                            \n                                onToppingCheckboxChange\n                            \n                            \n                                toppingAdd\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activeComponentService: ActiveComponentService, route: ActivatedRoute, menuService: MenuService, cartService: CartService, camelCase: FormatCamelCasePipe, location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/menu-item/menu-item.component.ts:33\n                            \n                        \n\n                \n                    \n                            The constructor for the MenuItemComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activeComponentService\n                                                  \n                                                        \n                                                                        ActiveComponentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        menuService\n                                                  \n                                                        \n                                                                        MenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cartService\n                                                  \n                                                        \n                                                                        CartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        camelCase\n                                                  \n                                                        \n                                                                    FormatCamelCasePipe\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/menu-item/menu-item.component.ts:149\n                        \n                    \n\n\n            \n                \n                        Navigates back to the previous view.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/menu-item/menu-item.component.ts:54\n                        \n                    \n\n\n            \n                \n                        OnInit lifecycle hook to perform initial data loading and setup.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onAdd\n                        \n                    \n                \n            \n            \n                \nonAdd(item: MenuItem)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/menu-item/menu-item.component.ts:111\n                        \n                    \n\n\n            \n                \n                        Adds a menu item to the cart.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            MenuItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The menu item being added.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/menu-item/menu-item.component.ts:136\n                        \n                    \n\n\n            \n                \n                        Removes a topping from a menu item and updates its price.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onOrderCompleted\n                        \n                    \n                \n            \n            \n                \nonOrderCompleted()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/menu-item/menu-item.component.ts:142\n                        \n                    \n\n\n            \n                \n                        Clears the cart.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onToppingChange\n                        \n                    \n                \n            \n            \n                \nonToppingChange(toppingId: number, isChecked: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/menu-item/menu-item.component.ts:96\n                        \n                    \n\n\n            \n                \n                        Adds or removes a topping based on its selection state.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                toppingId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the topping.\n\n                                            \n                                        \n                                        \n                                                isChecked\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Boolean indicating whether the topping is selected.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onToppingCheckboxChange\n                        \n                    \n                \n            \n            \n                \nonToppingCheckboxChange(event: Event, toppingId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/menu-item/menu-item.component.ts:86\n                        \n                    \n\n\n            \n                \n                        Handles checkbox changes for selecting toppings.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The DOM event associated with the checkbox change.\n\n                                            \n                                        \n                                        \n                                                toppingId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The ID of the topping being changed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toppingAdd\n                        \n                    \n                \n            \n            \n                \ntoppingAdd(item: MenuItem, topping: MenuItem)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/menu-item/menu-item.component.ts:123\n                        \n                    \n\n\n            \n                \n                        Adds a topping to a menu item and updates its price.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                item\n                                            \n                                                            MenuItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The menu item to which the topping is being added.\n\n                                            \n                                        \n                                        \n                                                topping\n                                            \n                                                            MenuItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The topping being added.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        menuItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/menu-item/menu-item.component.ts:25\n                        \n                    \n\n            \n                \n                    The menu item to be displayed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedToppings\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Set\n\n                    \n                \n                \n                    \n                        Default value : new Set()\n                    \n                \n                    \n                        \n                                Defined in src/app/menu-item/menu-item.component.ts:33\n                        \n                    \n\n            \n                \n                    The selected toppings.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ToppingItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/menu-item/menu-item.component.ts:29\n                        \n                    \n\n            \n                \n                    The toppings to be displayed.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MenuService } from '../services/menu.service';\nimport { ActiveComponentService } from '../services/currentcomp.service';\nimport { CartService } from '../cart-modal/cart-modal.service';\nimport { FormatCamelCasePipe } from '../pipes/format-camel-case.pipe';\nimport { Location } from '@angular/common';\n/**\n * `MenuItemComponent` displays detailed information about a specific menu item.\n * It handles operations like selecting toppings, adding items to cart, and navigating back to the previous view.\n *\n * @Component Decorator that marks the class as an Angular component and provides metadata about the component.\n */\n@Component({\n  selector: 'app-menu-item',\n  templateUrl: './menu-item.component.html',\n  styleUrls: ['./menu-item.component.scss'],\n  providers: [FormatCamelCasePipe]\n})\n\nexport class MenuItemComponent implements OnInit {\n  /**\n   * The menu item to be displayed.\n   */\n  menuItems: MenuItem[] = [];\n  /**\n   * The toppings to be displayed.\n   */\n  ToppingItems: MenuItem[] = [];\n  /**\n   * The selected toppings.\n   */\n  selectedToppings: Set = new Set();\n  /**\n   * The constructor for the `MenuItemComponent`.\n   * @param activeComponentService \n   * @param route \n   * @param menuService \n   * @param cartService \n   * @param camelCase \n   * @param location \n   */\n  constructor(\n    private activeComponentService: ActiveComponentService,\n    private route: ActivatedRoute,\n    private menuService: MenuService,\n    private cartService: CartService,\n    private camelCase: FormatCamelCasePipe,\n    private location: Location\n  ) { }\n  /**\n   * OnInit lifecycle hook to perform initial data loading and setup.\n   */\n  ngOnInit() {\n    this.activeComponentService.setActiveComponent('MenuItemComponent');\n    this.route.paramMap.subscribe(params => {\n      let type = params.get('type');\n      let name = params.get('name');\n      let toppings = params.get('toppings');\n\n      if (name && type) {\n        this.menuService.getMenuItemByName(name, type).subscribe(data => {\n          console.log(data);\n          this.menuItems = data;\n\n          if (toppings) {\n            const addedToppings = JSON.parse(toppings);\n            this.menuItems[0].added_toppings = addedToppings;\n          }\n        });\n      }\n    });\n\n    this.menuService.getMenuByType('toppings').subscribe(data => {\n      this.ToppingItems = data;\n    }\n    );\n\n  }\n    /**\n   * Handles checkbox changes for selecting toppings.\n   *\n   * @param event The DOM event associated with the checkbox change.\n   * @param toppingId The ID of the topping being changed.\n   */\n  onToppingCheckboxChange(event: Event, toppingId: number) {\n    const checkbox = event.target as HTMLInputElement;\n    this.onToppingChange(toppingId, checkbox.checked);\n  }\n  /**\n   * Adds or removes a topping based on its selection state.\n   *\n   * @param toppingId The ID of the topping.\n   * @param isChecked Boolean indicating whether the topping is selected.\n   */\n  onToppingChange(toppingId: number, isChecked: boolean) {\n    if (isChecked) {\n      this.selectedToppings.add(toppingId);\n    } else {\n      this.selectedToppings.delete(toppingId);\n    }\n    console.log(this.selectedToppings)\n  }\n\n  /**\n   * Adds a menu item to the cart.\n   *\n   * @param item The menu item being added.\n   */\n\n  onAdd(item: MenuItem) {\n    this.cartService.addItem(item);\n    // Update the local menuItems array (optional, if you want to display the added item immediately)\n    // this.menuItems = this.cartService.getCartItems();\n  }\n  /**\n   * Adds a topping to a menu item and updates its price.\n   *\n   * @param item The menu item to which the topping is being added.\n   * @param topping The topping being added.\n   */\n\n  toppingAdd(item: MenuItem, topping: MenuItem) {\n    if (!item.added_toppings) {\n      item.added_toppings = [];\n    }\n    item.added_toppings.push(topping.menu_item_name);\n\n    // Include price of topping in menu item price\n    const toppingPrice = parseFloat(topping.menu_item_price);\n    item.menu_item_price = (parseFloat(item.menu_item_price) + toppingPrice).toFixed(2);\n  }\n  /**\n   * Removes a topping from a menu item and updates its price.\n   */\n  onCancel() {\n    this.cartService.clearCart();\n  }\n  /**\n   * Clears the cart.\n   */\n  onOrderCompleted() {\n    this.cartService.clearCart();\n  }\n  //(change)=\"onToppingChange(topping.menu_item_id $event.target.checked)\"\n  /**\n   * Navigates back to the previous view.\n   */\n  goBack(): void {\n    this.location.back();\n  }\n\n}\n/**\n * Represents the structure of a menu item.\n */\n/**\n * Interface for a menu item.\n */\n interface MenuItem {\n  /**\n   * The id of the menu item.\n   */\n  menu_item_id: number;\n  /**\n   * The name of the menu item.\n   */\n  menu_item_name: string;\n  /**\n   * The type of the menu item.\n   */\n  menu_item_type: string;\n  /**\n   * The price of the menu item.\n   */\n  menu_item_price: string;\n  /**\n   * The ingredients of the menu item.\n   */\n  ingredients: string[];\n  /**\n   * The image of the menu item.\n   */\n  image: string;\n  /**\n   * The toppings of the menu item.\n   */\n  description: string;\n  /**\n   * The toppings of the menu item.\n   */\n  added_toppings: string[];\n}\n\n    \n\n    \n        \n    \n    \n      \n        \n          \n            Flavored Tea & Coffee\n          \n          \n            Milk-Tea\n          \n          \n            Signature Milk Tea\n          \n          \n            Slush\n          \n          \n            Smoothies\n          \n          \n            Employee Creations\n          \n          \n            Cart\n          \n        \n      \n    \n  \n\n\n  \n      \n              \n                Back\n              \n                  \n              \n              \n                  {{menuItem.menu_item_name | replaceUnderscores | titlecase}}\n                  \n                      {{ menuItem.description }}\n                  \n                  \n                      Ingredients:\n                      \n                        {{ ingredient | formatCamelCase}}\n                      \n                  \n                  \n                      Toppings:\n                      \n                          \n                              \n                              \n                                  {{ topping.menu_item_name | replaceUnderscores | titlecase }}\n                                  - ${{ topping.menu_item_price }}\n                              \n                          \n                      \n          \n          Add to Cart\n              \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./menu-item.component.scss\n                \n                .flexhold{\n    display: flex;\n    flex-direction: row;\n    background: linear-gradient(to right, white 50%, #fbf9f3 50%);\n    padding: 5%;\n    padding-top: 6%;\n    height: 100vh;\n}\n\n\n\n.menu-item-image{\n    display: flex;\n    padding: 5%;\n    justify-content: center;\n    width: 50%;\n    overflow: hidden;\n}\n\n.menu-item-info{\n    padding: 5%;\n    width: 50%;\n}\n\n.main{\n    width: 100%;\n}\n\n.product-name{\n    font-size: 2.6em;\n    margin-bottom: 0;\n}\n\n.toppings {\n    margin-top: 20px;\n}\n\n.toppings-list {\n    max-height: 200px; /* Adjust as needed */\n    overflow-y: auto; /* Enables scrolling for long lists */\n    margin-bottom: 15px; /* Spacing before the Add to Cart button */\n}\n\n.topping-item {\n    display: flex;\n    align-items: center;\n    margin-bottom: 10px; /* Spacing between each topping item */\n}\n\n.topping-item input[type=\"checkbox\"] {\n    margin-right: 10px; /* Spacing between checkbox and label */\n}\n\n.add-to-cart-btn {\n    margin-top: 15px;\n    display: flex;\n    justify-content: center;\n    background-color: #4CAF50; /* Example color */\n    color: white;\n    border: none;\n    padding: 12px 24px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 18px;\n    cursor: pointer;\n\n    &:hover {\n        transform: scale(1.05);\n    }\n    &:active {\n        background-color: rgb(92, 184, 92);\n    }\n}\n\n.backButton {\n    display: flex;\n    justify-content: flex-start;\n    align-items: flex-end;\n    background-color: #aaabaa; /* Example color */\n    color: white;\n    border: none;\n    padding: 12px 24px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 18px;\n    border-radius: 8px;\n    height: 50px;\n    margin-top: 50px;\n    cursor: pointer;\n}\n\n  \n\n.TradNav{\n    width: 100vw;\n    background-color: aqua;\n    position: fixed;\n    left: 0;\n    margin-top: 55px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            Flavored Tea & Coffee                                Milk-Tea                                Signature Milk Tea                                Slush                                Smoothies                                Employee Creations                                Cart                                                                    Back                                                                              {{menuItem.menu_item_name | replaceUnderscores | titlecase}}                                        {{ menuItem.description }}                                                          Ingredients:                                              {{ ingredient | formatCamelCase}}                                                                                Toppings:                                                                                                                                              {{ topping.menu_item_name | replaceUnderscores | titlecase }}                                  - ${{ topping.menu_item_price }}                                                                                                  Add to Cart                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'app-authentication-button'},{'name': 'CartModalComponent', 'selector': 'app-cart-modal'},{'name': 'CashierViewComponent', 'selector': 'app-cashier-view'},{'name': 'CheckoutPopupComponent', 'selector': 'app-checkout-popup'},{'name': 'ConfirmationPopupComponent', 'selector': 'app-confirmation-popup'},{'name': 'ContactUsComponent', 'selector': 'app-contact-us'},{'name': 'CustomerViewComponent', 'selector': 'app-customer-view'},{'name': 'EditItemPopupComponent', 'selector': 'app-edit-item-popup'},{'name': 'EmployeeCreationsMenuComponent', 'selector': 'app-employee-creations-menu'},{'name': 'GetRoleComponent', 'selector': 'app-get-role'},{'name': 'LearnMoreComponent', 'selector': 'app-learn-more'},{'name': 'LoginButtonComponent', 'selector': 'app-login-button'},{'name': 'LogoutButtonComponent', 'selector': 'app-logout-button'},{'name': 'ManagerPopupComponent', 'selector': 'app-manager-popup'},{'name': 'ManagerViewComponent', 'selector': 'app-manager-view'},{'name': 'MenuItemComponent', 'selector': 'app-menu-item'},{'name': 'MenuViewComponent', 'selector': 'app-menu-view'},{'name': 'MilkTeaMenuComponent', 'selector': 'app-milk-tea-menu'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuickAddPopupComponent', 'selector': 'app-quick-add-popup'},{'name': 'RestockReportPopupComponent', 'selector': 'app-restock-report-popup'},{'name': 'SeasonalItemPopupComponent', 'selector': 'app-seasonal-item-popup'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'SignatureMilkTeaMenuComponent', 'selector': 'app-signature-milk-tea-menu'},{'name': 'SignupButtonComponent', 'selector': 'app-signup-button'},{'name': 'SlushMenuComponent', 'selector': 'app-slush-menu'},{'name': 'SmoothieMenuComponent', 'selector': 'app-smoothie-menu'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MenuItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MenuService.html":{"url":"injectables/MenuService.html","title":"injectable - MenuService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MenuService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/menu.service.ts\n        \n\n\n            \n                Description\n            \n            \n                MenuService provides HTTP methods for CRUD operations on menu items.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMenuItem\n                            \n                            \n                                deleteMenuItem\n                            \n                            \n                                editMenuItem\n                            \n                            \n                                getMenu\n                            \n                            \n                                getMenuByType\n                            \n                            \n                                getMenuItemById\n                            \n                            \n                                getMenuItemByName\n                            \n                            \n                                getMenuItemTypes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/menu.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addMenuItem\n                        \n                    \n                \n            \n            \n                \naddMenuItem(menuItem: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/menu.service.ts:62\n                        \n                    \n\n\n            \n                \n                        Method to add a menu item.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                menuItem\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteMenuItem\n                        \n                    \n                \n            \n            \n                \ndeleteMenuItem(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/menu.service.ts:45\n                        \n                    \n\n\n            \n                \n                        Method to delete a menu item.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable of type any.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editMenuItem\n                        \n                    \n                \n            \n            \n                \neditMenuItem(id: number, menuItem: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/menu.service.ts:54\n                        \n                    \n\n\n            \n                \n                        Method to edit a menu item.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                menuItem\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable of type any.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMenu\n                        \n                    \n                \n            \n            \n                \ngetMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/menu.service.ts:20\n                        \n                    \n\n\n            \n                \n                         Method to get the menu.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable of type any.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMenuByType\n                        \n                    \n                \n            \n            \n                \ngetMenuByType(type: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/menu.service.ts:28\n                        \n                    \n\n\n            \n                \n                        Method to get the menu by type.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable of type any.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMenuItemById\n                        \n                    \n                \n            \n            \n                \ngetMenuItemById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/menu.service.ts:77\n                        \n                    \n\n\n            \n                \n                         Method to get the menu item by id.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable of type any.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMenuItemByName\n                        \n                    \n                \n            \n            \n                \ngetMenuItemByName(name: string, type: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/menu.service.ts:37\n                        \n                    \n\n\n            \n                \n                        Method to get the menu item by name.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable of type any.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMenuItemTypes\n                        \n                    \n                \n            \n            \n                \ngetMenuItemTypes()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/menu.service.ts:69\n                        \n                    \n\n\n            \n                \n                        Method to get the menu item types.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable of type any.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.apiUrl}/menu`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/menu.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n/**\n * `MenuService` provides HTTP methods for CRUD operations on menu items.\n */\n@Injectable({ providedIn: 'root' })\nexport class MenuService {\n  private baseUrl = `${environment.apiUrl}/menu`;\n\n  constructor(private http: HttpClient) {}\n\n  // Methods: getMenu, getMenuByType, getMenuItemByName, deleteMenuItem, editMenuItem, addMenuItem, getMenuItemTypes, getMenuItemById\n  /**\n   *  Method to get the menu.\n   * @returns Observable of type any.\n   */\n  getMenu(): Observable {\n    return this.http.get(this.baseUrl);\n  }\n/**\n * Method to get the menu by type.\n * @param type \n * @returns Observable of type any.\n */\n  getMenuByType(type: string): Observable {\n    return this.http.get(`${this.baseUrl}/${type}`);\n  }\n  /**\n   * Method to get the menu item by name.\n   * @param name \n   * @param type \n   * @returns  Observable of type any.\n   */\n  getMenuItemByName(name:string, type:string): Observable {\n    return this.http.get(`${this.baseUrl}/${type}/${name}`);\n  }\n  /**\n   * Method to delete a menu item.\n   * @param id \n   * @returns  Observable of type any.\n   */\n  deleteMenuItem(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}/${id}`);\n  }\n/**\n * Method to edit a menu item.\n * @param id \n * @param menuItem \n * @returns  Observable of type any.\n */\n  editMenuItem(id: number, menuItem: any): Observable {\n    return this.http.put(`${this.baseUrl}/${id}`, menuItem);\n  }\n/**\n * Method to add a menu item.\n * @param menuItem \n * @returns \n */\n  addMenuItem(menuItem: any): Observable {\n    return this.http.post(`${this.baseUrl}`, menuItem);\n  }\n/**\n * Method to get the menu item types.\n * @returns Observable of type any.\n */\n  getMenuItemTypes(): Observable {\n    return this.http.get(`${this.baseUrl}/menu/item/types`);\n  }\n/**\n *  Method to get the menu item by id.\n * @param id \n * @returns  Observable of type any.\n */\n  getMenuItemById(id: number): Observable {\n    return this.http.get(`${this.baseUrl}/get/by/${id}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuViewComponent.html":{"url":"components/MenuViewComponent.html","title":"component - MenuViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MenuViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/menu-view/menu-view.component.ts\n\n\n\n    \n        Description\n    \n    \n        MenuViewComponent displays the menu items available in different categories such as flavored tea, coffee, etc.\nIt fetches menu items from the MenuService and presents them to the user.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-menu-view\n            \n\n\n\n            \n                styleUrls\n                ./menu-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                FlavoredTeaData\n                            \n                            \n                                menuItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchMenuItemsByType\n                            \n                            \n                                handleImageError\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(menuService: MenuService, activeComponentService: ActiveComponentService)\n                    \n                \n                        \n                            \n                                Defined in src/app/menu-view/menu-view.component.ts:65\n                            \n                        \n\n                \n                    \n                            Constructor for MenuViewComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        menuService\n                                                  \n                                                        \n                                                                        MenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to fetch and manage menu items.\n\n                                                        \n                                                \n                                                \n                                                        activeComponentService\n                                                  \n                                                        \n                                                                        ActiveComponentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to manage the active component state.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchMenuItemsByType\n                        \n                    \n                \n            \n            \n                \nfetchMenuItemsByType(type: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/menu-view/menu-view.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Fetches menu items by a specific type.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The type of menu items to fetch (e.g., 'flavored_tea', 'coffee').\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleImageError\n                        \n                    \n                \n            \n            \n                \nhandleImageError(event: any, menuItem: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/menu-view/menu-view.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Handles image loading errors for menu items.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The DOM event associated with the image error.\n\n                                            \n                                        \n                                        \n                                                menuItem\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The menu item whose image failed to load.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/menu-view/menu-view.component.ts:81\n                        \n                    \n\n\n            \n                \n                        OnInit lifecycle hook to fetch menu items and set the current active component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        FlavoredTeaData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/menu-view/menu-view.component.ts:61\n                        \n                    \n\n            \n                \n                    The data to be displayed in the table.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/menu-view/menu-view.component.ts:65\n                        \n                    \n\n            \n                \n                    The data to be displayed in the table.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MenuService } from '../services/menu.service';\nimport { ActiveComponentService } from '../services/currentcomp.service';\n\n/**\n * Represents the structure of a menu item.\n */\n/**\n * Interface for a menu item.\n */\n interface MenuItem {\n  /**\n   * The id of the menu item.\n   */\n  menu_item_id: number;\n  /**\n   * The name of the menu item.\n   */\n  menu_item_name: string;\n  /**\n   * The type of the menu item.\n   */\n  menu_item_type: string;\n  /**\n   * The price of the menu item.\n   */\n  menu_item_price: string;\n  /**\n   * The ingredients of the menu item.\n   */\n  ingredients: string[];\n  /**\n   * The image of the menu item.\n   */\n  image: string;\n  /**\n   * The toppings of the menu item.\n   */\n  description: string;\n  /**\n   * The toppings of the menu item.\n   */\n  added_toppings: string[];\n}\n\n/**\n * `MenuViewComponent` displays the menu items available in different categories such as flavored tea, coffee, etc.\n * It fetches menu items from the `MenuService` and presents them to the user.\n *\n * @Component Decorator that marks the class as an Angular component, specifying the selector, template, and styles.\n */\n@Component({\n  selector: 'app-menu-view',\n  templateUrl: './menu-view.component.html',\n  styleUrls: ['./menu-view.component.scss'],\n})\nexport class MenuViewComponent implements OnInit {\n  /**\n   * The data to be displayed in the table.\n   */\n  FlavoredTeaData = {};\n  /**\n   * The data to be displayed in the table.\n   */\n  menuItems: MenuItem[] = [];\n\n  /**\n   * Constructor for `MenuViewComponent`.\n   * \n   * @param menuService Service to fetch and manage menu items.\n   * @param activeComponentService Service to manage the active component state.\n   */\n  constructor(\n    private menuService: MenuService, \n    private activeComponentService: ActiveComponentService\n  ) {}\n\n  /**\n   * OnInit lifecycle hook to fetch menu items and set the current active component.\n   */\n  ngOnInit(): void {\n    this.activeComponentService.setActiveComponent('MenuViewComponent');\n    // Fetch menu items by type\n    this.fetchMenuItemsByType('flavored_tea');\n    // Additional fetch calls for other types can be uncommented as needed\n  }\n\n  /**\n   * Handles image loading errors for menu items.\n   *\n   * @param event The DOM event associated with the image error.\n   * @param menuItem The menu item whose image failed to load.\n   */\n  handleImageError(event: any, menuItem: any): void {\n    console.error('Error loading image for menu item', menuItem.menu_item_name);\n    // Logic to handle image loading errors, such as setting a default image\n  }\n\n  /**\n   * Fetches menu items by a specific type.\n   *\n   * @param type The type of menu items to fetch (e.g., 'flavored_tea', 'coffee').\n   */\n  fetchMenuItemsByType(type: string): void {\n    this.menuService.getMenuByType(type).subscribe(data => {\n      this.menuItems = [...this.menuItems, ...data];\n    });\n  }\n}\n\n\n    \n\n    \n        \n  \n  \n    \n      \n        \n          Flavored Tea & Coffee\n        \n        \n          Milk-Tea\n        \n        \n          Signature Milk Tea\n        \n        \n          Slush\n        \n        \n          Smoothies\n        \n        \n          Employee Creations\n        \n        \n          Cart\n        \n      \n    \n  \n\n\n\n\n\n\n\nFlavored Tea & Coffee\n  \n    \n      \n        \n        {{ menuItem.menu_item_name | replaceUnderscores | titlecase }}\n        Price: ${{ menuItem.menu_item_price }}\n      \n    \n\n    \n\n    \n                \n                    ./menu-view.component.scss\n                \n                .menu-item {\n    padding: 10px;\n    margin: 10px;\n    width: 400px; /* Fixed width for each item */\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    height: calc(100% - 20px)\n  }\n  \n  .menu-container {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-around;\n  }\n  \n  .menu-item-image {\n    width: 100%;\n    overflow: hidden;\n    height: auto;\n    margin-bottom: 10px;\n    border-radius: 10%;\n    border: solid 4px black;\n  }\n  \n  .menu-item-name {\n    margin: 5px 0;\n  }\n  \n  .menu-item-price {\n    margin-bottom: 10px;\n  }\n  \n  .menu-item-ingredients ul {\n    list-style-type: none;\n    padding: 0;\n  }\n\n.center {\n    width: 100%;\n    text-align: center;\n    background: radial-gradient(circle at 18.7% 37.8%, rgb(250, 250, 250) 0%, rgb(225, 234, 238) 90%);\n}\n\n.spacer {\n    margin-top: 20px;\n}\n\n.horizontal-list {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n    display: flex;\n}\n\n.horizontal-list li {\n    flex: 1;\n    border: 1px solid rgb(138, 139, 136);\n    padding: 10px;\n    display: flex;\n    flex-direction: column;\n    align-items: right;\n    background-color: #c2ebff;\n    border-radius: 30px;\n}\n\n.menu-items {\n    display: flex;\n    flex-direction: column;\n    margin-top: 5px;\n}\n\n.top-row {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.menu-items p.name {\n    font-size: 20px;\n}\n\n.menu-items p.price {\n    font-size: 18px;\n}\n\n.menu-items p.ingredients {\n    font-size: 12px;\n    text-align: left;\n}\n\n.horizontal-list li+li {\n    margin-left: 10px;\n}\n\n.horizontal-list li p strong {\n    font-size: 24px;\n    justify-content: center;\n}\n\n.transparent-ingredients {\n    color: transparent;\n}\n\n\n.TradNav{\n    width: 100vw;\n    background-color: aqua;\n    position: fixed;\n    left: 0;\n    margin-top: 60px;\n}\n\n.Food-Hold{\n    width: 100%;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    position: relative;\n    text-align: center;\n    padding-top: 30px;\n}\n\n.Food-Item{\n    width:100%;\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: space-between;\n}\n\n.food-im{\n    width: 100%;\n}\n\n.flex-im-text{\n    display: flex;\n    flex-direction: column;\n}\n\n\n.title{\n    text-decoration: underline;\n    color: green;\n    display: flex;\n    padding: 0 5%;\n}\ntable {\n    width: 100%;\n    border-collapse: collapse;\n\n    th,\n    td {\n        border: 1px solid #ddd;\n        padding: 8px;\n        text-align: left;\n    }\n\n    th {\n        background-color: #f2f2f2;\n    }\n\n    tr.category-row {\n        background-color: #e6e6e6;\n    }\n}\n\n.router-menu{\n    text-decoration: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Flavored Tea & Coffee                          Milk-Tea                          Signature Milk Tea                          Slush                          Smoothies                          Employee Creations                          Cart                    Flavored Tea & Coffee                            {{ menuItem.menu_item_name | replaceUnderscores | titlecase }}        Price: ${{ menuItem.menu_item_price }}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'app-authentication-button'},{'name': 'CartModalComponent', 'selector': 'app-cart-modal'},{'name': 'CashierViewComponent', 'selector': 'app-cashier-view'},{'name': 'CheckoutPopupComponent', 'selector': 'app-checkout-popup'},{'name': 'ConfirmationPopupComponent', 'selector': 'app-confirmation-popup'},{'name': 'ContactUsComponent', 'selector': 'app-contact-us'},{'name': 'CustomerViewComponent', 'selector': 'app-customer-view'},{'name': 'EditItemPopupComponent', 'selector': 'app-edit-item-popup'},{'name': 'EmployeeCreationsMenuComponent', 'selector': 'app-employee-creations-menu'},{'name': 'GetRoleComponent', 'selector': 'app-get-role'},{'name': 'LearnMoreComponent', 'selector': 'app-learn-more'},{'name': 'LoginButtonComponent', 'selector': 'app-login-button'},{'name': 'LogoutButtonComponent', 'selector': 'app-logout-button'},{'name': 'ManagerPopupComponent', 'selector': 'app-manager-popup'},{'name': 'ManagerViewComponent', 'selector': 'app-manager-view'},{'name': 'MenuItemComponent', 'selector': 'app-menu-item'},{'name': 'MenuViewComponent', 'selector': 'app-menu-view'},{'name': 'MilkTeaMenuComponent', 'selector': 'app-milk-tea-menu'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuickAddPopupComponent', 'selector': 'app-quick-add-popup'},{'name': 'RestockReportPopupComponent', 'selector': 'app-restock-report-popup'},{'name': 'SeasonalItemPopupComponent', 'selector': 'app-seasonal-item-popup'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'SignatureMilkTeaMenuComponent', 'selector': 'app-signature-milk-tea-menu'},{'name': 'SignupButtonComponent', 'selector': 'app-signup-button'},{'name': 'SlushMenuComponent', 'selector': 'app-slush-menu'},{'name': 'SmoothieMenuComponent', 'selector': 'app-smoothie-menu'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MenuViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MilkTeaMenuComponent.html":{"url":"components/MilkTeaMenuComponent.html","title":"component - MilkTeaMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MilkTeaMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/milk-tea-menu/milk-tea-menu.component.ts\n\n\n\n    \n        Description\n    \n    \n        MilkTeaMenuComponent is responsible for displaying a menu of milk tea items.\nIt fetches and displays a variety of milk tea options available, along with other related categories.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-milk-tea-menu\n            \n\n\n\n            \n                styleUrls\n                ./milk-tea-menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./milk-tea-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                menuItems\n                            \n                            \n                                tableData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchMenuItemsByType\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(menuService: MenuService)\n                    \n                \n                        \n                            \n                                Defined in src/app/milk-tea-menu/milk-tea-menu.component.ts:65\n                            \n                        \n\n                \n                    \n                            Constructor for MilkTeaMenuComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        menuService\n                                                  \n                                                        \n                                                                        MenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to fetch and manage menu items.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchMenuItemsByType\n                        \n                    \n                \n            \n            \n                \nfetchMenuItemsByType(type: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/milk-tea-menu/milk-tea-menu.component.ts:86\n                        \n                    \n\n\n            \n                \n                        Fetches menu items by a specific type.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The type of menu items to fetch (e.g., 'milk_tea').\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/milk-tea-menu/milk-tea-menu.component.ts:77\n                        \n                    \n\n\n            \n                \n                        OnInit lifecycle hook to fetch milk tea menu items.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        menuItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/milk-tea-menu/milk-tea-menu.component.ts:57\n                        \n                    \n\n            \n                \n                    The data to be displayed in the table.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tableData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    { name: 'Flavored Tea', items: [] },\n    { name: 'Milk Tea', items: [] },\n    // ... additional categories\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/milk-tea-menu/milk-tea-menu.component.ts:61\n                        \n                    \n\n            \n                \n                    The data to be displayed in the table.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MenuService } from '../services/menu.service';\n\n/**\n * Interface for a menu item.\n */\n interface MenuItem {\n  /**\n   * The id of the menu item.\n   */\n  menu_item_id: number;\n  /**\n   * The name of the menu item.\n   */\n  menu_item_name: string;\n  /**\n   * The type of the menu item.\n   */\n  menu_item_type: string;\n  /**\n   * The price of the menu item.\n   */\n  menu_item_price: string;\n  /**\n   * The ingredients of the menu item.\n   */\n  ingredients: string[];\n  /**\n   * The image of the menu item.\n   */\n  image: string;\n  /**\n   * The toppings of the menu item.\n   */\n  description: string;\n  /**\n   * The toppings of the menu item.\n   */\n  added_toppings: string[];\n}\n\n/**\n * `MilkTeaMenuComponent` is responsible for displaying a menu of milk tea items.\n * It fetches and displays a variety of milk tea options available, along with other related categories.\n *\n * @Component Decorator that marks the class as an Angular component, specifying the selector, template, and styles.\n */\n@Component({\n  selector: 'app-milk-tea-menu',\n  templateUrl: './milk-tea-menu.component.html',\n  styleUrls: ['./milk-tea-menu.component.scss']\n})\nexport class MilkTeaMenuComponent implements OnInit {\n  /**\n   * The data to be displayed in the table.\n   */\n  menuItems: MenuItem[] = [];\n  /**\n   * The data to be displayed in the table.\n   */\n  tableData: any[] = [\n    { name: 'Flavored Tea', items: [] },\n    { name: 'Milk Tea', items: [] },\n    // ... additional categories\n  ];\n\n  /**\n   * Constructor for `MilkTeaMenuComponent`.\n   * \n   * @param menuService Service to fetch and manage menu items.\n   */\n  constructor(private menuService: MenuService) {}\n\n  /**\n   * OnInit lifecycle hook to fetch milk tea menu items.\n   */\n  ngOnInit(): void {\n    this.fetchMenuItemsByType('milk_tea');\n  }\n\n  /**\n   * Fetches menu items by a specific type.\n   *\n   * @param type The type of menu items to fetch (e.g., 'milk_tea').\n   */\n  fetchMenuItemsByType(type: string): void {\n    this.menuService.getMenuByType(type).subscribe(data => {\n      this.menuItems = [...this.menuItems, ...data];\n    });\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n        \n          Flavored Tea & Coffee\n        \n        \n          Milk-Tea\n        \n        \n          Signature Milk Tea\n        \n        \n          Slush\n        \n        \n          Smoothies\n        \n        \n          Employee Creations\n        \n        \n          Cart\n        \n      \n    \n  \n\n\n\n\n\n\nMilk-Tea\n\n    \n      \n        \n        {{ menuItem.menu_item_name | replaceUnderscores | titlecase }}\n        Price: ${{ menuItem.menu_item_price }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./milk-tea-menu.component.scss\n                \n                .menu-item {\n    padding: 10px;\n    margin: 10px;\n    width: 400px; /* Fixed width for each item */\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    height: calc(100% - 20px)\n  }\n  \n  .menu-container {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-around;\n  }\n  \n  .menu-item-image {\n    width: 100%;\n    overflow: hidden;\n    height: auto;\n    margin-bottom: 10px;\n    border-radius: 10%;\n    border: solid 4px black;\n  }\n  \n  .menu-item-name {\n    margin: 5px 0;\n  }\n  \n  .menu-item-price {\n    margin-bottom: 10px;\n  }\n  \n  .menu-item-ingredients ul {\n    list-style-type: none;\n    padding: 0;\n  }\n.center {\n    width: 100%;\n    text-align: center;\n}\n\n.spacer {\n    margin-top: 20px;\n}\n\n.horizontal-list {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n    display: flex;\n}\n\n.horizontal-list li {\n    flex: 1;\n    border: 1px solid rgb(138, 139, 136);\n    padding: 10px;\n    display: flex;\n    flex-direction: column;\n    align-items: right;\n    background-color: #c2ebff;\n    border-radius: 30px;\n}\n\n.menu-items {\n    display: flex;\n    flex-direction: column;\n    margin-top: 5px;\n}\n\n.top-row {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.menu-items p.name {\n    font-size: 20px;\n}\n\n.menu-items p.price {\n    font-size: 18px;\n}\n\n.menu-items p.ingredients {\n    font-size: 12px;\n    text-align: left;\n}\n\n.horizontal-list li+li {\n    margin-left: 10px;\n}\n\n.horizontal-list li p strong {\n    font-size: 24px;\n    justify-content: center;\n}\n\n.transparent-ingredients {\n    color: transparent;\n}\n\n\n.TradNav{\n    width: 100vw;\n    background-color: aqua;\n    position: fixed;\n    left: 0;\n    margin-top: 55px;\n}\n\n.Food-Hold{\n    width: 100%;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    position: relative;\n    text-align: center;\n    padding-top: 30px;\n}\n\n.Food-Item{\n    width: 30%;\n    text-align: center;\n}\n\n.food-im{\n    width: 100%;\n}\n\n.flex-im-text{\n    display: flex;\n    flex-direction: column;\n}\n\n\n.title{\n    text-decoration: underline;\n    color: green;\n    display: flex;\n    padding: 0 5%;\n}\ntable {\n    width: 100%;\n    border-collapse: collapse;\n\n    th,\n    td {\n        border: 1px solid #ddd;\n        padding: 8px;\n        text-align: left;\n    }\n\n    th {\n        background-color: #f2f2f2;\n    }\n\n    tr.category-row {\n        background-color: #e6e6e6;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Flavored Tea & Coffee                          Milk-Tea                          Signature Milk Tea                          Slush                          Smoothies                          Employee Creations                          Cart                    Milk-Tea                          {{ menuItem.menu_item_name | replaceUnderscores | titlecase }}        Price: ${{ menuItem.menu_item_price }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'app-authentication-button'},{'name': 'CartModalComponent', 'selector': 'app-cart-modal'},{'name': 'CashierViewComponent', 'selector': 'app-cashier-view'},{'name': 'CheckoutPopupComponent', 'selector': 'app-checkout-popup'},{'name': 'ConfirmationPopupComponent', 'selector': 'app-confirmation-popup'},{'name': 'ContactUsComponent', 'selector': 'app-contact-us'},{'name': 'CustomerViewComponent', 'selector': 'app-customer-view'},{'name': 'EditItemPopupComponent', 'selector': 'app-edit-item-popup'},{'name': 'EmployeeCreationsMenuComponent', 'selector': 'app-employee-creations-menu'},{'name': 'GetRoleComponent', 'selector': 'app-get-role'},{'name': 'LearnMoreComponent', 'selector': 'app-learn-more'},{'name': 'LoginButtonComponent', 'selector': 'app-login-button'},{'name': 'LogoutButtonComponent', 'selector': 'app-logout-button'},{'name': 'ManagerPopupComponent', 'selector': 'app-manager-popup'},{'name': 'ManagerViewComponent', 'selector': 'app-manager-view'},{'name': 'MenuItemComponent', 'selector': 'app-menu-item'},{'name': 'MenuViewComponent', 'selector': 'app-menu-view'},{'name': 'MilkTeaMenuComponent', 'selector': 'app-milk-tea-menu'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuickAddPopupComponent', 'selector': 'app-quick-add-popup'},{'name': 'RestockReportPopupComponent', 'selector': 'app-restock-report-popup'},{'name': 'SeasonalItemPopupComponent', 'selector': 'app-seasonal-item-popup'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'SignatureMilkTeaMenuComponent', 'selector': 'app-signature-milk-tea-menu'},{'name': 'SignupButtonComponent', 'selector': 'app-signup-button'},{'name': 'SlushMenuComponent', 'selector': 'app-slush-menu'},{'name': 'SmoothieMenuComponent', 'selector': 'app-smoothie-menu'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MilkTeaMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavMenuComponent.html":{"url":"components/NavMenuComponent.html","title":"component - NavMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/nav-menu/nav-menu.component.ts\n\n\n\n    \n        Description\n    \n    \n        NavMenuComponent handles the navigation menu of the application.\nIt includes functionality for search, magnification, and managing user roles based on authentication status.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-nav-menu\n            \n\n\n\n            \n                styleUrls\n                ./nav-menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./nav-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                    Public\n                                dataService\n                            \n                            \n                                lensSize\n                            \n                            \n                                magnifierEnabled\n                            \n                            \n                                pageReady\n                            \n                            \n                                searchQuery\n                            \n                            \n                                showSearch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                toggleMagnifier\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, dataService: DataService, magnifierService: MagnifierService)\n                    \n                \n                        \n                            \n                                Defined in src/app/nav-menu/nav-menu.component.ts:37\n                            \n                        \n\n                \n                    \n                            Constructor for NavMenuComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for Auth0 authentication.\n\n                                                        \n                                                \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to check user roles.\n\n                                                        \n                                                \n                                                \n                                                        magnifierService\n                                                  \n                                                        \n                                                                        MagnifierService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to manage the magnifier feature.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/nav-menu/nav-menu.component.ts:55\n                        \n                    \n\n\n            \n                \n                        OnInit lifecycle hook to initialize component properties and subscribe to user data for role management.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMagnifier\n                        \n                    \n                \n            \n            \n                \ntoggleMagnifier()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/nav-menu/nav-menu.component.ts:67\n                        \n                    \n\n\n            \n                \n                        Toggles the magnifier feature on or off.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/nav-menu/nav-menu.component.ts:47\n                        \n                    \n\n            \n                \n                    Service for Auth0 authentication.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dataService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/nav-menu/nav-menu.component.ts:48\n                        \n                    \n\n            \n                \n                    Service to check user roles.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lensSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 150\n                    \n                \n                    \n                        \n                                Defined in src/app/nav-menu/nav-menu.component.ts:33\n                        \n                    \n\n            \n                \n                    The size of the magnifier lens.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        magnifierEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/nav-menu/nav-menu.component.ts:29\n                        \n                    \n\n            \n                \n                    The search results to be displayed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageReady\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/nav-menu/nav-menu.component.ts:37\n                        \n                    \n\n            \n                \n                    The size of the magnifier lens.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/nav-menu/nav-menu.component.ts:25\n                        \n                    \n\n            \n                \n                    The search query entered by the user.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSearch\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/nav-menu/nav-menu.component.ts:21\n                        \n                    \n\n            \n                \n                    The search query entered by the user.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '@auth0/auth0-angular';\nimport { DataService } from '../components/get-role/get-role.service';\nimport { MagnifierService } from '../services/Magnifier.service';\n\n/**\n * `NavMenuComponent` handles the navigation menu of the application.\n * It includes functionality for search, magnification, and managing user roles based on authentication status.\n *\n * @Component Decorator that marks the class as an Angular component, specifying the selector, template, and styles.\n */\n@Component({\n  selector: 'app-nav-menu',\n  templateUrl: './nav-menu.component.html',\n  styleUrls: ['./nav-menu.component.scss']\n})\nexport class NavMenuComponent implements OnInit {\n  /**\n   * The search query entered by the user.\n   */\n  showSearch = false;\n  /**\n   * The search query entered by the user.\n   */\n  searchQuery = '';\n  /**\n   * The search results to be displayed.\n   */\n  magnifierEnabled = false;\n  /**\n   * The size of the magnifier lens.\n   */\n  lensSize = 150; // Size of the magnifier lens\n  /**\n   * The size of the magnifier lens.\n   */\n  pageReady = false;\n\n  /**\n   * Constructor for `NavMenuComponent`.\n   * \n   * @param auth Service for Auth0 authentication.\n   * @param dataService Service to check user roles.\n   * @param magnifierService Service to manage the magnifier feature.\n   */\n  constructor(\n    public auth: AuthService,\n    public dataService: DataService,\n    private magnifierService: MagnifierService\n  ) {}\n\n  /**\n   * OnInit lifecycle hook to initialize component properties and subscribe to user data for role management.\n   */\n  ngOnInit(): void {\n    this.auth.user$.subscribe(user => {\n      // User role check and other initialization logic\n    });\n    setTimeout(() => {\n      this.pageReady = true;\n    }, 2000); // Delay to ensure page is ready\n  }\n\n  /**\n   * Toggles the magnifier feature on or off.\n   */\n  toggleMagnifier(): void {\n    this.magnifierService.toggleMagnifier();\n  }\n\n  // Additional methods, if any, can be documented here\n}\n\n    \n\n    \n        \n  \n    \n      BonAppeTea\n      \n     \n    \n      🔍\n    \n    \n      \n        \n          \n            \n          \n          \n            Customer\n          \n           -->\n            \n            Cashier\n          \n           \n           -->\n            \n            Manager\n          \n          \n            Menu Board\n                 \n          \n            \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./nav-menu.component.scss\n                \n                a.navbar-brand {\n  white-space: normal;\n  text-align: center;\n  word-break: break-all;\n  z-index: 100;\n}\n\nhtml {\n  font-size: 14px;\n}\n\n@media (min-width: 768px) {\n  html {\n    font-size: 16px;\n  }\n}\n\n.box-shadow {\n  box-shadow: 0 .25rem .75rem rgba(0, 0, 0, .05);\n  z-index: 100;\n}\n\n.container {\n  display: flex;\n  width: 100%;\n\n}\n\n.fixed{\n  position: fixed;\n  width: 100vw;\n}\n\n.search-input {\n  background: rgba(255, 255, 255, 0.7);\n  border: none;\n  border-radius: 15px;\n  padding: 8px 15px;\n  width: 200px;\n}\n\n\n#google_translate_element {\n  display: inline-block; /* or other display modes as per your layout */\n  margin: 0 10px; /* adjust spacing as needed */\n  vertical-align: middle; /* aligns vertically in the navbar */\n}\n\n.goog-te-combo {\n  width: 50px !important;\n  height: 20px;\n  font-size: 10px;\n}\n\n.goog-te-gadget {\n  font-family: arial;\n  font-size: 11px;\n  color: #000;\n  white-space: nowrap;\n}\n\n.magnify * {\n  transform: scale(1.2);\n  transform-origin: center;\n}\n\n.magnifier-lens {\n  position: absolute;\n  border: 2px solid #000;\n  border-radius: 50%;\n  width: 150px; /* Adjust as needed */\n  height: 150px;\n  visibility: hidden; /* Start hidden */\n  pointer-events: none; /* Allows clicking through the lens */\n  z-index: 1000;\n  background-repeat: no-repeat;\n  background-size: 800px 600px; /* This should be larger to create the magnifying effect */\n  visibility: hidden;\n}\n\n\n.magnified-content {\n  transform: scale(2); /* Adjust the scale for the level of magnification */\n  transform-origin: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            BonAppeTea                     🔍                                                                            Customer                     -->                        Cashier                                -->                        Manager                                Menu Board                                                                     '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'app-authentication-button'},{'name': 'CartModalComponent', 'selector': 'app-cart-modal'},{'name': 'CashierViewComponent', 'selector': 'app-cashier-view'},{'name': 'CheckoutPopupComponent', 'selector': 'app-checkout-popup'},{'name': 'ConfirmationPopupComponent', 'selector': 'app-confirmation-popup'},{'name': 'ContactUsComponent', 'selector': 'app-contact-us'},{'name': 'CustomerViewComponent', 'selector': 'app-customer-view'},{'name': 'EditItemPopupComponent', 'selector': 'app-edit-item-popup'},{'name': 'EmployeeCreationsMenuComponent', 'selector': 'app-employee-creations-menu'},{'name': 'GetRoleComponent', 'selector': 'app-get-role'},{'name': 'LearnMoreComponent', 'selector': 'app-learn-more'},{'name': 'LoginButtonComponent', 'selector': 'app-login-button'},{'name': 'LogoutButtonComponent', 'selector': 'app-logout-button'},{'name': 'ManagerPopupComponent', 'selector': 'app-manager-popup'},{'name': 'ManagerViewComponent', 'selector': 'app-manager-view'},{'name': 'MenuItemComponent', 'selector': 'app-menu-item'},{'name': 'MenuViewComponent', 'selector': 'app-menu-view'},{'name': 'MilkTeaMenuComponent', 'selector': 'app-milk-tea-menu'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuickAddPopupComponent', 'selector': 'app-quick-add-popup'},{'name': 'RestockReportPopupComponent', 'selector': 'app-restock-report-popup'},{'name': 'SeasonalItemPopupComponent', 'selector': 'app-seasonal-item-popup'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'SignatureMilkTeaMenuComponent', 'selector': 'app-signature-milk-tea-menu'},{'name': 'SignupButtonComponent', 'selector': 'app-signup-button'},{'name': 'SlushMenuComponent', 'selector': 'app-slush-menu'},{'name': 'SmoothieMenuComponent', 'selector': 'app-smoothie-menu'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrderHistory.html":{"url":"classes/OrderHistory.html","title":"class - OrderHistory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrderHistory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/order-history.ts\n        \n\n\n            \n                Description\n            \n            \n                Contains details about an order's history, including timestamp, ID, items, total amount, and IDs of employee and customer.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                customer_id\n                            \n                            \n                                    Optional\n                                employee_id\n                            \n                            \n                                    Optional\n                                order_id\n                            \n                            \n                                    Optional\n                                order_items\n                            \n                            \n                                    Optional\n                                order_timestamp\n                            \n                            \n                                    Optional\n                                order_total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        customer_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/order-history.ts:28\n                        \n                    \n\n            \n                \n                    The id of the customer who placed the order.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        employee_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/order-history.ts:24\n                        \n                    \n\n            \n                \n                    The id of the employee who took the order.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        order_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/order-history.ts:12\n                        \n                    \n\n            \n                \n                    The id of the order.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        order_items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/order-history.ts:16\n                        \n                    \n\n            \n                \n                    The items in the order.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        order_timestamp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/order-history.ts:8\n                        \n                    \n\n            \n                \n                    The timestamp of the order.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        order_total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/order-history.ts:20\n                        \n                    \n\n            \n                \n                    The total amount of the order.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class OrderHistory {\n    /**\n     * The timestamp of the order.\n     */\n    order_timestamp?: Date;\n    /**\n     * The id of the order.\n     */\n    order_id?: number;\n    /**\n     * The items in the order.\n     */\n    order_items?: string[];\n    /**\n     * The total amount of the order.\n     */\n    order_total?: number;\n    /**\n     * The id of the employee who took the order.\n     */\n    employee_id?: number;\n    /**\n     * The id of the customer who placed the order.\n     */\n    customer_id?: number;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderHistoryService.html":{"url":"injectables/OrderHistoryService.html","title":"injectable - OrderHistoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderHistoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/order-history.service.ts\n        \n\n\n            \n                Description\n            \n            \n                OrderHistoryService manages order history data, providing methods to retrieve and manipulate it.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIng\n                            \n                            \n                                getIngridents\n                            \n                            \n                                getOrderHistory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/order-history.service.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor for OrderHistoryService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The HttpClient module to make HTTP requests.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getIng\n                        \n                    \n                \n            \n            \n                \ngetIng()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/order-history.service.ts:41\n                        \n                    \n\n\n            \n                \n                        Method to get ingredients.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable of type any.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIngridents\n                        \n                    \n                \n            \n            \n                \ngetIngridents()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/order-history.service.ts:34\n                        \n                    \n\n\n            \n                \n                        Method to get ingredients.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable of type any.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOrderHistory\n                        \n                    \n                \n            \n            \n                \ngetOrderHistory()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/order-history.service.ts:27\n                        \n                    \n\n\n            \n                \n                        Method to get order history.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable of type any.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.apiUrl}/order-history`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/order-history.service.ts:14\n                        \n                    \n\n            \n                \n                    The base URL for the order history API.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n/**\n * `OrderHistoryService` manages order history data, providing methods to retrieve and manipulate it.\n */\n@Injectable({ providedIn: 'root' })\nexport class OrderHistoryService {\n  /**\n   * The base URL for the order history API.\n   */\n  private baseUrl = `${environment.apiUrl}/order-history`;\n  /**\n   * Constructor for `OrderHistoryService`.\n   * @param http The HttpClient module to make HTTP requests.\n   */\n  constructor(private http: HttpClient) {}\n\n  // Methods: getOrderHistory, getIngredients, getIng\n\n  /**\n   * Method to get order history.\n   * @returns Observable of type any.\n   */\n  getOrderHistory(): Observable {\n    return this.http.get(this.baseUrl);\n  }\n  /**\n   * Method to get ingredients.\n   * @returns Observable of type any.\n   */\n  getIngridents(): Observable {\n    return this.http.get(this.baseUrl+\"/ingredients\");\n  }\n  /**\n   * Method to get ingredients.\n   * @returns Observable of type any.\n   */\n  getIng(): Observable {\n    return this.http.get(this.baseUrl+\"/ogIn\");\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrderItem.html":{"url":"interfaces/OrderItem.html","title":"interface - OrderItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrderItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/manager-view/manager-view.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the model for the order item.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            item_name\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        item_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        item_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The item's id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The item's quantity\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MenuService } from '../services/menu.service';\nimport { IngredientsService } from '../services/ingredients.service';\nimport { InventoryService } from '../services/inventory.service';\nimport { OrderHistoryService } from '../services/order-history.service';\nimport { FormsModule } from '@angular/forms';\nimport { forkJoin } from 'rxjs';\n/**\n * This is the model for the table configuration.\n */\ninterface TableConfig {\n  /**\n   * The table's title\n   */\n  columns: TableColumn[];\n}\n/**\n *  This is the model for the table column.\n */\ninterface TableColumn {\n  // The column's key\n  /**\n   * The column's key\n   */\n  key: string;\n  /**\n   * The column's header\n   */\n  // The column's header\n  header: string;\n}\n/**\n * This is the model for the table row.\n */\ninterface InventoryMap {\n  // The row's key\n  /**\n   * The row's key\n   */\n  [key: string]: number;\n}\n/**\n * This is the model for the inventory item.\n */\ninterface InventoryItem {\n  // The item's id\n  /**\n   * The item's id\n   */\n  item_id: number;\n  /**\n   * The item's name\n   */\n  // The item's name\n  item_name: string;\n  /**\n   * The item's quantity\n   */\n  // The item's quantity\n  item_quantity: number;\n}\n/**\n * This is the model for the sales summary.\n */\ninterface SalesSummary {\n  // The row's key\n  /**\n   * The row's key\n   */\n  [key: string]: number; // Adjust the key type if necessary\n}\n\n// Define an interface for the order item\n/**\n * This is the model for the order item.\n */\ninterface OrderItem {\n  /**\n   * The item's id\n   */\n  // The item's id\n  item_name: string;\n  /**\n   * The item's quantity\n   */\n   // or item_id if it's a number\n  quantity: number;\n}\n\n/**\n * `ManagerViewComponent` serves as the main interface for the manager's dashboard.\n * It handles operations related to menu management, ingredients, inventory, and order history,\n * providing functionalities to refresh and manipulate these data sets.\n *\n * @Component Decorator that marks the class as an Angular component and provides metadata about the component.\n */\n @Component({\n  selector: 'app-manager-view',\n  templateUrl: './manager-view.component.html',\n  styleUrls: ['./manager-view.component.scss']\n})\nexport class ManagerViewComponent implements OnInit {\n  // Component properties\n  /**\n   * Boolean to track if the current user is a manager.\n   */\n  showPopup: boolean = false;\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  showRestockReportPopup: boolean = false;\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  popupTitle: string = '';\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  start: string = '';\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  end: string = '';\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  popupContent: any;\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  menu: any[] = [];\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  ingredients: any[] = [];\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  inventory: any[] = [];\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  orderHistory: any[] = [];\n\n  /**\n   * Constructor for `ManagerViewComponent`.\n   * \n   * @param MenuService Service to manage menu items.\n   * @param IngredientsService Service to manage ingredients.\n   * @param InventoryService Service to manage inventory.\n   * @param OrderHistoryService Service to manage order history.\n   */\n  constructor(\n    private MenuService: MenuService, \n    private IngredientsService: IngredientsService, \n    private InventoryService: InventoryService, \n    private OrderHistoryService: OrderHistoryService\n  ) {}\n\n  /**\n   * OnInit lifecycle hook for initial component setup.\n   */\n  ngOnInit(): void {\n    // Initialization logic can go here\n  }\n\n  /**\n   * Refreshes the menu items by fetching the latest data from the `MenuService`.\n   */\n  refreshMenu(): void {\n    this.MenuService.getMenu().subscribe(items => {\n      // Refresh menu logic\n    });\n  }\n  \n  /**\n   * Refreshes the ingredients by fetching the latest data from the `IngredientsService`.\n   */\n  refreshIngredients(): void {\n    this.IngredientsService.getIngredients().subscribe(ingredients => {\n      // Refresh ingredients logic\n    });\n  }\n  \n  /**\n   * Refreshes the inventory by fetching the latest data from the `InventoryService`.\n   */\n  refreshInventory(): void {\n    this.InventoryService.getInventory().subscribe(invItems => {\n      // Refresh inventory logic\n    });\n  }\n\n  /**\n   * Refreshes the order history by fetching the latest data from the `OrderHistoryService`.\n   */\n  lowInventItems: any[] = [];\n  /**\n   * Get all of the elements that have only sold 10 percent of their stock\n   */\n  lowIngredItems: any[] = [];\n  /**\n   * Get all of the elements that have only sold 10 percent of their stock\n   */\n  getLowStock(): void {\n    this.InventoryService.getInventory().subscribe(invItems => {\n      this.inventory = invItems;\n\n      this.lowInventItems = this.inventory.filter(item => item.item_quantity  {\n        item.item_quantity_to_order = 1500 - item.item_quantity;\n      });\n    });\n\n    this.IngredientsService.getIngredients().subscribe(ingredients => {\n      this.ingredients = ingredients;\n      \n      this.lowIngredItems = this.ingredients.filter(item => item.ingredient_quantity  {\n        item.item_quantity_to_order = 1500 - item.ingredient_quantity;\n        item.item_name = item.ingredient_name;\n        item.item_quantity = item.ingredient_quantity;\n      });\n      const temp = [...this.lowInventItems, ...this.lowIngredItems];\n\n      temp.forEach(item => {\n        item.item_name = this.formatCamelCase(item.item_name);\n      });\n      this.popupContent = temp\n    });\n  }  \n\n  /**\n   * gets the sales from that time period\n   * @param start \n   * @param end \n   */\n  refreshSales(start: string, end: string): void {\n    this.OrderHistoryService.getOrderHistory().subscribe(ordItems => {\n      this.orderHistory = ordItems;\n\n      const startDate = new Date(start);\n      startDate.setUTCHours(0, 0, 0, 0);\n\n      const endDate = new Date(end);\n      endDate.setUTCHours(23, 59, 59, 999);\n\n      // console.log(ordItems);\n      // console.log(startDate);\n      // console.log(endDate);\n\n      const ItemsInRange = this.orderHistory.filter(order => {\n        const orderDate = new Date(order.order_timestamp);\n        return orderDate > startDate && orderDate  {\n        item.order_items = this.formatOrderItems(item.order_items);\n      });\n\n      console.log(ItemsInRange)\n\n      this.popupContent = ItemsInRange;\n    });\n  }\n  /**\n   * gets the sales from that time period\n   * @param start \n   * @param end \n   */\n  getExcess(start: string, end: string): void {\n    let inventory_ingrident_map = new Map();\n    // const additionalItems = ['napkins', 'plastic_seals', 'cups', 'straws'];\n    this.OrderHistoryService.getIngridents().subscribe(\n      data => {\n        data.forEach((item: { menu_item_name: string; ingredients: string[]; }) => {\n          let itemIngredients = item.ingredients.slice(); // Create a copy of the ingredients array\n\n          // // Check if the item has more than one ingredient and add additional items if so\n          // if (itemIngredients.length > 1) {\n          //   itemIngredients = itemIngredients.concat(additionalItems);\n          // }\n\n          inventory_ingrident_map.set(item.menu_item_name, itemIngredients);\n        });\n        console.log(inventory_ingrident_map); // This will log the map with the data\n      },\n      error => {\n        console.error('Error:', error); // This will log any error that occurs during the request\n      }\n    );\n\n    let ogIngrdientmap = new Map();\n      this.OrderHistoryService.getIng().subscribe(\n        data => {\n          data.forEach((item: { ingredient_name: string;  ingredient_quantity : number; }) => {\n            ogIngrdientmap.set(item.ingredient_name, item.ingredient_quantity);\n        });\n        console.log(ogIngrdientmap)\n      },\n        error => {\n          console.error('Error:', error); // This will log any error that occurs during the request\n        }\n      );\n    this.OrderHistoryService.getOrderHistory().subscribe(ordItems => {\n      this.orderHistory = ordItems;\n\n      // Initialize initialInventory\n      const initialInventory: InventoryMap = {};\n      this.InventoryService.getInventory().subscribe((inventoryItems: InventoryItem[]) => {\n        inventoryItems.forEach((item: InventoryItem) => {\n          initialInventory[item.item_name] = item.item_quantity;\n        });\n\n        console.log(initialInventory); // Log the map of item counts\n      });\n\n      const startDate = new Date(start);\n      startDate.setUTCHours(0, 0, 0, 0);\n  \n      const endDate = new Date(end);\n      endDate.setUTCHours(23, 59, 59, 999);\n  \n      const itemsInRange = this.orderHistory.filter(order => {\n        const orderDate = new Date(order.order_timestamp);\n        return orderDate >= startDate && orderDate ();\n      itemsInRange.forEach(order => {\n      order.order_items.forEach((item: OrderItem) => {\n        //@ts-ignore\n        const ingredients = inventory_ingrident_map.get(item) || [];\n        ingredients.forEach(ingredient => {\n          const currentCount = ingredientCountMap.get(ingredient) || 0;\n          ingredientCountMap.set(ingredient, currentCount + 1);\n        });\n      });\n    });\n\n    console.log(\"Ingredient Usage Count:\", ingredientCountMap);\n      // console.log(\"passed sales\")\n      let excessIngredients: { excessIngredients: string }[] = [];\n      ingredientCountMap.forEach((count, ingredient) => {\n        //@ts-ignore\n        if(count  {\n      let formattedItem = item.replace(/_/g, ' ');\n  \n      formattedItem = formattedItem.replace(/\\w\\S*/g, (word) => {\n        return word.charAt(0).toUpperCase() + word.substr(1).toLowerCase();\n      });\n  \n      return formattedItem;\n    });\n  \n    return formatted.join(', ');\n  }\n  /**\n   * Takes a string of items formatted with _ for a space and fixes them\n   * @param ordItem \n   * @returns formatted string\n   */\n  //Same as above but for only one string\n  formatSingleUnderscore(ordItem: string): string {\n    let formattedItem = ordItem.replace(/_/g, ' ');\n  \n    formattedItem = formattedItem.replace(/\\w\\S*/g, (word) => {\n      return word.charAt(0).toUpperCase() + word.substr(1).toLowerCase();\n    });\n  \n    return formattedItem;\n  }\n  /**\n   * Takes a string of items formatted with camelCase and fixes them\n   * @param name \n   * @returns formatted string\n   */\n  // Fixes camelCase words (one string)\n  formatCamelCase(name: string): string {\n    return name.replace(/([A-Z])/g, ' $1').replace(/^./, function(str){ return str.toUpperCase(); });\n  }\n  /**\n   * Takes a string of items formatted with camelCase and fixes them\n   * @param names \n   * @returns formatted string\n   */\n  // Same as above but for array of strings\n  formatCamelCaseArray(names: string[]): string[] {\n    return names.map(name => {\n      return name.replace(/([A-Z])/g, ' $1').replace(/^./, function(str){ return str.toUpperCase(); }).split(',').join(', ');\n    });\n  }\n  \n  /**\n   * This function is called when the user clicks on the \"View Inventory\" button\n   */\n  tableConfig?: TableConfig;\n/**\n * This hold all of the possible table configs for the value\n */\n  menuTableConfig: TableConfig = {\n    columns: [\n      { key: 'menu_item_id', header: 'ID' },\n      { key: 'menu_item_name', header: 'Name' },\n      { key: 'menu_item_type', header: 'Type' },\n      { key: 'menu_item_price', header: 'Price' },\n      { key: 'ingredients', header: 'Ingredients' }\n    ]\n  };\n  /**\n   * This hold all of the possible table configs for the value\n   */\n  ingredientsTableConfig: TableConfig = {\n    columns: [\n      { key: 'ingredient_id', header: 'ID' },\n      { key: 'ingredient_name', header: 'Name' },\n      { key: 'ingredient_quantity', header: 'Quantity' }\n    ]\n  };\n/**\n * This hold all of the possible table configs for the value\n */\n  inventoryTableConfig: TableConfig = {\n    columns: [\n      { key: 'item_id', header: 'ID' },\n      { key: 'item_name', header: 'Name' },\n      { key: 'item_quantity', header: 'Quantity' }\n    ]\n  };\n/**\n * This hold all of the possible table configs for the value\n */\n  restockReport: TableConfig = {\n    columns: [\n      { key: 'item_name', header: 'Name' },\n      { key: 'item_quantity', header: 'Current Quantity' },\n      { key: 'item_quantity_to_order', header: 'Amount to Order' }\n    ]\n  };\n/**\n * This hold all of the possible table configs for the value\n */\n  salesReport: TableConfig = {\n    columns: [\n      { key: 'order_timestamp', header: 'Date' },\n      { key: 'order_total', header: 'Price' },\n      { key: 'order_items', header: 'Items Ordered' }\n    ]\n  };\n/**\n * This hold all of the possible table configs for the value\n */\n  excessReport: TableConfig = {\n    columns: [\n      { key: 'excessIngredients',  header: 'Excess Item' }\n    ]\n  };\n  /**\n   * This hold all of the possible table configs for the value\n   * @param type \n   */\n  openPopup(type: string) {\n    this.showPopup = true;\n    switch (type) {\n      case 'menu':\n        this.popupTitle = 'Edit Menu';\n        this.tableConfig = this.menuTableConfig;\n        this.refreshMenu();\n        break;\n      case 'ingredients':\n        this.popupTitle = 'Edit Ingredients';\n        this.tableConfig = this.ingredientsTableConfig;\n        this.refreshIngredients();\n        break;\n      case 'inventory':\n        this.popupTitle = 'Edit Inventory';\n        this.tableConfig = this.inventoryTableConfig;\n        this.refreshInventory();\n        break;\n      }\n  }\n\n  // ACTION BUTTONS\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  showEditPopup: boolean = false;\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  selectedItem: any = null;\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  currentAction: 'edit' | 'delete' | 'add' | null = null;\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   * @param item \n   */\n  editRow(item: any): void {\n    console.log('Editing item, opening edit popup', item);\n    this.currentAction = 'edit';\n    this.selectedItem = item;\n    if (this.popupTitle === 'Edit Menu') {\n      this.editType = 'menu';\n    } else if (this.popupTitle === 'Edit Ingredients') {\n      this.editType = 'ingredients';\n    } else if (this.popupTitle === 'Edit Inventory') {\n      this.editType = 'inventory';\n    }\n    if (this.editType === 'menu') {\n      this.popupTitle = 'Edit Menu';\n    } else if (this.editType === 'ingredients') {\n      this.popupTitle = 'Edit Ingredients';\n    } else if (this.editType === 'inventory') {\n      this.popupTitle = 'Edit Inventory';\n    }\n    this.showPopup = false;\n    this.showEditPopup = true;\n  }  \n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   * @param item \n   */\n  deleteRow(item: any): void {\n    console.log('Deleting item:', item);\n    if (this.editType === 'menu') {\n      this.popupTitle = 'Edit Menu';\n    } else if (this.editType === 'ingredients') {\n      this.popupTitle = 'Edit Ingredients';\n    } else if (this.editType === 'inventory') {\n      this.popupTitle = 'Edit Inventory';\n    }\n    this.currentAction = 'delete';\n    this.selectedItem = item;\n    this.showConfirmationPopup = true;\n    this.showPopup = false;\n  }\n\n  // EDIT CONFIRMATIONS\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  onEditCancel(): void {\n    this.selectedItem = null;\n    this.showEditPopup = false;\n    this.showPopup = true; // Reopen the main popup if needed\n  }\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   * @param editedItem \n   */\n  onItemSave(editedItem: any): void {\n    // Process the edited item\n    if (this.popupTitle === 'Edit Menu') {\n      this.refreshMenu();\n    } else if (this.popupTitle === 'Edit Ingredients') {\n      this.refreshIngredients();\n    } else if (this.popupTitle === 'Edit Inventory') {\n      this.refreshInventory();\n    }\n    this.selectedItem = editedItem;\n    this.showEditPopup = false;\n    this.showConfirmationPopup = true;\n  }  \n\n  // CONFIRMATION POPUP\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  showConfirmationPopup: boolean = false;\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  editType: 'menu' | 'ingredients' | 'inventory' | null = null;\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   * @param item \n   */\n  onItemConfirm(item: any): void {\n    this.selectedItem = item;\n    this.showConfirmationPopup = false;\n    if (this.popupTitle === 'Edit Menu') {\n      if (this.currentAction === 'edit') {\n        this.MenuService.editMenuItem(item.menu_item_id, item).subscribe(() => {\n          this.refreshMenu();\n        });\n      } else if (this.currentAction === 'delete') {\n        console.log('Deleting menu item', item);\n        this.MenuService.deleteMenuItem(item.menu_item_id).subscribe(() => {\n          this.refreshMenu();\n        });\n      }\n    } else if (this.popupTitle === 'Edit Ingredients') {\n      if (this.currentAction === 'edit') {\n        this.IngredientsService.editIngredient(item.ingredient_id, item).subscribe(() => {\n          this.refreshIngredients();\n        });\n      } else if (this.currentAction === 'delete') {\n        this.IngredientsService.deleteIngredient(item.ingredient_id).subscribe(() => {\n          this.refreshIngredients();\n        });\n      }\n    } else if (this.popupTitle === 'Edit Inventory') {\n      if (this.currentAction === 'edit') {\n        this.InventoryService.editInventoryItem(item.item_id, item).subscribe(() => {\n          this.refreshInventory();\n        });\n      } else if (this.currentAction === 'delete') {\n        this.InventoryService.deleteInventoryItem(item.item_id).subscribe(() => {\n          this.refreshInventory();\n        });\n      }\n    } else if (this.popupTitle === 'Quick Add') {\n      if (this.editType === 'menu') {\n        this.MenuService.addMenuItem(item).subscribe(() => {\n          this.refreshMenu();\n        });\n        console.log('Adding menu item', item.menu_item_name);\n      } else if (this.editType === 'ingredients') {\n        this.IngredientsService.addIngredient(item).subscribe(() => {\n          this.refreshIngredients();\n        });\n      } else if (this.editType === 'inventory') {\n        this.InventoryService.addInventoryItem(item).subscribe(() => {\n          this.refreshInventory();\n        });\n      }\n    }\n    this.showPopup = true;\n    if (this.popupTitle === 'Add Seasonal Item') {\n      this.MenuService.addMenuItem(item).subscribe(() => {\n        this.refreshMenu();\n      });\n      this.showPopup = false;\n    }\n  }\n/**\n * This function is called when the user clicks on the \"Add\" button\n */\n  onItemDecline(): void {\n    this.showConfirmationPopup = false;\n    if (this.popupTitle === 'Edit Menu') {\n      this.showPopup = true;\n    } else if (this.popupTitle === 'Edit Ingredients') {\n      this.showPopup = true;\n    } else if (this.popupTitle === 'Edit Inventory') {\n      this.showPopup = true;\n    } else if (this.popupTitle === 'Quick Add') {\n      this.showQuickAddPopup = true;\n    } else if (this.popupTitle === 'Add Seasonal Item') {\n      this.showSeasonalItemPopup = true;\n    }\n  }\n\n  // QUICK ADD POPUP\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  showQuickAddPopup: boolean = false;\n/**\n *  This function is called when the user clicks on the \"Add\" button\n * @param type \n */\n  quickAdd(type: string): void {\n    if (this.popupTitle === 'Edit Menu') {\n      this.editType = 'menu';\n    } else if (this.popupTitle === 'Edit Ingredients') {\n      this.editType = 'ingredients';\n    } else if (this.popupTitle === 'Edit Inventory') {\n      this.editType = 'inventory';\n    }\n    this.popupTitle = 'Quick Add';\n    console.log('Quick add');\n    this.showPopup = false;\n    this.showQuickAddPopup = true;\n  }\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  onQuickAddCancel(): void {\n    this.showQuickAddPopup = false;\n    this.showPopup = true;\n  }\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   * @param newItem \n   */\n  onItemAdd(newItem: any): void {\n    // Process the new item\n    this.currentAction = 'add';\n    if (this.popupTitle === 'Edit Menu') {\n      this.refreshMenu();\n    } else if (this.popupTitle === 'Edit Ingredients') {\n      this.refreshIngredients();\n    } else if (this.popupTitle === 'Edit Inventory') {\n      this.refreshInventory();\n    }\n    this.selectedItem = newItem;\n    this.showQuickAddPopup = false;\n    this.showConfirmationPopup = true;\n  }\n\n  // SEAOSONAL ITEM POPUP\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  showSeasonalItemPopup: boolean = false;\n/**\n * This function is called when the user clicks on the \"Add\" button\n * @param type \n */\n  seasonalItem(type: string): void {\n    this.popupTitle = 'Add Seasonal Item';\n    this.currentAction = 'add';\n    console.log('Seasonal item');\n    this.showSeasonalItemPopup = true;\n  }\n/**\n * This function is called when the user clicks on the \"Add\" button\n */\n  onSeasonalItemCancel(): void {\n    this.showSeasonalItemPopup = false;\n  }\n/**\n * This function is called when the user clicks on the \"Add\" button\n * @param newItem \n */\n  seasonalItemAdd(newItem: any): void {\n    this.selectedItem = newItem;\n    this.showSeasonalItemPopup = false;\n    this.showConfirmationPopup = true;\n  }\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   * @param type \n   * @param start \n   * @param end \n   */\n  // OTHER\n  reportPopup(type: string, start?: string, end?: string) {\n    this.showRestockReportPopup = true;\n    switch (type) {\n      case 'restock': \n        this.popupTitle = 'Restock Report';\n        this.tableConfig = this.restockReport;\n        this.getLowStock();\n        break;\n      case 'sales': \n        if (!start) {\n          start = \"2023-01-01\";\n        }\n        if (!end) {\n          end = \"2023-03-01\";\n        }\n        this.popupTitle = 'Sales Report';\n        this.tableConfig = this.salesReport;\n        this.refreshSales(start, end);\n        break;\n      case 'excess':\n        this.popupTitle = 'Excess Report';\n        this.tableConfig = this.excessReport;\n        if (!start) {\n          start = \"2023-01-01\";\n        }\n        if (!end) {\n          end = \"2023-03-01\";\n        }\n        this.getExcess(start, end);\n        break;\n      }\n  }\n\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  clickSalesReport() {\n    // Do something cool\n    console.log('clickSalesReport()');\n  }\n  /**\n   *  This function is called when the user clicks on the \"Add\" button\n   */\n  clickExcessReport() {\n    // Do something cool\n    console.log('clickExcessReport()');\n  }\n  /**\n   *  This function is called when the user clicks on the \"Add\" button\n   */\n  clickRestockReport() {\n    // Do something cool\n    console.log('clickStockReport()');\n  }\n  /**\n   *  This function is called when the user clicks on the \"Add\" button\n   */\n  clickPPReport() {\n    // Do something cool\n    console.log('clickPPReport()');\n  }\n  /**\n   *  This function is called when the user clicks on the \"Add\" button\n   */\n  clickIPReport() {\n    // Do something cool\n    console.log('clickIPReport()');\n  }\n}\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Orders.html":{"url":"classes/Orders.html","title":"class - Orders","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Orders\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/orders.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines the structure of an order, including details such as timestamp, ID, items, total, and IDs of the employee and customer.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                customer_id\n                            \n                            \n                                    Optional\n                                employee_id\n                            \n                            \n                                    Optional\n                                order_id\n                            \n                            \n                                    Optional\n                                order_items\n                            \n                            \n                                    Optional\n                                order_timestamp\n                            \n                            \n                                    Optional\n                                order_total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        customer_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/orders.ts:28\n                        \n                    \n\n            \n                \n                    The id of the customer who placed the order.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        employee_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/orders.ts:24\n                        \n                    \n\n            \n                \n                    The id of the employee who took the order.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        order_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/orders.ts:12\n                        \n                    \n\n            \n                \n                    The id of the order.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        order_items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/orders.ts:16\n                        \n                    \n\n            \n                \n                    The items in the order.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        order_timestamp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/orders.ts:8\n                        \n                    \n\n            \n                \n                    The timestamp of the order.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        order_total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/orders.ts:20\n                        \n                    \n\n            \n                \n                    The total amount of the order.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Orders {\n    /**\n     * The timestamp of the order.\n     */\n    order_timestamp?: Date;\n    /**\n     * The id of the order.\n     */\n    order_id?: number;\n    /**\n     * The items in the order.\n     */\n    order_items?: string[];\n    /**\n     * The total amount of the order.\n     */\n    order_total?: number;\n    /**\n     * The id of the employee who took the order.\n     */\n    employee_id?: number;\n    /**\n     * The id of the customer who placed the order.\n     */\n    customer_id?: number;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrdersService.html":{"url":"injectables/OrdersService.html","title":"injectable - OrdersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrdersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/orders.service.ts\n        \n\n\n            \n                Description\n            \n            \n                OrdersService handles operations related to orders, including fetching, updating order history, and managing inventory.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                            \n                                    Private\n                                inventoryUpdateUrl\n                            \n                            \n                                    Private\n                                orderHistoryUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getOrders\n                            \n                            \n                                updateInventory\n                            \n                            \n                                updateOrderHistory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/orders.service.ts:22\n                            \n                        \n\n                \n                    \n                            Constructor for OrdersService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HttpClient for making HTTP requests.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getOrders\n                        \n                    \n                \n            \n            \n                \ngetOrders()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/orders.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Method to get orders.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable of type any.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateInventory\n                        \n                    \n                \n            \n            \n                \nupdateInventory(itemName: string, quantity: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/orders.service.ts:74\n                        \n                    \n\n\n            \n                \n                        Method to update inventory.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                itemName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                quantity\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Observable of type any.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOrderHistory\n                        \n                    \n                \n            \n            \n                \nupdateOrderHistory(orderItems: any[], orderTotal: number, employeeId: number, customerId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/orders.service.ts:43\n                        \n                    \n\n\n            \n                \n                        Method to get order by id.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orderItems\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                orderTotal\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                employeeId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                customerId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Observable of type any.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.apiUrl}/orders`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/orders.service.ts:14\n                        \n                    \n\n            \n                \n                    Base URL for HTTP requests.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        inventoryUpdateUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:3000/api/inventory/update'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/orders.service.ts:22\n                        \n                    \n\n            \n                \n                    URL for updating inventory.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        orderHistoryUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:3000/api/order-history/create'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/orders.service.ts:18\n                        \n                    \n\n            \n                \n                    URL for updating order history.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n/**\n * `OrdersService` handles operations related to orders, including fetching, updating order history, and managing inventory.\n */\n@Injectable({ providedIn: 'root' })\nexport class OrdersService {\n  /**\n   * Base URL for HTTP requests.\n   */\n  private baseUrl = `${environment.apiUrl}/orders`;\n  /**\n   * URL for updating order history.\n   */\n  private orderHistoryUrl = 'http://localhost:3000/api/order-history/create';\n  /**\n   * URL for updating inventory.\n   */\n  private inventoryUpdateUrl = 'http://localhost:3000/api/inventory/update';\n  /**\n   * Constructor for `OrdersService`.\n   * @param http HttpClient for making HTTP requests.\n   */\n  constructor(private http: HttpClient) { }\n  /**\n   * Method to get orders.\n   * @returns Observable of type any.\n   */\n  getOrders(): Observable {\n    return this.http.get(this.baseUrl);\n  }\n  /**\n   * Method to get order by id.\n   * @param orderItems \n   * @param orderTotal \n   * @param employeeId \n   * @param customerId \n   * @returns Observable of type any.\n   */\n  updateOrderHistory(orderItems: any[], orderTotal: number, employeeId: number, customerId: number) {\n    /**\n     * Order data to be sent to the server.\n     */\n    const orderData = {\n      /**\n       * Order items.\n       */\n      order_items: orderItems,\n      /**\n       * Order total.\n       */\n      order_total: orderTotal,\n      /**\n       * Employee ID.\n       */\n      employee_id: employeeId,\n      /**\n       * Customer ID.\n       */\n      customer_id: customerId\n    };\n\n    return this.http.post(this.orderHistoryUrl, orderData);\n  }\n  /**\n   * Method to update inventory.\n   * @param itemName \n   * @param quantity \n   * @returns Observable of type any.\n   */\n  updateInventory(itemName: string, quantity: number) {\n    const inventoryData = {\n      item_name: itemName,\n      item_quantity: quantity\n    };\n\n    return this.http.put(this.inventoryUpdateUrl, inventoryData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/profile/profile.component.ts\n\n\n\n    \n        Description\n    \n    \n        ProfileComponent is responsible for displaying the user's profile information.\nIt retrieves the user's profile data from Auth0's user$ observable and presents it.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                profileJson\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/profile/profile.component.ts:15\n                            \n                        \n\n                \n                    \n                            Constructor for ProfileComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for Auth0 authentication that provides user profile data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/profile/profile.component.ts:27\n                        \n                    \n\n\n            \n                \n                        OnInit lifecycle hook to subscribe to the user's profile data from Auth0 and format it for display.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/profile/profile.component.ts:22\n                        \n                    \n\n            \n                \n                    Service for Auth0 authentication that provides user profile data.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileJson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/profile/profile.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '@auth0/auth0-angular';\n\n/**\n * `ProfileComponent` is responsible for displaying the user's profile information.\n * It retrieves the user's profile data from Auth0's user$ observable and presents it.\n *\n * @Component Decorator that marks the class as an Angular component, specifying the selector and template.\n */\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n})\nexport class ProfileComponent implements OnInit {\n  profileJson: string = \"\";\n\n  /**\n   * Constructor for `ProfileComponent`.\n   * \n   * @param auth Service for Auth0 authentication that provides user profile data.\n   */\n  constructor(public auth: AuthService) {}\n\n  /**\n   * OnInit lifecycle hook to subscribe to the user's profile data from Auth0 and format it for display.\n   */\n  ngOnInit(): void {\n    this.auth.user$.subscribe(\n      (profile) => {\n        this.profileJson = JSON.stringify(profile, null, 2);\n        console.log(profile?.given_name);\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n    \n      \n        \n      \n      \n        {{ user.name }}\n        {{ user.email }}\n      \n    \n  \n    \n      {{ profileJson }}\n    \n -->\n\n\n    Hello {{ user.name }}!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      {{ user.name }}        {{ user.email }}                      {{ profileJson }}     -->    Hello {{ user.name }}!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'app-authentication-button'},{'name': 'CartModalComponent', 'selector': 'app-cart-modal'},{'name': 'CashierViewComponent', 'selector': 'app-cashier-view'},{'name': 'CheckoutPopupComponent', 'selector': 'app-checkout-popup'},{'name': 'ConfirmationPopupComponent', 'selector': 'app-confirmation-popup'},{'name': 'ContactUsComponent', 'selector': 'app-contact-us'},{'name': 'CustomerViewComponent', 'selector': 'app-customer-view'},{'name': 'EditItemPopupComponent', 'selector': 'app-edit-item-popup'},{'name': 'EmployeeCreationsMenuComponent', 'selector': 'app-employee-creations-menu'},{'name': 'GetRoleComponent', 'selector': 'app-get-role'},{'name': 'LearnMoreComponent', 'selector': 'app-learn-more'},{'name': 'LoginButtonComponent', 'selector': 'app-login-button'},{'name': 'LogoutButtonComponent', 'selector': 'app-logout-button'},{'name': 'ManagerPopupComponent', 'selector': 'app-manager-popup'},{'name': 'ManagerViewComponent', 'selector': 'app-manager-view'},{'name': 'MenuItemComponent', 'selector': 'app-menu-item'},{'name': 'MenuViewComponent', 'selector': 'app-menu-view'},{'name': 'MilkTeaMenuComponent', 'selector': 'app-milk-tea-menu'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuickAddPopupComponent', 'selector': 'app-quick-add-popup'},{'name': 'RestockReportPopupComponent', 'selector': 'app-restock-report-popup'},{'name': 'SeasonalItemPopupComponent', 'selector': 'app-seasonal-item-popup'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'SignatureMilkTeaMenuComponent', 'selector': 'app-signature-milk-tea-menu'},{'name': 'SignupButtonComponent', 'selector': 'app-signup-button'},{'name': 'SlushMenuComponent', 'selector': 'app-slush-menu'},{'name': 'SmoothieMenuComponent', 'selector': 'app-smoothie-menu'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuickAddPopupComponent.html":{"url":"components/QuickAddPopupComponent.html","title":"component - QuickAddPopupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  QuickAddPopupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/manager-view/quick-add-popup/quick-add-popup.component.ts\n\n\n\n    \n        Description\n    \n    \n        QuickAddPopupComponent is designed to provide a quick add functionality for menu items, inventory items, or ingredients.\nIt allows for the quick creation of new items and emits events based on user actions.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-quick-add-popup\n            \n\n\n\n            \n                styleUrls\n                ./quick-add-popup.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./quick-add-popup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addedIngredientName\n                            \n                            \n                                addedIngredientQuantity\n                            \n                            \n                                addedInventoryItemName\n                            \n                            \n                                addedInventoryItemQuantity\n                            \n                            \n                                addedMenuItemIngredients\n                            \n                            \n                                addedMenuItemName\n                            \n                            \n                                addedMenuItemPrice\n                            \n                            \n                                addedMenuItemType\n                            \n                            \n                                ingredientNames\n                            \n                            \n                                itemTypes\n                            \n                            \n                                selectedIngredients\n                            \n                            \n                                selectedType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItem\n                            \n                            \n                                closePopup\n                            \n                            \n                                formatSingleUnderscore\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                editType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                cancel\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(menuService: MenuService, ingredientsService: IngredientsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/manager-view/quick-add-popup/quick-add-popup.component.ts:77\n                            \n                        \n\n                \n                    \n                            Constructor for QuickAddPopupComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        menuService\n                                                  \n                                                        \n                                                                        MenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to handle menu item operations.\n\n                                                        \n                                                \n                                                \n                                                        ingredientsService\n                                                  \n                                                        \n                                                                        IngredientsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to handle ingredient operations.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        editType\n                    \n                \n                \n                    \n                        Type :     \"menu\" | \"inventory\" | \"ingredients\" | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/manager-view/quick-add-popup/quick-add-popup.component.ts:20\n                            \n                        \n                \n                    \n                        The type of item to be added: menu, inventory, or ingredients.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        add\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/manager-view/quick-add-popup/quick-add-popup.component.ts:28\n                            \n                        \n                \n                    \n                        Event emitter for adding a new item.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        cancel\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/manager-view/quick-add-popup/quick-add-popup.component.ts:24\n                            \n                        \n                \n                    \n                        Event emitter for cancelling the add operation.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItem\n                        \n                    \n                \n            \n            \n                \naddItem()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/manager-view/quick-add-popup/quick-add-popup.component.ts:118\n                        \n                    \n\n\n            \n                \n                        Constructs a new item based on the current edit type and emits the new item for addition.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closePopup\n                        \n                    \n                \n            \n            \n                \nclosePopup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/manager-view/quick-add-popup/quick-add-popup.component.ts:148\n                        \n                    \n\n\n            \n                \n                        Emits an event to close the quick add popup.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatSingleUnderscore\n                        \n                    \n                \n            \n            \n                \nformatSingleUnderscore(ordItem: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/manager-view/quick-add-popup/quick-add-popup.component.ts:36\n                        \n                    \n\n\n            \n                \n                        Formats a string by replacing underscores with spaces and capitalizing each word.\nThis method is used to format item names that are typically stored with underscores.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                ordItem\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The original string with underscores.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                The formatted string with spaces and capitalized words.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/manager-view/quick-add-popup/quick-add-popup.component.ts:104\n                        \n                    \n\n\n            \n                \n                        OnInit lifecycle hook to fetch menu item types and ingredient names.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addedIngredientName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/manager-view/quick-add-popup/quick-add-popup.component.ts:73\n                        \n                    \n\n            \n                \n                    Event emitter for cancelling the add operation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addedIngredientQuantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/manager-view/quick-add-popup/quick-add-popup.component.ts:77\n                        \n                    \n\n            \n                \n                    Event emitter for adding a new item.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addedInventoryItemName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/manager-view/quick-add-popup/quick-add-popup.component.ts:65\n                        \n                    \n\n            \n                \n                    Event emitter for cancelling the add operation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addedInventoryItemQuantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/manager-view/quick-add-popup/quick-add-popup.component.ts:69\n                        \n                    \n\n            \n                \n                    Event emitter for adding a new item.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addedMenuItemIngredients\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/manager-view/quick-add-popup/quick-add-popup.component.ts:60\n                        \n                    \n\n            \n                \n                    Event emitter for adding a new item.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addedMenuItemName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/manager-view/quick-add-popup/quick-add-popup.component.ts:48\n                        \n                    \n\n            \n                \n                    Event emitter for cancelling the add operation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addedMenuItemPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/manager-view/quick-add-popup/quick-add-popup.component.ts:52\n                        \n                    \n\n            \n                \n                    Event emitter for adding a new item.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addedMenuItemType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/manager-view/quick-add-popup/quick-add-popup.component.ts:56\n                        \n                    \n\n            \n                \n                    Event emitter for cancelling the add operation.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredientNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/manager-view/quick-add-popup/quick-add-popup.component.ts:88\n                        \n                    \n\n            \n                \n                    The list of ingredient names to be displayed in the popup.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        itemTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/manager-view/quick-add-popup/quick-add-popup.component.ts:92\n                        \n                    \n\n            \n                \n                    The list of menu item types to be displayed in the popup.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedIngredients\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/manager-view/quick-add-popup/quick-add-popup.component.ts:96\n                        \n                    \n\n            \n                \n                    The list of selected ingredients to be added to the new menu item.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/manager-view/quick-add-popup/quick-add-popup.component.ts:100\n                        \n                    \n\n            \n                \n                    The selected menu item type to be added to the new menu item.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter, SimpleChanges, OnInit, OnChanges } from '@angular/core';\n\nimport { MenuService } from 'src/app/services/menu.service';\nimport { IngredientsService } from 'src/app/services/ingredients.service';\n/**\n * `QuickAddPopupComponent` is designed to provide a quick add functionality for menu items, inventory items, or ingredients.\n * It allows for the quick creation of new items and emits events based on user actions.\n *\n * @Component Decorator that marks the class as an Angular component and specifies metadata about the component.\n */\n@Component({\n  selector: 'app-quick-add-popup',\n  templateUrl: './quick-add-popup.component.html',\n  styleUrls: ['./quick-add-popup.component.scss']\n})\nexport class QuickAddPopupComponent {\n    /**\n   * The type of item to be added: menu, inventory, or ingredients.\n   */\n  @Input() editType: 'menu' | 'inventory' | 'ingredients' | null = null;\n    /**\n   * Event emitter for cancelling the add operation.\n   */\n  @Output() cancel = new EventEmitter();\n    /**\n   * Event emitter for adding a new item.\n   */\n  @Output() add = new EventEmitter();\n    /**\n   * Formats a string by replacing underscores with spaces and capitalizing each word.\n   * This method is used to format item names that are typically stored with underscores.\n   *\n   * @param ordItem The original string with underscores.\n   * @returns The formatted string with spaces and capitalized words.\n   */\n  formatSingleUnderscore(ordItem: string): string {\n    let formattedItem = ordItem.replace(/_/g, ' ');\n  \n    formattedItem = formattedItem.replace(/\\w\\S*/g, (word) => {\n      return word.charAt(0).toUpperCase() + word.substr(1).toLowerCase();\n    });\n  \n    return formattedItem;\n  }\n  /**\n   * Event emitter for cancelling the add operation.\n   */\n  addedMenuItemName: string = '';\n  /**\n   * Event emitter for adding a new item.\n   */\n  addedMenuItemPrice: string = '';\n  /**\n   * Event emitter for cancelling the add operation.\n   */\n  addedMenuItemType: string = '';\n  /**\n   * Event emitter for adding a new item.\n   */\n  addedMenuItemIngredients: string = '';\n  /**\n   * Event emitter for cancelling the add operation.\n   */\n\n  addedInventoryItemName: string = '';\n  /**\n   * Event emitter for adding a new item.\n   */\n  addedInventoryItemQuantity: string = '';\n  /**\n   * Event emitter for cancelling the add operation.\n   */\n  addedIngredientName: string = '';\n  /**\n   * Event emitter for adding a new item.\n   */\n  addedIngredientQuantity: string = '';\n    /**\n   * Constructor for `QuickAddPopupComponent`.\n   * \n   * @param menuService Service to handle menu item operations.\n   * @param ingredientsService Service to handle ingredient operations.\n   */\n  constructor(private menuService: MenuService, private ingredientsService: IngredientsService) {}\n  /**\n   * The list of ingredient names to be displayed in the popup.\n   */\n  ingredientNames: string[] = [];\n  /**\n   * The list of menu item types to be displayed in the popup.\n   */\n  itemTypes: string[] = [];\n  /**\n   * The list of selected ingredients to be added to the new menu item.\n   */\n  selectedIngredients: { [key: string]: boolean } = {};\n  /**\n   * The selected menu item type to be added to the new menu item.\n   */\n  selectedType: string = '';\n  /**\n   * OnInit lifecycle hook to fetch menu item types and ingredient names.\n   */\n  ngOnInit(): void {\n    this.menuService.getMenuItemTypes().subscribe((data: any) => {\n      this.itemTypes = data.map((item: any) => item.menu_item_type);\n    });\n\n    this.ingredientsService.getIngredientNames().subscribe((data: any) => {\n      this.ingredientNames = data.map((item: any) => item.ingredient_name);\n      data.forEach((ingredient: string) => this.selectedIngredients[ingredient] = false);\n    });\n  }\n  /**\n   * Constructs a new item based on the current edit type and emits the new item for addition.\n   */\n\n  addItem(): void {\n    let newItem = {};\n\n    if (this.editType === 'menu') {\n      const ingredientsArray = Object.keys(this.selectedIngredients)\n                                     .filter(key => this.selectedIngredients[key]);\n      newItem = {\n        menu_item_name: this.addedMenuItemName,\n        menu_item_price: this.addedMenuItemPrice,\n        menu_item_type: this.selectedType,\n        ingredients: ingredientsArray,\n        image: \"https://lh3.googleusercontent.com/pw/ADCreHeFJZfwed7QCBCsg-WGwXr_EsD02eLtWt8Lo7hNM0UMMVj78qZo2j2NVzL9s-laBEx76f1AqGhaU7PpxO2fNVlSqMUHm24gNKWYV-pOZ_TzBpuwYTM\",\n        description: \"Experience the intrigue of our \" + this.formatSingleUnderscore(this.addedMenuItemName) + \", a beverage that's still in the experimental stage, awaiting your taste buds' verdict. With each sip, you become part of our culinary exploration, offering feedback and insights as we refine this unique concoction.\"\n      };\n    } else if (this.editType === 'inventory') {\n      newItem = {\n        item_name: this.addedInventoryItemName,\n        item_quantity: this.addedInventoryItemQuantity\n      };\n    } else if (this.editType === 'ingredients') {\n      newItem = {\n        ingredient_name: this.addedIngredientName,\n        ingredient_quantity: this.addedIngredientQuantity\n      };\n    }\n    this.add.emit(newItem);\n  }\n   /**\n   * Emits an event to close the quick add popup.\n   */\n  closePopup(): void {\n    this.cancel.emit();\n  }\n}\n\n    \n\n    \n        \n    \n      \n        Quick Add\n        \n          Name: \n          Price: $ \n          Type: \n          \n            \n            {{ type }}\n          \n          Ingredients: \n          \n            \n            {{ ingredient }}\n          \n\n        \n        \n        \n          Name: \n          Quantity: \n        \n  \n        \n          Name: \n          Quantity: \n        \n  \n        \n          Add\n          Cancel\n        \n      \n    \n  \n    \n\n    \n                \n                    ./quick-add-popup.component.scss\n                \n                .backdrop {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n    z-index: 1050;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    // padding-top: 10vh;\n}\n  \n.popup {\n    background-color: white;\n    padding: 20px;\n    border-radius: 5px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    position: relative;\n    z-index: 1051;\n    max-height: 80vh;\n    overflow-y: auto; /* Makes content scrollable */\n    width: 80%;\n    position: relative;\n}\n\n.buttons {\n    display: flex;\n    justify-content: right;\n    gap: 5px;\n}\n\n.add {\n    border-color: rgb(100, 255, 100, 0.75);\n    background-color: white;\n}\n\n.add:hover {\n    background-color: rgb(100, 255, 100, 0.75);\n}\n\n.cancel {\n    border-color: rgb(255, 100, 100, 0.75);\n    background-color: white;\n}\n\n.cancel:hover {\n    background-color: rgb(255, 100, 100, 0.75);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Quick Add                  Name:           Price: $           Type:                                   {{ type }}                    Ingredients:                                   {{ ingredient }}                                            Name:           Quantity:                             Name:           Quantity:                             Add          Cancel                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'app-authentication-button'},{'name': 'CartModalComponent', 'selector': 'app-cart-modal'},{'name': 'CashierViewComponent', 'selector': 'app-cashier-view'},{'name': 'CheckoutPopupComponent', 'selector': 'app-checkout-popup'},{'name': 'ConfirmationPopupComponent', 'selector': 'app-confirmation-popup'},{'name': 'ContactUsComponent', 'selector': 'app-contact-us'},{'name': 'CustomerViewComponent', 'selector': 'app-customer-view'},{'name': 'EditItemPopupComponent', 'selector': 'app-edit-item-popup'},{'name': 'EmployeeCreationsMenuComponent', 'selector': 'app-employee-creations-menu'},{'name': 'GetRoleComponent', 'selector': 'app-get-role'},{'name': 'LearnMoreComponent', 'selector': 'app-learn-more'},{'name': 'LoginButtonComponent', 'selector': 'app-login-button'},{'name': 'LogoutButtonComponent', 'selector': 'app-logout-button'},{'name': 'ManagerPopupComponent', 'selector': 'app-manager-popup'},{'name': 'ManagerViewComponent', 'selector': 'app-manager-view'},{'name': 'MenuItemComponent', 'selector': 'app-menu-item'},{'name': 'MenuViewComponent', 'selector': 'app-menu-view'},{'name': 'MilkTeaMenuComponent', 'selector': 'app-milk-tea-menu'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuickAddPopupComponent', 'selector': 'app-quick-add-popup'},{'name': 'RestockReportPopupComponent', 'selector': 'app-restock-report-popup'},{'name': 'SeasonalItemPopupComponent', 'selector': 'app-seasonal-item-popup'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'SignatureMilkTeaMenuComponent', 'selector': 'app-signature-milk-tea-menu'},{'name': 'SignupButtonComponent', 'selector': 'app-signup-button'},{'name': 'SlushMenuComponent', 'selector': 'app-slush-menu'},{'name': 'SmoothieMenuComponent', 'selector': 'app-smoothie-menu'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuickAddPopupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ReplacePipe.html":{"url":"pipes/ReplacePipe.html","title":"pipe - ReplacePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ReplacePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/replace.pipe.ts\n        \n\n\n            \n                Description\n            \n            \n                ReplacePipe transforms a string by replacing specified characters or strings with another.\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        replace\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string, find: string, replacement: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pipes/replace.pipe.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                find\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                replacement\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * `ReplacePipe` transforms a string by replacing specified characters or strings with another.\n */\n@Pipe({\n  name: 'replace'\n})\nexport class ReplacePipe implements PipeTransform {\n  transform(value: string, find: string, replacement: string): string {\n    if (!value) return value;\n\n    return value.replace(new RegExp(find, 'g'), replacement);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ReplaceUnderscoresPipe.html":{"url":"pipes/ReplaceUnderscoresPipe.html","title":"pipe - ReplaceUnderscoresPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ReplaceUnderscoresPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/UnderlineRemovat.pipe.service.ts\n        \n\n\n            \n                Description\n            \n            \n                ReplaceUnderscoresPipe transforms a string by replacing all underscores with spaces.\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        replaceUnderscores\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pipes/UnderlineRemovat.pipe.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * `ReplaceUnderscoresPipe` transforms a string by replacing all underscores with spaces.\n */\n@Pipe({\n  name: 'replaceUnderscores'\n})\nexport class ReplaceUnderscoresPipe implements PipeTransform {\n  transform(value: string): string {\n    return value.replace(/_/g, ' ');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RestockReportPopupComponent.html":{"url":"components/RestockReportPopupComponent.html","title":"component - RestockReportPopupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RestockReportPopupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/manager-view/restock-report-popup/restock-report-popup.component.ts\n\n\n\n    \n        Description\n    \n    \n        RestockReportPopupComponent is designed to provide a popup modal for displaying restock reports.\nIt presents tabular data such as inventory levels and restock requirements, allowing for a quick overview of stock status.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-restock-report-popup\n            \n\n\n\n            \n                styleUrls\n                ./restock-report-popup.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./restock-report-popup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeRestockPopup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                tableConfig\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/manager-view/restock-report-popup/restock-report-popup.component.ts:52\n                            \n                        \n                \n                    \n                        The content to be displayed within the table.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tableConfig\n                    \n                \n                \n                    \n                        Type :         TableConfig\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/manager-view/restock-report-popup/restock-report-popup.component.ts:47\n                            \n                        \n                \n                    \n                        The configuration for the table, including the columns to display.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/manager-view/restock-report-popup/restock-report-popup.component.ts:42\n                            \n                        \n                \n                    \n                        The title of the popup, typically describing the content or purpose of the table.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/manager-view/restock-report-popup/restock-report-popup.component.ts:57\n                            \n                        \n                \n                    \n                        Event emitter to notify the parent component to close the popup.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeRestockPopup\n                        \n                    \n                \n            \n            \n                \ncloseRestockPopup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/manager-view/restock-report-popup/restock-report-popup.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Emits an event to close the restock report popup.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n/**\n * Represents the structure of a table column in the restock report.\n */\ninterface TableColumn {\n  /**\n   * The key of the column.\n   */\n  key: string;\n  /**\n   * The header of the column.\n   */\n  header: string;\n}\n\n/**\n * Represents the configuration object for table columns in the restock report popup.\n */\ninterface TableConfig {\n  /**\n   * The columns of the table.\n   */\n  columns: TableColumn[];\n}\n\n/**\n * `RestockReportPopupComponent` is designed to provide a popup modal for displaying restock reports.\n * It presents tabular data such as inventory levels and restock requirements, allowing for a quick overview of stock status.\n *\n * @Component Decorator that marks the class as an Angular component, specifying the selector, template, and styles.\n */\n@Component({\n  selector: 'app-restock-report-popup',\n  templateUrl: './restock-report-popup.component.html',\n  styleUrls: ['./restock-report-popup.component.scss']\n})\nexport class RestockReportPopupComponent {\n  /**\n   * The title of the popup, typically describing the content or purpose of the table.\n   */\n  @Input() title: string = '';\n\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  @Input() tableConfig?: TableConfig;\n\n  /**\n   * The content to be displayed within the table.\n   */\n  @Input() content: any[] = [];\n\n  /**\n   * Event emitter to notify the parent component to close the popup.\n   */\n  @Output() close = new EventEmitter();\n\n  /**\n   * Emits an event to close the restock report popup.\n   */\n  closeRestockPopup(): void {\n    this.close.emit();\n  }\n}\n\n\n    \n\n    \n        \n    &times; -->\n    \n      Exit\n    \n    \n        \n            \n              {{ title }}\n            \n            \n                \n                  \n                    \n                      {{ col.header }}\n                    \n                  \n                  \n                    \n                      \n                        {{ row[col.key] }}\n                      \n                    \n                  \n                \n            \n            \n              No data to display.\n            \n        \n    \n  \n  \n    \n\n    \n                \n                    ./restock-report-popup.component.scss\n                \n                .backdrop {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n    z-index: 1050;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    // padding-top: 10vh;\n}\n  \n.popup {\n    background-color: white;\n    padding: 20px;\n    border-radius: 5px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    position: relative;\n    z-index: 1051;\n    max-height: 80vh;\n    overflow-y: auto; /* Makes content scrollable */\n    width: 80%;\n    position: relative;\n}\n\ntable {\n    width: 100%;\n    border-collapse: separate;\n}\n\nth, td {\n    border: 1px solid #ddd;\n    padding: 8px;\n    text-align: left;\n    font-size: 20px;\n}\n\nth {\n    background-color: #f2f2f2;\n}\n\n.close {\n    position: fixed;\n    top: 10px;\n    right: 10px;\n    cursor: pointer;\n    font-size: 100px;\n    font-weight: bold;\n    z-index: 1100;\n    color: white;\n  }\n  \n.close:hover {\n    color: red;\n}\n\ninput:disabled {\n    background-color: #f3f3f3;\n}\n\n.actionButtons {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.delete {\n    border-color: rgb(255, 100, 100, 0.75);\n    width: 100%;\n    background-color: white;\n}\n\n.delete:hover {\n    background-color: rgb(255, 100, 100, 0.75);\n}\n\n.edit {\n    border-color: rgb(100, 100, 255, 0.75);\n    width: 100%;\n    background-color: white;\n}\n\n.edit:hover {\n    background-color: rgb(100, 100, 255, 0.75);\n}\n\n.popupHeader {\n    display: flex;\n    justify-content: space-between;\n}\n\n.quickAdd {\n    border-color: rgb(100, 255, 100, 0.75);\n    background-color: white;\n}\n\n.quickAdd:hover {\n    background-color: rgb(100, 255, 100, 0.75);\n}\n\n.exit {\n    border-color: rgb(255, 100, 100, 0.75);\n    background-color: white;\n}\n\n.exit:hover {\n    background-color: rgb(255, 100, 100, 0.75);\n}\n\n.headerButtons {\n    display: flex;\n    justify-content: right;\n    gap: 5px;\n    padding-bottom: 5px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    × -->          Exit                                          {{ title }}                                                                                                    {{ col.header }}                                                                                                                          {{ row[col.key] }}                                                                                                                  No data to display.                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'app-authentication-button'},{'name': 'CartModalComponent', 'selector': 'app-cart-modal'},{'name': 'CashierViewComponent', 'selector': 'app-cashier-view'},{'name': 'CheckoutPopupComponent', 'selector': 'app-checkout-popup'},{'name': 'ConfirmationPopupComponent', 'selector': 'app-confirmation-popup'},{'name': 'ContactUsComponent', 'selector': 'app-contact-us'},{'name': 'CustomerViewComponent', 'selector': 'app-customer-view'},{'name': 'EditItemPopupComponent', 'selector': 'app-edit-item-popup'},{'name': 'EmployeeCreationsMenuComponent', 'selector': 'app-employee-creations-menu'},{'name': 'GetRoleComponent', 'selector': 'app-get-role'},{'name': 'LearnMoreComponent', 'selector': 'app-learn-more'},{'name': 'LoginButtonComponent', 'selector': 'app-login-button'},{'name': 'LogoutButtonComponent', 'selector': 'app-logout-button'},{'name': 'ManagerPopupComponent', 'selector': 'app-manager-popup'},{'name': 'ManagerViewComponent', 'selector': 'app-manager-view'},{'name': 'MenuItemComponent', 'selector': 'app-menu-item'},{'name': 'MenuViewComponent', 'selector': 'app-menu-view'},{'name': 'MilkTeaMenuComponent', 'selector': 'app-milk-tea-menu'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuickAddPopupComponent', 'selector': 'app-quick-add-popup'},{'name': 'RestockReportPopupComponent', 'selector': 'app-restock-report-popup'},{'name': 'SeasonalItemPopupComponent', 'selector': 'app-seasonal-item-popup'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'SignatureMilkTeaMenuComponent', 'selector': 'app-signature-milk-tea-menu'},{'name': 'SignupButtonComponent', 'selector': 'app-signup-button'},{'name': 'SlushMenuComponent', 'selector': 'app-slush-menu'},{'name': 'SmoothieMenuComponent', 'selector': 'app-smoothie-menu'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RestockReportPopupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SalesSummary.html":{"url":"interfaces/SalesSummary.html","title":"interface - SalesSummary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SalesSummary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/manager-view/manager-view.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the model for the sales summary.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        number\n\n                    \n                \n                        \n                            \n                                Defined in src/app/manager-view/manager-view.component.ts:65\n                            \n                        \n                \n                    \n                        The row's key\n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MenuService } from '../services/menu.service';\nimport { IngredientsService } from '../services/ingredients.service';\nimport { InventoryService } from '../services/inventory.service';\nimport { OrderHistoryService } from '../services/order-history.service';\nimport { FormsModule } from '@angular/forms';\nimport { forkJoin } from 'rxjs';\n/**\n * This is the model for the table configuration.\n */\ninterface TableConfig {\n  /**\n   * The table's title\n   */\n  columns: TableColumn[];\n}\n/**\n *  This is the model for the table column.\n */\ninterface TableColumn {\n  // The column's key\n  /**\n   * The column's key\n   */\n  key: string;\n  /**\n   * The column's header\n   */\n  // The column's header\n  header: string;\n}\n/**\n * This is the model for the table row.\n */\ninterface InventoryMap {\n  // The row's key\n  /**\n   * The row's key\n   */\n  [key: string]: number;\n}\n/**\n * This is the model for the inventory item.\n */\ninterface InventoryItem {\n  // The item's id\n  /**\n   * The item's id\n   */\n  item_id: number;\n  /**\n   * The item's name\n   */\n  // The item's name\n  item_name: string;\n  /**\n   * The item's quantity\n   */\n  // The item's quantity\n  item_quantity: number;\n}\n/**\n * This is the model for the sales summary.\n */\ninterface SalesSummary {\n  // The row's key\n  /**\n   * The row's key\n   */\n  [key: string]: number; // Adjust the key type if necessary\n}\n\n// Define an interface for the order item\n/**\n * This is the model for the order item.\n */\ninterface OrderItem {\n  /**\n   * The item's id\n   */\n  // The item's id\n  item_name: string;\n  /**\n   * The item's quantity\n   */\n   // or item_id if it's a number\n  quantity: number;\n}\n\n/**\n * `ManagerViewComponent` serves as the main interface for the manager's dashboard.\n * It handles operations related to menu management, ingredients, inventory, and order history,\n * providing functionalities to refresh and manipulate these data sets.\n *\n * @Component Decorator that marks the class as an Angular component and provides metadata about the component.\n */\n @Component({\n  selector: 'app-manager-view',\n  templateUrl: './manager-view.component.html',\n  styleUrls: ['./manager-view.component.scss']\n})\nexport class ManagerViewComponent implements OnInit {\n  // Component properties\n  /**\n   * Boolean to track if the current user is a manager.\n   */\n  showPopup: boolean = false;\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  showRestockReportPopup: boolean = false;\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  popupTitle: string = '';\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  start: string = '';\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  end: string = '';\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  popupContent: any;\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  menu: any[] = [];\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  ingredients: any[] = [];\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  inventory: any[] = [];\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  orderHistory: any[] = [];\n\n  /**\n   * Constructor for `ManagerViewComponent`.\n   * \n   * @param MenuService Service to manage menu items.\n   * @param IngredientsService Service to manage ingredients.\n   * @param InventoryService Service to manage inventory.\n   * @param OrderHistoryService Service to manage order history.\n   */\n  constructor(\n    private MenuService: MenuService, \n    private IngredientsService: IngredientsService, \n    private InventoryService: InventoryService, \n    private OrderHistoryService: OrderHistoryService\n  ) {}\n\n  /**\n   * OnInit lifecycle hook for initial component setup.\n   */\n  ngOnInit(): void {\n    // Initialization logic can go here\n  }\n\n  /**\n   * Refreshes the menu items by fetching the latest data from the `MenuService`.\n   */\n  refreshMenu(): void {\n    this.MenuService.getMenu().subscribe(items => {\n      // Refresh menu logic\n    });\n  }\n  \n  /**\n   * Refreshes the ingredients by fetching the latest data from the `IngredientsService`.\n   */\n  refreshIngredients(): void {\n    this.IngredientsService.getIngredients().subscribe(ingredients => {\n      // Refresh ingredients logic\n    });\n  }\n  \n  /**\n   * Refreshes the inventory by fetching the latest data from the `InventoryService`.\n   */\n  refreshInventory(): void {\n    this.InventoryService.getInventory().subscribe(invItems => {\n      // Refresh inventory logic\n    });\n  }\n\n  /**\n   * Refreshes the order history by fetching the latest data from the `OrderHistoryService`.\n   */\n  lowInventItems: any[] = [];\n  /**\n   * Get all of the elements that have only sold 10 percent of their stock\n   */\n  lowIngredItems: any[] = [];\n  /**\n   * Get all of the elements that have only sold 10 percent of their stock\n   */\n  getLowStock(): void {\n    this.InventoryService.getInventory().subscribe(invItems => {\n      this.inventory = invItems;\n\n      this.lowInventItems = this.inventory.filter(item => item.item_quantity  {\n        item.item_quantity_to_order = 1500 - item.item_quantity;\n      });\n    });\n\n    this.IngredientsService.getIngredients().subscribe(ingredients => {\n      this.ingredients = ingredients;\n      \n      this.lowIngredItems = this.ingredients.filter(item => item.ingredient_quantity  {\n        item.item_quantity_to_order = 1500 - item.ingredient_quantity;\n        item.item_name = item.ingredient_name;\n        item.item_quantity = item.ingredient_quantity;\n      });\n      const temp = [...this.lowInventItems, ...this.lowIngredItems];\n\n      temp.forEach(item => {\n        item.item_name = this.formatCamelCase(item.item_name);\n      });\n      this.popupContent = temp\n    });\n  }  \n\n  /**\n   * gets the sales from that time period\n   * @param start \n   * @param end \n   */\n  refreshSales(start: string, end: string): void {\n    this.OrderHistoryService.getOrderHistory().subscribe(ordItems => {\n      this.orderHistory = ordItems;\n\n      const startDate = new Date(start);\n      startDate.setUTCHours(0, 0, 0, 0);\n\n      const endDate = new Date(end);\n      endDate.setUTCHours(23, 59, 59, 999);\n\n      // console.log(ordItems);\n      // console.log(startDate);\n      // console.log(endDate);\n\n      const ItemsInRange = this.orderHistory.filter(order => {\n        const orderDate = new Date(order.order_timestamp);\n        return orderDate > startDate && orderDate  {\n        item.order_items = this.formatOrderItems(item.order_items);\n      });\n\n      console.log(ItemsInRange)\n\n      this.popupContent = ItemsInRange;\n    });\n  }\n  /**\n   * gets the sales from that time period\n   * @param start \n   * @param end \n   */\n  getExcess(start: string, end: string): void {\n    let inventory_ingrident_map = new Map();\n    // const additionalItems = ['napkins', 'plastic_seals', 'cups', 'straws'];\n    this.OrderHistoryService.getIngridents().subscribe(\n      data => {\n        data.forEach((item: { menu_item_name: string; ingredients: string[]; }) => {\n          let itemIngredients = item.ingredients.slice(); // Create a copy of the ingredients array\n\n          // // Check if the item has more than one ingredient and add additional items if so\n          // if (itemIngredients.length > 1) {\n          //   itemIngredients = itemIngredients.concat(additionalItems);\n          // }\n\n          inventory_ingrident_map.set(item.menu_item_name, itemIngredients);\n        });\n        console.log(inventory_ingrident_map); // This will log the map with the data\n      },\n      error => {\n        console.error('Error:', error); // This will log any error that occurs during the request\n      }\n    );\n\n    let ogIngrdientmap = new Map();\n      this.OrderHistoryService.getIng().subscribe(\n        data => {\n          data.forEach((item: { ingredient_name: string;  ingredient_quantity : number; }) => {\n            ogIngrdientmap.set(item.ingredient_name, item.ingredient_quantity);\n        });\n        console.log(ogIngrdientmap)\n      },\n        error => {\n          console.error('Error:', error); // This will log any error that occurs during the request\n        }\n      );\n    this.OrderHistoryService.getOrderHistory().subscribe(ordItems => {\n      this.orderHistory = ordItems;\n\n      // Initialize initialInventory\n      const initialInventory: InventoryMap = {};\n      this.InventoryService.getInventory().subscribe((inventoryItems: InventoryItem[]) => {\n        inventoryItems.forEach((item: InventoryItem) => {\n          initialInventory[item.item_name] = item.item_quantity;\n        });\n\n        console.log(initialInventory); // Log the map of item counts\n      });\n\n      const startDate = new Date(start);\n      startDate.setUTCHours(0, 0, 0, 0);\n  \n      const endDate = new Date(end);\n      endDate.setUTCHours(23, 59, 59, 999);\n  \n      const itemsInRange = this.orderHistory.filter(order => {\n        const orderDate = new Date(order.order_timestamp);\n        return orderDate >= startDate && orderDate ();\n      itemsInRange.forEach(order => {\n      order.order_items.forEach((item: OrderItem) => {\n        //@ts-ignore\n        const ingredients = inventory_ingrident_map.get(item) || [];\n        ingredients.forEach(ingredient => {\n          const currentCount = ingredientCountMap.get(ingredient) || 0;\n          ingredientCountMap.set(ingredient, currentCount + 1);\n        });\n      });\n    });\n\n    console.log(\"Ingredient Usage Count:\", ingredientCountMap);\n      // console.log(\"passed sales\")\n      let excessIngredients: { excessIngredients: string }[] = [];\n      ingredientCountMap.forEach((count, ingredient) => {\n        //@ts-ignore\n        if(count  {\n      let formattedItem = item.replace(/_/g, ' ');\n  \n      formattedItem = formattedItem.replace(/\\w\\S*/g, (word) => {\n        return word.charAt(0).toUpperCase() + word.substr(1).toLowerCase();\n      });\n  \n      return formattedItem;\n    });\n  \n    return formatted.join(', ');\n  }\n  /**\n   * Takes a string of items formatted with _ for a space and fixes them\n   * @param ordItem \n   * @returns formatted string\n   */\n  //Same as above but for only one string\n  formatSingleUnderscore(ordItem: string): string {\n    let formattedItem = ordItem.replace(/_/g, ' ');\n  \n    formattedItem = formattedItem.replace(/\\w\\S*/g, (word) => {\n      return word.charAt(0).toUpperCase() + word.substr(1).toLowerCase();\n    });\n  \n    return formattedItem;\n  }\n  /**\n   * Takes a string of items formatted with camelCase and fixes them\n   * @param name \n   * @returns formatted string\n   */\n  // Fixes camelCase words (one string)\n  formatCamelCase(name: string): string {\n    return name.replace(/([A-Z])/g, ' $1').replace(/^./, function(str){ return str.toUpperCase(); });\n  }\n  /**\n   * Takes a string of items formatted with camelCase and fixes them\n   * @param names \n   * @returns formatted string\n   */\n  // Same as above but for array of strings\n  formatCamelCaseArray(names: string[]): string[] {\n    return names.map(name => {\n      return name.replace(/([A-Z])/g, ' $1').replace(/^./, function(str){ return str.toUpperCase(); }).split(',').join(', ');\n    });\n  }\n  \n  /**\n   * This function is called when the user clicks on the \"View Inventory\" button\n   */\n  tableConfig?: TableConfig;\n/**\n * This hold all of the possible table configs for the value\n */\n  menuTableConfig: TableConfig = {\n    columns: [\n      { key: 'menu_item_id', header: 'ID' },\n      { key: 'menu_item_name', header: 'Name' },\n      { key: 'menu_item_type', header: 'Type' },\n      { key: 'menu_item_price', header: 'Price' },\n      { key: 'ingredients', header: 'Ingredients' }\n    ]\n  };\n  /**\n   * This hold all of the possible table configs for the value\n   */\n  ingredientsTableConfig: TableConfig = {\n    columns: [\n      { key: 'ingredient_id', header: 'ID' },\n      { key: 'ingredient_name', header: 'Name' },\n      { key: 'ingredient_quantity', header: 'Quantity' }\n    ]\n  };\n/**\n * This hold all of the possible table configs for the value\n */\n  inventoryTableConfig: TableConfig = {\n    columns: [\n      { key: 'item_id', header: 'ID' },\n      { key: 'item_name', header: 'Name' },\n      { key: 'item_quantity', header: 'Quantity' }\n    ]\n  };\n/**\n * This hold all of the possible table configs for the value\n */\n  restockReport: TableConfig = {\n    columns: [\n      { key: 'item_name', header: 'Name' },\n      { key: 'item_quantity', header: 'Current Quantity' },\n      { key: 'item_quantity_to_order', header: 'Amount to Order' }\n    ]\n  };\n/**\n * This hold all of the possible table configs for the value\n */\n  salesReport: TableConfig = {\n    columns: [\n      { key: 'order_timestamp', header: 'Date' },\n      { key: 'order_total', header: 'Price' },\n      { key: 'order_items', header: 'Items Ordered' }\n    ]\n  };\n/**\n * This hold all of the possible table configs for the value\n */\n  excessReport: TableConfig = {\n    columns: [\n      { key: 'excessIngredients',  header: 'Excess Item' }\n    ]\n  };\n  /**\n   * This hold all of the possible table configs for the value\n   * @param type \n   */\n  openPopup(type: string) {\n    this.showPopup = true;\n    switch (type) {\n      case 'menu':\n        this.popupTitle = 'Edit Menu';\n        this.tableConfig = this.menuTableConfig;\n        this.refreshMenu();\n        break;\n      case 'ingredients':\n        this.popupTitle = 'Edit Ingredients';\n        this.tableConfig = this.ingredientsTableConfig;\n        this.refreshIngredients();\n        break;\n      case 'inventory':\n        this.popupTitle = 'Edit Inventory';\n        this.tableConfig = this.inventoryTableConfig;\n        this.refreshInventory();\n        break;\n      }\n  }\n\n  // ACTION BUTTONS\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  showEditPopup: boolean = false;\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  selectedItem: any = null;\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  currentAction: 'edit' | 'delete' | 'add' | null = null;\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   * @param item \n   */\n  editRow(item: any): void {\n    console.log('Editing item, opening edit popup', item);\n    this.currentAction = 'edit';\n    this.selectedItem = item;\n    if (this.popupTitle === 'Edit Menu') {\n      this.editType = 'menu';\n    } else if (this.popupTitle === 'Edit Ingredients') {\n      this.editType = 'ingredients';\n    } else if (this.popupTitle === 'Edit Inventory') {\n      this.editType = 'inventory';\n    }\n    if (this.editType === 'menu') {\n      this.popupTitle = 'Edit Menu';\n    } else if (this.editType === 'ingredients') {\n      this.popupTitle = 'Edit Ingredients';\n    } else if (this.editType === 'inventory') {\n      this.popupTitle = 'Edit Inventory';\n    }\n    this.showPopup = false;\n    this.showEditPopup = true;\n  }  \n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   * @param item \n   */\n  deleteRow(item: any): void {\n    console.log('Deleting item:', item);\n    if (this.editType === 'menu') {\n      this.popupTitle = 'Edit Menu';\n    } else if (this.editType === 'ingredients') {\n      this.popupTitle = 'Edit Ingredients';\n    } else if (this.editType === 'inventory') {\n      this.popupTitle = 'Edit Inventory';\n    }\n    this.currentAction = 'delete';\n    this.selectedItem = item;\n    this.showConfirmationPopup = true;\n    this.showPopup = false;\n  }\n\n  // EDIT CONFIRMATIONS\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  onEditCancel(): void {\n    this.selectedItem = null;\n    this.showEditPopup = false;\n    this.showPopup = true; // Reopen the main popup if needed\n  }\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   * @param editedItem \n   */\n  onItemSave(editedItem: any): void {\n    // Process the edited item\n    if (this.popupTitle === 'Edit Menu') {\n      this.refreshMenu();\n    } else if (this.popupTitle === 'Edit Ingredients') {\n      this.refreshIngredients();\n    } else if (this.popupTitle === 'Edit Inventory') {\n      this.refreshInventory();\n    }\n    this.selectedItem = editedItem;\n    this.showEditPopup = false;\n    this.showConfirmationPopup = true;\n  }  \n\n  // CONFIRMATION POPUP\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  showConfirmationPopup: boolean = false;\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  editType: 'menu' | 'ingredients' | 'inventory' | null = null;\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   * @param item \n   */\n  onItemConfirm(item: any): void {\n    this.selectedItem = item;\n    this.showConfirmationPopup = false;\n    if (this.popupTitle === 'Edit Menu') {\n      if (this.currentAction === 'edit') {\n        this.MenuService.editMenuItem(item.menu_item_id, item).subscribe(() => {\n          this.refreshMenu();\n        });\n      } else if (this.currentAction === 'delete') {\n        console.log('Deleting menu item', item);\n        this.MenuService.deleteMenuItem(item.menu_item_id).subscribe(() => {\n          this.refreshMenu();\n        });\n      }\n    } else if (this.popupTitle === 'Edit Ingredients') {\n      if (this.currentAction === 'edit') {\n        this.IngredientsService.editIngredient(item.ingredient_id, item).subscribe(() => {\n          this.refreshIngredients();\n        });\n      } else if (this.currentAction === 'delete') {\n        this.IngredientsService.deleteIngredient(item.ingredient_id).subscribe(() => {\n          this.refreshIngredients();\n        });\n      }\n    } else if (this.popupTitle === 'Edit Inventory') {\n      if (this.currentAction === 'edit') {\n        this.InventoryService.editInventoryItem(item.item_id, item).subscribe(() => {\n          this.refreshInventory();\n        });\n      } else if (this.currentAction === 'delete') {\n        this.InventoryService.deleteInventoryItem(item.item_id).subscribe(() => {\n          this.refreshInventory();\n        });\n      }\n    } else if (this.popupTitle === 'Quick Add') {\n      if (this.editType === 'menu') {\n        this.MenuService.addMenuItem(item).subscribe(() => {\n          this.refreshMenu();\n        });\n        console.log('Adding menu item', item.menu_item_name);\n      } else if (this.editType === 'ingredients') {\n        this.IngredientsService.addIngredient(item).subscribe(() => {\n          this.refreshIngredients();\n        });\n      } else if (this.editType === 'inventory') {\n        this.InventoryService.addInventoryItem(item).subscribe(() => {\n          this.refreshInventory();\n        });\n      }\n    }\n    this.showPopup = true;\n    if (this.popupTitle === 'Add Seasonal Item') {\n      this.MenuService.addMenuItem(item).subscribe(() => {\n        this.refreshMenu();\n      });\n      this.showPopup = false;\n    }\n  }\n/**\n * This function is called when the user clicks on the \"Add\" button\n */\n  onItemDecline(): void {\n    this.showConfirmationPopup = false;\n    if (this.popupTitle === 'Edit Menu') {\n      this.showPopup = true;\n    } else if (this.popupTitle === 'Edit Ingredients') {\n      this.showPopup = true;\n    } else if (this.popupTitle === 'Edit Inventory') {\n      this.showPopup = true;\n    } else if (this.popupTitle === 'Quick Add') {\n      this.showQuickAddPopup = true;\n    } else if (this.popupTitle === 'Add Seasonal Item') {\n      this.showSeasonalItemPopup = true;\n    }\n  }\n\n  // QUICK ADD POPUP\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  showQuickAddPopup: boolean = false;\n/**\n *  This function is called when the user clicks on the \"Add\" button\n * @param type \n */\n  quickAdd(type: string): void {\n    if (this.popupTitle === 'Edit Menu') {\n      this.editType = 'menu';\n    } else if (this.popupTitle === 'Edit Ingredients') {\n      this.editType = 'ingredients';\n    } else if (this.popupTitle === 'Edit Inventory') {\n      this.editType = 'inventory';\n    }\n    this.popupTitle = 'Quick Add';\n    console.log('Quick add');\n    this.showPopup = false;\n    this.showQuickAddPopup = true;\n  }\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  onQuickAddCancel(): void {\n    this.showQuickAddPopup = false;\n    this.showPopup = true;\n  }\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   * @param newItem \n   */\n  onItemAdd(newItem: any): void {\n    // Process the new item\n    this.currentAction = 'add';\n    if (this.popupTitle === 'Edit Menu') {\n      this.refreshMenu();\n    } else if (this.popupTitle === 'Edit Ingredients') {\n      this.refreshIngredients();\n    } else if (this.popupTitle === 'Edit Inventory') {\n      this.refreshInventory();\n    }\n    this.selectedItem = newItem;\n    this.showQuickAddPopup = false;\n    this.showConfirmationPopup = true;\n  }\n\n  // SEAOSONAL ITEM POPUP\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  showSeasonalItemPopup: boolean = false;\n/**\n * This function is called when the user clicks on the \"Add\" button\n * @param type \n */\n  seasonalItem(type: string): void {\n    this.popupTitle = 'Add Seasonal Item';\n    this.currentAction = 'add';\n    console.log('Seasonal item');\n    this.showSeasonalItemPopup = true;\n  }\n/**\n * This function is called when the user clicks on the \"Add\" button\n */\n  onSeasonalItemCancel(): void {\n    this.showSeasonalItemPopup = false;\n  }\n/**\n * This function is called when the user clicks on the \"Add\" button\n * @param newItem \n */\n  seasonalItemAdd(newItem: any): void {\n    this.selectedItem = newItem;\n    this.showSeasonalItemPopup = false;\n    this.showConfirmationPopup = true;\n  }\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   * @param type \n   * @param start \n   * @param end \n   */\n  // OTHER\n  reportPopup(type: string, start?: string, end?: string) {\n    this.showRestockReportPopup = true;\n    switch (type) {\n      case 'restock': \n        this.popupTitle = 'Restock Report';\n        this.tableConfig = this.restockReport;\n        this.getLowStock();\n        break;\n      case 'sales': \n        if (!start) {\n          start = \"2023-01-01\";\n        }\n        if (!end) {\n          end = \"2023-03-01\";\n        }\n        this.popupTitle = 'Sales Report';\n        this.tableConfig = this.salesReport;\n        this.refreshSales(start, end);\n        break;\n      case 'excess':\n        this.popupTitle = 'Excess Report';\n        this.tableConfig = this.excessReport;\n        if (!start) {\n          start = \"2023-01-01\";\n        }\n        if (!end) {\n          end = \"2023-03-01\";\n        }\n        this.getExcess(start, end);\n        break;\n      }\n  }\n\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  clickSalesReport() {\n    // Do something cool\n    console.log('clickSalesReport()');\n  }\n  /**\n   *  This function is called when the user clicks on the \"Add\" button\n   */\n  clickExcessReport() {\n    // Do something cool\n    console.log('clickExcessReport()');\n  }\n  /**\n   *  This function is called when the user clicks on the \"Add\" button\n   */\n  clickRestockReport() {\n    // Do something cool\n    console.log('clickStockReport()');\n  }\n  /**\n   *  This function is called when the user clicks on the \"Add\" button\n   */\n  clickPPReport() {\n    // Do something cool\n    console.log('clickPPReport()');\n  }\n  /**\n   *  This function is called when the user clicks on the \"Add\" button\n   */\n  clickIPReport() {\n    // Do something cool\n    console.log('clickIPReport()');\n  }\n}\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SeasonalItemPopupComponent.html":{"url":"components/SeasonalItemPopupComponent.html","title":"component - SeasonalItemPopupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SeasonalItemPopupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/manager-view/seasonal-item-popup/seasonal-item-popup.component.ts\n\n\n\n    \n        Description\n    \n    \n        SeasonalItemPopupComponent provides a user interface for adding seasonal menu items.\nIt enables the selection of item types, ingredients, and creation of new menu items.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-seasonal-item-popup\n            \n\n\n\n            \n                styleUrls\n                ./seasonal-item-popup.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./seasonal-item-popup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addedMenuItemIngredients\n                            \n                            \n                                addedMenuItemName\n                            \n                            \n                                addedMenuItemPrice\n                            \n                            \n                                addedMenuItemType\n                            \n                            \n                                ingredientNames\n                            \n                            \n                                itemTypes\n                            \n                            \n                                selectedIngredients\n                            \n                            \n                                selectedType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addItem\n                            \n                            \n                                closePopup\n                            \n                            \n                                formatSingleUnderscore\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                cancel\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(menuService: MenuService, ingredientsService: IngredientsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/manager-view/seasonal-item-popup/seasonal-item-popup.component.ts:61\n                            \n                        \n\n                \n                    \n                            Constructor for SeasonalItemPopupComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        menuService\n                                                  \n                                                        \n                                                                        MenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ingredientsService\n                                                  \n                                                        \n                                                                        IngredientsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        add\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/manager-view/seasonal-item-popup/seasonal-item-popup.component.ts:25\n                            \n                        \n                \n                    \n                        Event emitter for adding a new seasonal item.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        cancel\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/manager-view/seasonal-item-popup/seasonal-item-popup.component.ts:20\n                            \n                        \n                \n                    \n                        Event emitter for canceling the addition of a seasonal item.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addItem\n                        \n                    \n                \n            \n            \n                \naddItem()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/manager-view/seasonal-item-popup/seasonal-item-popup.component.ts:87\n                        \n                    \n\n\n            \n                \n                        Adds a new seasonal item based on the selected parameters.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closePopup\n                        \n                    \n                \n            \n            \n                \nclosePopup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/manager-view/seasonal-item-popup/seasonal-item-popup.component.ts:107\n                        \n                    \n\n\n            \n                \n                        Emits an event to close the popup without adding an item.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatSingleUnderscore\n                        \n                    \n                \n            \n            \n                \nformatSingleUnderscore(ordItem: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/manager-view/seasonal-item-popup/seasonal-item-popup.component.ts:115\n                        \n                    \n\n\n            \n                \n                        Formats a string with single underscores to a string with spaces and capitalized words.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ordItem\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/manager-view/seasonal-item-popup/seasonal-item-popup.component.ts:73\n                        \n                    \n\n\n            \n                \n                        OnInit lifecycle hook to fetch available menu item types and ingredient names.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addedMenuItemIngredients\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/manager-view/seasonal-item-popup/seasonal-item-popup.component.ts:41\n                        \n                    \n\n            \n                \n                    The ingredients of the new menu item.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addedMenuItemName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/manager-view/seasonal-item-popup/seasonal-item-popup.component.ts:29\n                        \n                    \n\n            \n                \n                    The name of the new menu item.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addedMenuItemPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/manager-view/seasonal-item-popup/seasonal-item-popup.component.ts:33\n                        \n                    \n\n            \n                \n                    The price of the new menu item.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addedMenuItemType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/manager-view/seasonal-item-popup/seasonal-item-popup.component.ts:37\n                        \n                    \n\n            \n                \n                    The type of the new menu item.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ingredientNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/manager-view/seasonal-item-popup/seasonal-item-popup.component.ts:46\n                        \n                    \n\n            \n                \n                    Array of ingredient names available for selection.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        itemTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/manager-view/seasonal-item-popup/seasonal-item-popup.component.ts:51\n                        \n                    \n\n            \n                \n                    Array of menu item types available for selection.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedIngredients\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/manager-view/seasonal-item-popup/seasonal-item-popup.component.ts:56\n                        \n                    \n\n            \n                \n                    Object to track selected ingredients for the new menu item.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/manager-view/seasonal-item-popup/seasonal-item-popup.component.ts:61\n                        \n                    \n\n            \n                \n                    The selected type for the new menu item.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { MenuService } from 'src/app/services/menu.service';\nimport { IngredientsService } from 'src/app/services/ingredients.service';\n\n/**\n * `SeasonalItemPopupComponent` provides a user interface for adding seasonal menu items.\n * It enables the selection of item types, ingredients, and creation of new menu items.\n *\n * @Component Decorator that marks the class as an Angular component, specifying the selector, template, and styles.\n */\n@Component({\n  selector: 'app-seasonal-item-popup',\n  templateUrl: './seasonal-item-popup.component.html',\n  styleUrls: ['./seasonal-item-popup.component.scss']\n})\nexport class SeasonalItemPopupComponent {\n  /**\n   * Event emitter for canceling the addition of a seasonal item.\n   */\n  @Output() cancel = new EventEmitter();\n\n  /**\n   * Event emitter for adding a new seasonal item.\n   */\n  @Output() add = new EventEmitter();\n  /**\n   * The name of the new menu item.\n   */\n  addedMenuItemName: string = '';\n  /**\n   * The price of the new menu item.\n   */\n  addedMenuItemPrice: string = '';\n  /**\n   * The type of the new menu item.\n   */\n  addedMenuItemType: string = '';\n  /**\n   * The ingredients of the new menu item.\n   */\n  addedMenuItemIngredients: string = '';\n\n  /**\n   * Array of ingredient names available for selection.\n   */\n  ingredientNames: string[] = [];\n\n  /**\n   * Array of menu item types available for selection.\n   */\n  itemTypes: string[] = [];\n\n  /**\n   * Object to track selected ingredients for the new menu item.\n   */\n  selectedIngredients: { [key: string]: boolean } = {};\n\n  /**\n   * The selected type for the new menu item.\n   */\n  selectedType: string = '';\n\n  /**\n   * Constructor for `SeasonalItemPopupComponent`.\n   * @param menuService \n   * @param ingredientsService \n   */\n  constructor(private menuService: MenuService, private ingredientsService: IngredientsService) {}\n\n  /**\n   * OnInit lifecycle hook to fetch available menu item types and ingredient names.\n   */\n  ngOnInit(): void {\n    this.menuService.getMenuItemTypes().subscribe((data: any) => {\n      this.itemTypes = data.map((item: any) => item.menu_item_type);\n    });\n\n    this.ingredientsService.getIngredientNames().subscribe((data: any) => {\n      this.ingredientNames = data.map((item: any) => item.ingredient_name);\n      data.forEach((ingredient: string) => this.selectedIngredients[ingredient] = false);\n    });\n  }\n\n  /**\n   * Adds a new seasonal item based on the selected parameters.\n   */\n   addItem(): void {\n    let newItem = {};\n\n    const ingredientsArray = Object.keys(this.selectedIngredients)\n                                     .filter(key => this.selectedIngredients[key]);\n\n    newItem = {\n      menu_item_name: this.addedMenuItemName,\n      menu_item_price: this.addedMenuItemPrice,\n      menu_item_type: this.selectedType,\n      ingredients: ingredientsArray,\n      image: \"https://lh3.googleusercontent.com/pw/ADCreHeFJZfwed7QCBCsg-WGwXr_EsD02eLtWt8Lo7hNM0UMMVj78qZo2j2NVzL9s-laBEx76f1AqGhaU7PpxO2fNVlSqMUHm24gNKWYV-pOZ_TzBpuwYTM\",\n      description: \"Experience the intrigue of our \" + this.formatSingleUnderscore(this.addedMenuItemName) + \", a beverage that's still in the experimental stage, awaiting your taste buds' verdict. With each sip, you become part of our culinary exploration, offering feedback and insights as we refine this unique concoction.\"\n    };\n\n    this.add.emit(newItem);\n  }\n  /**\n   * Emits an event to close the popup without adding an item.\n   */\n   closePopup(): void {\n    this.cancel.emit();\n  }\n  /**\n   * Formats a string with single underscores to a string with spaces and capitalized words.\n   * @param ordItem \n   * @returns \n   */\n  formatSingleUnderscore(ordItem: string): string {\n    let formattedItem = ordItem.replace(/_/g, ' ');\n  \n    formattedItem = formattedItem.replace(/\\w\\S*/g, (word) => {\n      return word.charAt(0).toUpperCase() + word.substr(1).toLowerCase();\n    });\n  \n    return formattedItem;\n  }\n}\n    \n\n    \n        \n    \n        \n        Add Seasonal Item\n        \n            Name: \n            Price: $ \n            Type: \n            \n                \n                {{ type }}\n            \n            Ingredients: \n            \n                \n                {{ ingredient }}\n            \n        \n        \n            Add\n            Cancel\n        \n        \n    \n\n  \n    \n\n    \n                \n                    ./seasonal-item-popup.component.scss\n                \n                .backdrop {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n    z-index: 1050;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    // padding-top: 10vh;\n}\n  \n.popup {\n    background-color: white;\n    padding: 20px;\n    border-radius: 5px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    position: relative;\n    z-index: 1051;\n    max-height: 80vh;\n    overflow-y: auto; /* Makes content scrollable */\n    width: 80%;\n    position: relative;\n}\n\n.buttons {\n    display: flex;\n    justify-content: right;\n    gap: 5px;\n}\n\n.add {\n    border-color: rgb(100, 255, 100, 0.75);\n    background-color: white;\n}\n\n.add:hover {\n    background-color: rgb(100, 255, 100, 0.75);\n}\n\n.cancel {\n    border-color: rgb(255, 100, 100, 0.75);\n    background-color: white;\n}\n\n.cancel:hover {\n    background-color: rgb(255, 100, 100, 0.75);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Add Seasonal Item                    Name:             Price: $             Type:                                             {{ type }}                        Ingredients:                                             {{ ingredient }}                                        Add            Cancel                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'app-authentication-button'},{'name': 'CartModalComponent', 'selector': 'app-cart-modal'},{'name': 'CashierViewComponent', 'selector': 'app-cashier-view'},{'name': 'CheckoutPopupComponent', 'selector': 'app-checkout-popup'},{'name': 'ConfirmationPopupComponent', 'selector': 'app-confirmation-popup'},{'name': 'ContactUsComponent', 'selector': 'app-contact-us'},{'name': 'CustomerViewComponent', 'selector': 'app-customer-view'},{'name': 'EditItemPopupComponent', 'selector': 'app-edit-item-popup'},{'name': 'EmployeeCreationsMenuComponent', 'selector': 'app-employee-creations-menu'},{'name': 'GetRoleComponent', 'selector': 'app-get-role'},{'name': 'LearnMoreComponent', 'selector': 'app-learn-more'},{'name': 'LoginButtonComponent', 'selector': 'app-login-button'},{'name': 'LogoutButtonComponent', 'selector': 'app-logout-button'},{'name': 'ManagerPopupComponent', 'selector': 'app-manager-popup'},{'name': 'ManagerViewComponent', 'selector': 'app-manager-view'},{'name': 'MenuItemComponent', 'selector': 'app-menu-item'},{'name': 'MenuViewComponent', 'selector': 'app-menu-view'},{'name': 'MilkTeaMenuComponent', 'selector': 'app-milk-tea-menu'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuickAddPopupComponent', 'selector': 'app-quick-add-popup'},{'name': 'RestockReportPopupComponent', 'selector': 'app-restock-report-popup'},{'name': 'SeasonalItemPopupComponent', 'selector': 'app-seasonal-item-popup'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'SignatureMilkTeaMenuComponent', 'selector': 'app-signature-milk-tea-menu'},{'name': 'SignupButtonComponent', 'selector': 'app-signup-button'},{'name': 'SlushMenuComponent', 'selector': 'app-slush-menu'},{'name': 'SmoothieMenuComponent', 'selector': 'app-smoothie-menu'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SeasonalItemPopupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ShoppingCartComponent.html":{"url":"components/ShoppingCartComponent.html","title":"component - ShoppingCartComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ShoppingCartComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shopping-cart/shopping-cart.component.ts\n\n\n\n    \n        Description\n    \n    \n        ShoppingCartComponent manages the display and interactions within the shopping cart.\nIt allows users to view, modify, and proceed with their order. This component handles item removal,\ncontinuation to checkout, and order submission.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-shopping-cart\n            \n\n\n\n            \n                styleUrls\n                ./shopping-cart.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./shopping-cart.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cartSubscription\n                            \n                            \n                                cartTotal\n                            \n                            \n                                popupConfig\n                            \n                            \n                                popupContent\n                            \n                            \n                                popupTitle\n                            \n                            \n                                showPopup\n                            \n                            \n                                    Optional\n                                tableConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateTotal\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCancelClick\n                            \n                            \n                                onCheckout\n                            \n                            \n                                onContinueClick\n                            \n                            \n                                removeItem\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                menuItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                cancelClicked\n                            \n                            \n                                continueClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cartService: CartService, http: HttpClient, orderService: OrdersService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:81\n                            \n                        \n\n                \n                    \n                            The content to be displayed within the table.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cartService\n                                                  \n                                                        \n                                                                        CartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        orderService\n                                                  \n                                                        \n                                                                        OrdersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        menuItems\n                    \n                \n                \n                    \n                        Type :         MenuItem[] | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shopping-cart/shopping-cart.component.ts:48\n                            \n                        \n                \n                    \n                        The configuration for the table, including the columns to display.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        cancelClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shopping-cart/shopping-cart.component.ts:56\n                            \n                        \n                \n                    \n                        Event emitter to notify the parent component to close the popup.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        continueClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shopping-cart/shopping-cart.component.ts:52\n                            \n                        \n                \n                    \n                        Event emitter to notify the parent component to close the popup.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calculateTotal\n                        \n                    \n                \n            \n            \n                \ncalculateTotal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shopping-cart/shopping-cart.component.ts:197\n                        \n                    \n\n\n            \n                \n                        Calculates the total price of items in the cart.\n\n\n                        \n                            Returns :         number\n\n                        \n                            \n                                The total price of all items in the cart.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shopping-cart/shopping-cart.component.ts:179\n                        \n                    \n\n\n            \n                \n                        OnDestroy lifecycle hook to clean up subscriptions.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shopping-cart/shopping-cart.component.ts:100\n                        \n                    \n\n\n            \n                \n                        OnInit lifecycle hook to subscribe to the cart items.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancelClick\n                        \n                    \n                \n            \n            \n                \nonCancelClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shopping-cart/shopping-cart.component.ts:188\n                        \n                    \n\n\n            \n                \n                        Emits an event to cancel the cart operation and clears the cart.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCheckout\n                        \n                    \n                \n            \n            \n                \nonCheckout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shopping-cart/shopping-cart.component.ts:163\n                        \n                    \n\n\n            \n                \n                        Performs the checkout operation and updates the order history.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onContinueClick\n                        \n                    \n                \n            \n            \n                \nonContinueClick()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shopping-cart/shopping-cart.component.ts:117\n                        \n                    \n\n\n            \n                \n                        Handles the continue action, triggers the checkout process.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shopping-cart/shopping-cart.component.ts:111\n                        \n                    \n\n\n            \n                \n                        Removes an item from the cart.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The index of the item to be removed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cartSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:60\n                        \n                    \n\n            \n                \n                    The subscription to the cart items.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cartTotal\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"0\"\n                    \n                \n                    \n                        \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:76\n                        \n                    \n\n            \n                \n                    The total price of the items in the cart.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        popupConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TableConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n    columns: [\n      { key: 'menu_item_name', header: 'Name' },\n      { key: 'menu_item_price', header: 'Price' }\n    ]\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        popupContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:72\n                        \n                    \n\n            \n                \n                     The content to be displayed within the table.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        popupTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:68\n                        \n                    \n\n            \n                \n                    The title of the popup, typically describing the content or purpose of the table.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPopup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:64\n                        \n                    \n\n            \n                \n                    The subscription to the cart total.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        tableConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TableConfig\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shopping-cart/shopping-cart.component.ts:81\n                        \n                    \n\n            \n                \n                    The configuration for the table, including the columns to display.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { MenuItem } from '../menu-view/menu-item.model';\nimport { CartService } from '../cart-modal/cart-modal.service';\nimport { Subscription } from 'rxjs';\nimport { OrdersService } from '../services/orders.service';\nimport { HttpClient } from '@angular/common/http';\n\n/**\n * Represents the structure of a table column.\n */\ninterface TableColumn {\n  /**\n   * The key of the column.\n   */\n  key: string;\n  /**\n   * The header of the column.\n   */\n  header: string;\n}\n\n/**\n * Represents the configuration object for table columns in the shopping cart.\n */\ninterface TableConfig {\n  /**\n   * The columns of the table.\n   */\n  columns: TableColumn[];\n}\n\n/**\n * `ShoppingCartComponent` manages the display and interactions within the shopping cart.\n * It allows users to view, modify, and proceed with their order. This component handles item removal, \n * continuation to checkout, and order submission.\n *\n * @Component Decorator that marks the class as an Angular component, specifying the selector, template, and styles.\n */\n@Component({\n  selector: 'app-shopping-cart',\n  templateUrl: './shopping-cart.component.html',\n  styleUrls: ['./shopping-cart.component.scss']\n})\nexport class ShoppingCartComponent {\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  @Input() menuItems: MenuItem[] | undefined;\n  /**\n   * Event emitter to notify the parent component to close the popup.\n   */\n  @Output() continueClicked: EventEmitter = new EventEmitter();\n  /**\n   * Event emitter to notify the parent component to close the popup.\n   */\n  @Output() cancelClicked: EventEmitter = new EventEmitter();\n  /**\n   * The subscription to the cart items.\n   */\n  private cartSubscription: Subscription | undefined;\n  /**\n   * The subscription to the cart total.\n   */\n  showPopup: boolean = false;\n  /**\n   * The title of the popup, typically describing the content or purpose of the table.\n   */\n  popupTitle: string = '';\n  /**\n   *  The content to be displayed within the table.\n   */\n  popupContent: any;\n  /**\n   * The total price of the items in the cart.\n   */\n  cartTotal: string = \"0\";\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n\n  tableConfig?: TableConfig;\n  /**\n   * The content to be displayed within the table.\n   * @param cartService \n   * @param http \n   * @param orderService \n   */\n\n  constructor(private cartService: CartService, private http: HttpClient,  private orderService: OrdersService) { }\n\n  popupConfig: TableConfig = {\n    columns: [\n      { key: 'menu_item_name', header: 'Name' },\n      { key: 'menu_item_price', header: 'Price' }\n    ]\n  };\n  /**\n   * OnInit lifecycle hook to subscribe to the cart items.\n   */\n  ngOnInit() {\n    // Subscribe to changes in the cartItems$\n    this.cartSubscription = this.cartService.cartItems$.subscribe(items => {\n      this.menuItems = items;\n    });\n  }\n  /**\n   * Removes an item from the cart.\n   *\n   * @param index The index of the item to be removed.\n   */\n  removeItem(index: number) {\n    this.cartService.removeItem(index);\n  }\n  /**\n   * Handles the continue action, triggers the checkout process.\n   */\n  onContinueClick() {\n    this.continueClicked.emit();\n    // const orderDetails = {\n    //   order_timestamp: new Date(),\n    //   order_items: this.menuItems?.map(item => item.menu_item_name),\n    //   order_total: this.calculateTotal(),\n    //   // Add other necessary details like employee_id, customer_id, etc.\n    // };\n\n    // do the popup\n    /**\n     * Shows the popup with the order details.\n     */\n    this.showPopup = true;\n    /**\n     * The title of the popup.\n     */\n    this.popupTitle = 'Checkout';\n    /**\n     * The content of the popup.\n     */\n    this.popupContent = this.menuItems;\n    /**\n     * The total price of the order.\n     */\n    this.cartTotal = this.calculateTotal().toString();\n\n    // // Make an HTTP POST request to your backend endpoint\n    // this.http.post('/api/create-order', orderDetails)\n    //   .subscribe((response) => {\n    //     console.log('Order created successfully:', response);\n    //     this.cartService.clearCart();\n    //     this.continueClicked.emit();\n    //   }, (error) => {\n    //     console.error('Error creating order:', error);\n    //   });\n    \n    if (this.menuItems && this.menuItems.length > 0) {\n      this.onCheckout();\n      this.cartService.clearCart();\n      this.menuItems = [];\n    }\n  }\n  /**\n   * Performs the checkout operation and updates the order history.\n   */\n  onCheckout() {\n    const employeeId = 1; // Replace with actual employeeId\n    const customerId = 1; // Replace with actual customerId\n\n    // Update order history\n    //@ts-ignore\n    this.orderService.updateOrderHistory(this.menuItems, this.calculateTotal(), employeeId, customerId)\n      .subscribe(response => {\n        console.log('Order history updated successfully:', response);\n      }, error => {\n        console.error('Error updating order history:', error);\n      });\n  }\n  /**\n   * OnDestroy lifecycle hook to clean up subscriptions.\n   */\n  ngOnDestroy() {\n    // Unsubscribe to prevent memory leak\n    if (this.cartSubscription) {\n      this.cartSubscription.unsubscribe();\n    }\n  }\n  /**\n   * Emits an event to cancel the cart operation and clears the cart.\n   */\n  onCancelClick() {\n    this.cancelClicked.emit();\n    this.cartService.clearCart();\n  }\n  /**\n   * Calculates the total price of items in the cart.\n   *\n   * @returns The total price of all items in the cart.\n   */\n  calculateTotal(): number {\n    if (this.menuItems) {\n      return this.menuItems.reduce((total, item) => total + parseFloat(item.menu_item_price), 0);\n    } else {\n      return 0;\n    }\n  }\n}\n    \n\n    \n        \n\n\n    \n        \n            \n                \n                    \n                        Flavored Tea & Coffee\n                    \n                    \n                        Milk-Tea\n                    \n                    \n                        Signature Milk Tea\n                    \n                    \n                        Slush\n                    \n                    \n                        Smoothies\n                    \n                    \n                        Employee Creations\n                    \n                    \n                        Cart\n                    \n                \n            \n        \n    \n    \n    \n    \n    \n    \n    Checkout Cart\n\n    \n        \n            \n                \n                \n                    Menu Item\n                    Price\n                    Added Toppings\n                     \n                \n            \n            \n                \n                    \n                        \n                            \n                                \n                                {{item.menu_item_name | replaceUnderscores | titlecase}}\n                            \n                            \n                        {{item.menu_item_price | currency:'USD':'symbol':'1.2-2' }}\n                        \n                            \n                                {{ topping | capitalizeAndReplace }}\n                            \n                        \n                        Remove\n                    \n                \n            \n        \n    \n    \n        \n            Total: {{ calculateTotal() | currency:'USD':'symbol':'1.2-2' }}\n        \n        Checkout\n        Cancel Order\n    \n\n    \n\n    \n                \n                    ./shopping-cart.component.scss\n                \n                // cart-modal.component.scss\n.TradNav{\n    width: 100vw;\n    background-color: aqua;\n    position: fixed;\n    left: 0;\n    margin-top: 60px;\n    z-index: 1;\n}\n\n.center {\n    width: 100%;\n    height: 100%;\n    text-align: center;\n}\n\n\n\n.menu-container {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-around;\n    flex-grow: 1;\n    overflow: auto; /* Adds a scrollbar if content overflows */\n    padding-bottom: 20px; /* Adjust the padding as needed */\n}\n\n\ntable {\n    width: 1100px;\n    z-index: 0;\n    border-collapse: collapse;\n    position: relative;\n\n    td {\n        padding: 8px;\n        text-align: left;\n        vertical-align: top;\n        border-radius: 8px;\n    }\n\n\n\n\n    th {\n        font-size: large;\n        background-color: transparent;\n        text-align: left;\n    }\n}\n\n\n.total {\n    display: block;\n    width: 100%;\n    padding: 10px;\n    background: #acacac;\n    color: #030303;\n    border: none;\n    position: relative;\n    width: 300px;\n    border-radius: 8px;\n    height: 75px;\n\n    p {\n        font-size: 28px;\n        text-align: center;\n        vertical-align: center;\n    }\n}\n\n\nbutton.continue {\n    display: block;\n    width: 100%;\n    padding: 10px;\n    margin-top: 10px;\n    background: #4CAF50;\n    color: #fff;\n    border: none;\n    position: relative;\n    width: 300px;\n    height: 75px;\n    font-size: 28px;\n    border-radius: 8px;\n    transition: transform 0.3s ease;\n\n    &:hover {\n        transform: scale(1.05);\n    }\n    &:active {\n        background-color: rgb(92, 184, 92);\n    }\n}\n\nbutton.cancel {\n    width: 100%;\n    padding: 10px;\n    margin-top: 10px;\n    background-color: rgb(250, 4, 4);\n    color: #fff;\n    border: none;\n    position: relative;\n    width: 300px;\n    height: 75px;\n    font-size: 28px;\n    border-radius: 8px;\n\n    transition: transform 0.3s ease;\n\n    &:hover {\n        transform: scale(1.05);\n    }\n    &:active {\n        background-color: rgb(243, 81, 81);\n    }\n}\n\n\nbutton.small {\n    justify-content: left;\n    background-color: transparent;\n    border-color: transparent;\n    font-size: 15px;\n}\n\n\n\n.itemclass{\n    width: 100px;\n    height: 100px;\n}\n\n.flextableimage{\n    display: flex;\n    flex-direction: column;\n}\n\n\n.footerbuttons {\n    width: 300px;\n    padding: 40px;\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    left: calc(100% - 380px);\n     /* Pushes the footer to the bottom */\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Flavored Tea & Coffee                                                                Milk-Tea                                                                Signature Milk Tea                                                                Slush                                                                Smoothies                                                                Employee Creations                                                                Cart                                                                                    Checkout Cart                                                                            Menu Item                    Price                    Added Toppings                                                                                                                                                                                                                     {{item.menu_item_name | replaceUnderscores | titlecase}}                                                                                {{item.menu_item_price | currency:\\'USD\\':\\'symbol\\':\\'1.2-2\\' }}                                                                                    {{ topping | capitalizeAndReplace }}                                                                            Remove                                                                                    Total: {{ calculateTotal() | currency:\\'USD\\':\\'symbol\\':\\'1.2-2\\' }}                Checkout        Cancel Order    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'app-authentication-button'},{'name': 'CartModalComponent', 'selector': 'app-cart-modal'},{'name': 'CashierViewComponent', 'selector': 'app-cashier-view'},{'name': 'CheckoutPopupComponent', 'selector': 'app-checkout-popup'},{'name': 'ConfirmationPopupComponent', 'selector': 'app-confirmation-popup'},{'name': 'ContactUsComponent', 'selector': 'app-contact-us'},{'name': 'CustomerViewComponent', 'selector': 'app-customer-view'},{'name': 'EditItemPopupComponent', 'selector': 'app-edit-item-popup'},{'name': 'EmployeeCreationsMenuComponent', 'selector': 'app-employee-creations-menu'},{'name': 'GetRoleComponent', 'selector': 'app-get-role'},{'name': 'LearnMoreComponent', 'selector': 'app-learn-more'},{'name': 'LoginButtonComponent', 'selector': 'app-login-button'},{'name': 'LogoutButtonComponent', 'selector': 'app-logout-button'},{'name': 'ManagerPopupComponent', 'selector': 'app-manager-popup'},{'name': 'ManagerViewComponent', 'selector': 'app-manager-view'},{'name': 'MenuItemComponent', 'selector': 'app-menu-item'},{'name': 'MenuViewComponent', 'selector': 'app-menu-view'},{'name': 'MilkTeaMenuComponent', 'selector': 'app-milk-tea-menu'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuickAddPopupComponent', 'selector': 'app-quick-add-popup'},{'name': 'RestockReportPopupComponent', 'selector': 'app-restock-report-popup'},{'name': 'SeasonalItemPopupComponent', 'selector': 'app-seasonal-item-popup'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'SignatureMilkTeaMenuComponent', 'selector': 'app-signature-milk-tea-menu'},{'name': 'SignupButtonComponent', 'selector': 'app-signup-button'},{'name': 'SlushMenuComponent', 'selector': 'app-slush-menu'},{'name': 'SmoothieMenuComponent', 'selector': 'app-smoothie-menu'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ShoppingCartComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignatureMilkTeaMenuComponent.html":{"url":"components/SignatureMilkTeaMenuComponent.html","title":"component - SignatureMilkTeaMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignatureMilkTeaMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/signature-milk-tea-menu/signature-milk-tea-menu.component.ts\n\n\n\n    \n        Description\n    \n    \n        SignatureMilkTeaMenuComponent displays a menu of signature milk tea items.\nIt utilizes the MenuService to fetch and display a variety of signature milk tea options.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signature-milk-tea-menu\n            \n\n\n\n            \n                styleUrls\n                ./signature-milk-tea-menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./signature-milk-tea-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Data\n                            \n                            \n                                FlavoredTeaData\n                            \n                            \n                                menuItems\n                            \n                            \n                                tableData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchMenuItemsByType\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(menuService: MenuService)\n                    \n                \n                        \n                            \n                                Defined in src/app/signature-milk-tea-menu/signature-milk-tea-menu.component.ts:72\n                            \n                        \n\n                \n                    \n                            Constructor for SignatureMilkTeaMenuComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        menuService\n                                                  \n                                                        \n                                                                        MenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to fetch and manage menu items.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchMenuItemsByType\n                        \n                    \n                \n            \n            \n                \nfetchMenuItemsByType(type: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/signature-milk-tea-menu/signature-milk-tea-menu.component.ts:93\n                        \n                    \n\n\n            \n                \n                        Fetches menu items by a specific type.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The type of menu items to fetch (e.g., 'signature_milk_tea').\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/signature-milk-tea-menu/signature-milk-tea-menu.component.ts:84\n                        \n                    \n\n\n            \n                \n                        OnInit lifecycle hook to fetch signature milk tea menu items.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        Data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/signature-milk-tea-menu/signature-milk-tea-menu.component.ts:64\n                        \n                    \n\n            \n                \n                    The data to be displayed in the table.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FlavoredTeaData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/signature-milk-tea-menu/signature-milk-tea-menu.component.ts:72\n                        \n                    \n\n            \n                \n                    The data to be displayed in the table.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/signature-milk-tea-menu/signature-milk-tea-menu.component.ts:68\n                        \n                    \n\n            \n                \n                    The data to be displayed in the table.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tableData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : [{items: [] }]\n                    \n                \n                    \n                        \n                                Defined in src/app/signature-milk-tea-menu/signature-milk-tea-menu.component.ts:60\n                        \n                    \n\n            \n                \n                    The data to be displayed in the table.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MenuService } from '../services/menu.service';\n\n/**\n * Represents the structure of a menu item.\n */\n/**\n * Interface for a menu item.\n */\n interface MenuItem {\n  /**\n   * The id of the menu item.\n   */\n  menu_item_id: number;\n  /**\n   * The name of the menu item.\n   */\n  menu_item_name: string;\n  /**\n   * The type of the menu item.\n   */\n  menu_item_type: string;\n  /**\n   * The price of the menu item.\n   */\n  menu_item_price: string;\n  /**\n   * The ingredients of the menu item.\n   */\n  ingredients: string[];\n  /**\n   * The image of the menu item.\n   */\n  image: string;\n  /**\n   * The toppings of the menu item.\n   */\n  description: string;\n  /**\n   * The toppings of the menu item.\n   */\n  added_toppings: string[];\n}\n\n/**\n * `SignatureMilkTeaMenuComponent` displays a menu of signature milk tea items.\n * It utilizes the `MenuService` to fetch and display a variety of signature milk tea options.\n *\n * @Component Decorator that marks the class as an Angular component, specifying the selector, template, and styles.\n */\n@Component({\n  selector: 'app-signature-milk-tea-menu',\n  templateUrl: './signature-milk-tea-menu.component.html',\n  styleUrls: ['./signature-milk-tea-menu.component.scss']\n})\nexport class SignatureMilkTeaMenuComponent implements OnInit {\n  /**\n   * The data to be displayed in the table.\n   */\n  tableData: any[] = [{items: [] }];\n  /**\n   * The data to be displayed in the table.\n   */\n  Data = {};\n  /**\n   * The data to be displayed in the table.\n   */\n  menuItems: MenuItem[] = [];\n  /**\n   * The data to be displayed in the table.\n   */\n  FlavoredTeaData = {};\n\n  /**\n   * Constructor for `SignatureMilkTeaMenuComponent`.\n   * \n   * @param menuService Service to fetch and manage menu items.\n   */\n  constructor(private menuService: MenuService) {}\n\n  /**\n   * OnInit lifecycle hook to fetch signature milk tea menu items.\n   */\n  ngOnInit(): void {\n    this.fetchMenuItemsByType('signature_milk_tea');\n  }\n\n  /**\n   * Fetches menu items by a specific type.\n   *\n   * @param type The type of menu items to fetch (e.g., 'signature_milk_tea').\n   */\n  fetchMenuItemsByType(type: string): void {\n    this.menuService.getMenuByType(type).subscribe(data => {\n      this.menuItems = [...this.menuItems, ...data];\n      this.Data = data;\n      console.log(this.Data);\n      // Additional logic for processing data\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            Flavored Tea & Coffee\n          \n          \n            Milk-Tea\n          \n          \n            Signature Milk Tea\n          \n          \n            Slush\n          \n          \n            Smoothies\n          \n          \n            Employee Creations\n          \n          \n            Cart\n          \n        \n      \n    \n  \n  \n  \n  \n  \n  \n  Signature-Milk-Tea\n  \n    \n      \n        \n        {{ menuItem.menu_item_name |\n            replaceUnderscores | titlecase }}\n        Price: ${{ menuItem.menu_item_price }}\n      \n    \n  \n\n    \n\n    \n                \n                    ./signature-milk-tea-menu.component.scss\n                \n                .menu-item {\n    padding: 10px;\n    margin: 10px;\n    width: 400px; /* Fixed width for each item */\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    height: calc(100% - 20px)\n  }\n  \n  .menu-container {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-around;\n  }\n  \n  .menu-item-image {\n    width: 100%;\n    overflow: hidden;\n    height: auto;\n    margin-bottom: 10px;\n    border-radius: 10%;\n    border: solid 4px black;\n  }\n  \n  .menu-item-name {\n    margin: 5px 0;\n  }\n  \n  .menu-item-price {\n    margin-bottom: 10px;\n  }\n  \n  .menu-item-ingredients ul {\n    list-style-type: none;\n    padding: 0;\n  }\n.center {\n    width: 100%;\n    text-align: center;\n}\n\n.spacer {\n    margin-top: 20px;\n}\n\n.horizontal-list {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n    display: flex;\n}\n\n.horizontal-list li {\n    flex: 1;\n    border: 1px solid rgb(138, 139, 136);\n    padding: 10px;\n    display: flex;\n    flex-direction: column;\n    align-items: right;\n    background-color: #c2ebff;\n    border-radius: 30px;\n}\n\n.menu-items {\n    display: flex;\n    flex-direction: column;\n    margin-top: 5px;\n}\n\n.top-row {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.menu-items p.name {\n    font-size: 20px;\n}\n\n.menu-items p.price {\n    font-size: 18px;\n}\n\n.menu-items p.ingredients {\n    font-size: 12px;\n    text-align: left;\n}\n\n.horizontal-list li+li {\n    margin-left: 10px;\n}\n\n.horizontal-list li p strong {\n    font-size: 24px;\n    justify-content: center;\n}\n\n.transparent-ingredients {\n    color: transparent;\n}\n\n\n.TradNav{\n    width: 100vw;\n    background-color: aqua;\n    position: fixed;\n    left: 0;\n    margin-top: 55px;\n}\n\n.Food-Hold{\n    width: 100%;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    position: relative;\n    text-align: center;\n    padding-top: 30px;\n}\n\n.Food-Item{\n    width: 30%;\n    text-align: center;\n}\n\n.food-im{\n    width: 100%;\n}\n\n.flex-im-text{\n    display: flex;\n    flex-direction: column;\n}\n\n\n.title{\n    text-decoration: underline;\n    color: green;\n    display: flex;\n    padding: 0 5%;\n}\ntable {\n    width: 100%;\n    border-collapse: collapse;\n\n    th,\n    td {\n        border: 1px solid #ddd;\n        padding: 8px;\n        text-align: left;\n    }\n\n    th {\n        background-color: #f2f2f2;\n    }\n\n    tr.category-row {\n        background-color: #e6e6e6;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Flavored Tea & Coffee                                Milk-Tea                                Signature Milk Tea                                Slush                                Smoothies                                Employee Creations                                Cart                                          Signature-Milk-Tea                            {{ menuItem.menu_item_name |            replaceUnderscores | titlecase }}        Price: ${{ menuItem.menu_item_price }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'app-authentication-button'},{'name': 'CartModalComponent', 'selector': 'app-cart-modal'},{'name': 'CashierViewComponent', 'selector': 'app-cashier-view'},{'name': 'CheckoutPopupComponent', 'selector': 'app-checkout-popup'},{'name': 'ConfirmationPopupComponent', 'selector': 'app-confirmation-popup'},{'name': 'ContactUsComponent', 'selector': 'app-contact-us'},{'name': 'CustomerViewComponent', 'selector': 'app-customer-view'},{'name': 'EditItemPopupComponent', 'selector': 'app-edit-item-popup'},{'name': 'EmployeeCreationsMenuComponent', 'selector': 'app-employee-creations-menu'},{'name': 'GetRoleComponent', 'selector': 'app-get-role'},{'name': 'LearnMoreComponent', 'selector': 'app-learn-more'},{'name': 'LoginButtonComponent', 'selector': 'app-login-button'},{'name': 'LogoutButtonComponent', 'selector': 'app-logout-button'},{'name': 'ManagerPopupComponent', 'selector': 'app-manager-popup'},{'name': 'ManagerViewComponent', 'selector': 'app-manager-view'},{'name': 'MenuItemComponent', 'selector': 'app-menu-item'},{'name': 'MenuViewComponent', 'selector': 'app-menu-view'},{'name': 'MilkTeaMenuComponent', 'selector': 'app-milk-tea-menu'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuickAddPopupComponent', 'selector': 'app-quick-add-popup'},{'name': 'RestockReportPopupComponent', 'selector': 'app-restock-report-popup'},{'name': 'SeasonalItemPopupComponent', 'selector': 'app-seasonal-item-popup'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'SignatureMilkTeaMenuComponent', 'selector': 'app-signature-milk-tea-menu'},{'name': 'SignupButtonComponent', 'selector': 'app-signup-button'},{'name': 'SlushMenuComponent', 'selector': 'app-slush-menu'},{'name': 'SmoothieMenuComponent', 'selector': 'app-smoothie-menu'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignatureMilkTeaMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupButtonComponent.html":{"url":"components/SignupButtonComponent.html","title":"component - SignupButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignupButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/signup-button/signup-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        SignupButtonComponent is a user interface component that triggers the sign-up process.\nIt leverages the AuthService from Auth0 to initiate a sign-up flow by providing a hint to the\nAuth0 Universal Login page to show the sign-up tab.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-signup-button\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./signup-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loginWithRedirect\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/signup-button/signup-button.component.ts:15\n                            \n                        \n\n                \n                    \n                            Constructor for the SignupButtonComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The AuthService from Auth0 injected to provide authentication functionality.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loginWithRedirect\n                        \n                    \n                \n            \n            \n                \nloginWithRedirect()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/signup-button/signup-button.component.ts:36\n                        \n                    \n\n\n            \n                \n                        Calls the loginWithRedirect method from the AuthService and passes a configuration object\nthat includes the screen_hint set to 'signup'. This instructs Auth0 to redirect the user\nto the signup page directly.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/signup-button/signup-button.component.ts:27\n                        \n                    \n\n\n            \n                \n                        OnInit lifecycle hook that is called after Angular first displays the data-bound properties.\nIt is the place to put the initialization logic for the component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/signup-button/signup-button.component.ts:21\n                        \n                    \n\n            \n                \n                    The `AuthService` from Auth0 injected to provide authentication functionality.\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '@auth0/auth0-angular';\n\n/**\n * `SignupButtonComponent` is a user interface component that triggers the sign-up process.\n * It leverages the `AuthService` from Auth0 to initiate a sign-up flow by providing a hint to the\n * Auth0 Universal Login page to show the sign-up tab.\n *\n * @Component Decorator that identifies the class as an Angular component and provides metadata about the component.\n */\n@Component({\n  selector: 'app-signup-button',\n  templateUrl: './signup-button.component.html',\n})\nexport class SignupButtonComponent implements OnInit {\n  /**\n   * Constructor for the `SignupButtonComponent`.\n   * \n   * @param auth The `AuthService` from Auth0 injected to provide authentication functionality.\n   */\n  constructor(public auth: AuthService) {}\n\n  /**\n   * OnInit lifecycle hook that is called after Angular first displays the data-bound properties.\n   * It is the place to put the initialization logic for the component.\n   */\n  ngOnInit(): void {\n    // Initialization logic can go here.\n  }\n\n  /**\n   * Calls the `loginWithRedirect` method from the `AuthService` and passes a configuration object\n   * that includes the `screen_hint` set to 'signup'. This instructs Auth0 to redirect the user\n   * to the signup page directly.\n   */\n  loginWithRedirect(): void {\n    this.auth.loginWithRedirect({ screen_hint: 'signup' });\n  }\n}\n\n    \n\n    \n        \n    Sign Up\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Sign Up  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'app-authentication-button'},{'name': 'CartModalComponent', 'selector': 'app-cart-modal'},{'name': 'CashierViewComponent', 'selector': 'app-cashier-view'},{'name': 'CheckoutPopupComponent', 'selector': 'app-checkout-popup'},{'name': 'ConfirmationPopupComponent', 'selector': 'app-confirmation-popup'},{'name': 'ContactUsComponent', 'selector': 'app-contact-us'},{'name': 'CustomerViewComponent', 'selector': 'app-customer-view'},{'name': 'EditItemPopupComponent', 'selector': 'app-edit-item-popup'},{'name': 'EmployeeCreationsMenuComponent', 'selector': 'app-employee-creations-menu'},{'name': 'GetRoleComponent', 'selector': 'app-get-role'},{'name': 'LearnMoreComponent', 'selector': 'app-learn-more'},{'name': 'LoginButtonComponent', 'selector': 'app-login-button'},{'name': 'LogoutButtonComponent', 'selector': 'app-logout-button'},{'name': 'ManagerPopupComponent', 'selector': 'app-manager-popup'},{'name': 'ManagerViewComponent', 'selector': 'app-manager-view'},{'name': 'MenuItemComponent', 'selector': 'app-menu-item'},{'name': 'MenuViewComponent', 'selector': 'app-menu-view'},{'name': 'MilkTeaMenuComponent', 'selector': 'app-milk-tea-menu'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuickAddPopupComponent', 'selector': 'app-quick-add-popup'},{'name': 'RestockReportPopupComponent', 'selector': 'app-restock-report-popup'},{'name': 'SeasonalItemPopupComponent', 'selector': 'app-seasonal-item-popup'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'SignatureMilkTeaMenuComponent', 'selector': 'app-signature-milk-tea-menu'},{'name': 'SignupButtonComponent', 'selector': 'app-signup-button'},{'name': 'SlushMenuComponent', 'selector': 'app-slush-menu'},{'name': 'SmoothieMenuComponent', 'selector': 'app-smoothie-menu'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SignupButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SlushMenuComponent.html":{"url":"components/SlushMenuComponent.html","title":"component - SlushMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SlushMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/slush-menu/slush-menu.component.ts\n\n\n\n    \n        Description\n    \n    \n        SlushMenuComponent displays a menu of slush items.\nIt utilizes the MenuService to fetch and display a variety of slush options and other categories.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-slush-menu\n            \n\n\n\n            \n                styleUrls\n                ./slush-menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./slush-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                FlavoredTeaData\n                            \n                            \n                                menuItems\n                            \n                            \n                                tableData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchMenuItemsByType\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(menuService: MenuService)\n                    \n                \n                        \n                            \n                                Defined in src/app/slush-menu/slush-menu.component.ts:68\n                            \n                        \n\n                \n                    \n                            Constructor for SlushMenuComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        menuService\n                                                  \n                                                        \n                                                                        MenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to fetch and manage menu items.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchMenuItemsByType\n                        \n                    \n                \n            \n            \n                \nfetchMenuItemsByType(type: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/slush-menu/slush-menu.component.ts:89\n                        \n                    \n\n\n            \n                \n                        Fetches menu items by a specific type.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The type of menu items to fetch (e.g., 'slush').\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/slush-menu/slush-menu.component.ts:80\n                        \n                    \n\n\n            \n                \n                        OnInit lifecycle hook to fetch slush menu items.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        FlavoredTeaData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/slush-menu/slush-menu.component.ts:60\n                        \n                    \n\n            \n                \n                    The data to be displayed in the table.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/slush-menu/slush-menu.component.ts:64\n                        \n                    \n\n            \n                \n                    The menu items to be displayed.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tableData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : [{items: [] }]\n                    \n                \n                    \n                        \n                                Defined in src/app/slush-menu/slush-menu.component.ts:68\n                        \n                    \n\n            \n                \n                    The data to be displayed in the table.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MenuService } from '../services/menu.service';\n\n/**\n * Represents the structure of a menu item.\n */\n/**\n * Interface for a menu item.\n */\n interface MenuItem {\n  /**\n   * The id of the menu item.\n   */\n  menu_item_id: number;\n  /**\n   * The name of the menu item.\n   */\n  menu_item_name: string;\n  /**\n   * The type of the menu item.\n   */\n  menu_item_type: string;\n  /**\n   * The price of the menu item.\n   */\n  menu_item_price: string;\n  /**\n   * The ingredients of the menu item.\n   */\n  ingredients: string[];\n  /**\n   * The image of the menu item.\n   */\n  image: string;\n  /**\n   * The toppings of the menu item.\n   */\n  description: string;\n  /**\n   * The toppings of the menu item.\n   */\n  added_toppings: string[];\n}\n\n/**\n * `SlushMenuComponent` displays a menu of slush items.\n * It utilizes the `MenuService` to fetch and display a variety of slush options and other categories.\n *\n * @Component Decorator that marks the class as an Angular component, specifying the selector, template, and styles.\n */\n@Component({\n  selector: 'app-slush-menu',\n  templateUrl: './slush-menu.component.html',\n  styleUrls: ['./slush-menu.component.scss']\n})\nexport class SlushMenuComponent implements OnInit {\n  /**\n   * The data to be displayed in the table.\n   */\n  FlavoredTeaData = {};\n  /**\n   * The menu items to be displayed.\n   */\n  menuItems: MenuItem[] = [];\n  /**\n   * The data to be displayed in the table.\n   */\n  tableData: any[] = [{items: [] }];\n\n  /**\n   * Constructor for `SlushMenuComponent`.\n   * \n   * @param menuService Service to fetch and manage menu items.\n   */\n  constructor(private menuService: MenuService) {}\n\n  /**\n   * OnInit lifecycle hook to fetch slush menu items.\n   */\n  ngOnInit(): void {\n    this.fetchMenuItemsByType('slush');\n  }\n\n  /**\n   * Fetches menu items by a specific type.\n   *\n   * @param type The type of menu items to fetch (e.g., 'slush').\n   */\n  fetchMenuItemsByType(type: string): void {\n    this.menuService.getMenuByType(type).subscribe(data => {\n      this.menuItems = [...this.menuItems, ...data];\n      console.log(this.FlavoredTeaData);\n      // Additional logic for processing data\n    });\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n        \n          Flavored Tea & Coffee\n        \n        \n          Milk-Tea\n        \n        \n          Signature Milk Tea\n        \n        \n          Slush\n        \n        \n          Smoothies\n        \n        \n          Employee Creations\n        \n        \n          Cart\n        \n      \n    \n  \n\n\n\n\n\n\nSlush\n\n    \n      \n        \n        {{ menuItem.menu_item_name | replaceUnderscores | titlecase }}\n        Price: ${{ menuItem.menu_item_price }}\n      \n    \n  \n\n    \n\n    \n                \n                    ./slush-menu.component.scss\n                \n                .menu-item {\n    padding: 10px;\n    margin: 10px;\n    width: 400px; /* Fixed width for each item */\n    box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    height: calc(100% - 20px)\n  }\n  \n  .menu-container {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-around;\n  }\n  \n  .menu-item-image {\n    width: 100%;\n    overflow: hidden;\n    height: auto;\n    margin-bottom: 10px;\n    border-radius: 10%;\n    border: solid 4px black;\n  }\n  \n  .menu-item-name {\n    margin: 5px 0;\n  }\n  \n  .menu-item-price {\n    margin-bottom: 10px;\n  }\n  \n  .menu-item-ingredients ul {\n    list-style-type: none;\n    padding: 0;\n  }\n.center {\n    width: 100%;\n    text-align: center;\n}\n\n.spacer {\n    margin-top: 20px;\n}\n\n.horizontal-list {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n    display: flex;\n}\n\n.horizontal-list li {\n    flex: 1;\n    border: 1px solid rgb(138, 139, 136);\n    padding: 10px;\n    display: flex;\n    flex-direction: column;\n    align-items: right;\n    background-color: #c2ebff;\n    border-radius: 30px;\n}\n\n.menu-items {\n    display: flex;\n    flex-direction: column;\n    margin-top: 5px;\n}\n\n.top-row {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.menu-items p.name {\n    font-size: 20px;\n}\n\n.menu-items p.price {\n    font-size: 18px;\n}\n\n.menu-items p.ingredients {\n    font-size: 12px;\n    text-align: left;\n}\n\n.horizontal-list li+li {\n    margin-left: 10px;\n}\n\n.horizontal-list li p strong {\n    font-size: 24px;\n    justify-content: center;\n}\n\n.transparent-ingredients {\n    color: transparent;\n}\n\n\n.TradNav{\n    width: 100vw;\n    background-color: aqua;\n    position: fixed;\n    left: 0;\n    margin-top: 55px;\n}\n\n.Food-Hold{\n    width: 100%;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    position: relative;\n    text-align: center;\n    padding-top: 30px;\n}\n\n.Food-Item{\n    width: 30%;\n    text-align: center;\n}\n\n.food-im{\n    width: 100%;\n}\n\n.flex-im-text{\n    display: flex;\n    flex-direction: column;\n}\n\n\n.title{\n    text-decoration: underline;\n    color: green;\n    display: flex;\n    padding: 0 5%;\n}\ntable {\n    width: 100%;\n    border-collapse: collapse;\n\n    th,\n    td {\n        border: 1px solid #ddd;\n        padding: 8px;\n        text-align: left;\n    }\n\n    th {\n        background-color: #f2f2f2;\n    }\n\n    tr.category-row {\n        background-color: #e6e6e6;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Flavored Tea & Coffee                          Milk-Tea                          Signature Milk Tea                          Slush                          Smoothies                          Employee Creations                          Cart                    Slush                          {{ menuItem.menu_item_name | replaceUnderscores | titlecase }}        Price: ${{ menuItem.menu_item_price }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'app-authentication-button'},{'name': 'CartModalComponent', 'selector': 'app-cart-modal'},{'name': 'CashierViewComponent', 'selector': 'app-cashier-view'},{'name': 'CheckoutPopupComponent', 'selector': 'app-checkout-popup'},{'name': 'ConfirmationPopupComponent', 'selector': 'app-confirmation-popup'},{'name': 'ContactUsComponent', 'selector': 'app-contact-us'},{'name': 'CustomerViewComponent', 'selector': 'app-customer-view'},{'name': 'EditItemPopupComponent', 'selector': 'app-edit-item-popup'},{'name': 'EmployeeCreationsMenuComponent', 'selector': 'app-employee-creations-menu'},{'name': 'GetRoleComponent', 'selector': 'app-get-role'},{'name': 'LearnMoreComponent', 'selector': 'app-learn-more'},{'name': 'LoginButtonComponent', 'selector': 'app-login-button'},{'name': 'LogoutButtonComponent', 'selector': 'app-logout-button'},{'name': 'ManagerPopupComponent', 'selector': 'app-manager-popup'},{'name': 'ManagerViewComponent', 'selector': 'app-manager-view'},{'name': 'MenuItemComponent', 'selector': 'app-menu-item'},{'name': 'MenuViewComponent', 'selector': 'app-menu-view'},{'name': 'MilkTeaMenuComponent', 'selector': 'app-milk-tea-menu'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuickAddPopupComponent', 'selector': 'app-quick-add-popup'},{'name': 'RestockReportPopupComponent', 'selector': 'app-restock-report-popup'},{'name': 'SeasonalItemPopupComponent', 'selector': 'app-seasonal-item-popup'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'SignatureMilkTeaMenuComponent', 'selector': 'app-signature-milk-tea-menu'},{'name': 'SignupButtonComponent', 'selector': 'app-signup-button'},{'name': 'SlushMenuComponent', 'selector': 'app-slush-menu'},{'name': 'SmoothieMenuComponent', 'selector': 'app-smoothie-menu'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SlushMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SmoothieMenuComponent.html":{"url":"components/SmoothieMenuComponent.html","title":"component - SmoothieMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SmoothieMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/smoothie-menu/smoothie-menu.component.ts\n\n\n\n    \n        Description\n    \n    \n        SmoothieMenuComponent is responsible for displaying a menu of smoothie items.\nIt uses the MenuService to fetch and display a variety of smoothie options, along with other menu categories.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-smoothie-menu\n            \n\n\n\n            \n                styleUrls\n                ./smoothie-menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./smoothie-menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                FlavoredTeaData\n                            \n                            \n                                menuItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchMenuItemsByType\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(menuService: MenuService)\n                    \n                \n                        \n                            \n                                Defined in src/app/smoothie-menu/smoothie-menu.component.ts:64\n                            \n                        \n\n                \n                    \n                            Constructor for SmoothieMenuComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        menuService\n                                                  \n                                                        \n                                                                        MenuService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to fetch and manage menu items.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchMenuItemsByType\n                        \n                    \n                \n            \n            \n                \nfetchMenuItemsByType(type: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/smoothie-menu/smoothie-menu.component.ts:86\n                        \n                    \n\n\n            \n                \n                        Fetches menu items by a specific type.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The type of menu items to fetch (e.g., 'smoothies').\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/smoothie-menu/smoothie-menu.component.ts:76\n                        \n                    \n\n\n            \n                \n                        OnInit lifecycle hook to fetch smoothie menu items.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        FlavoredTeaData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/smoothie-menu/smoothie-menu.component.ts:60\n                        \n                    \n\n            \n                \n                    The data to be displayed in the table.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MenuItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/smoothie-menu/smoothie-menu.component.ts:64\n                        \n                    \n\n            \n                \n                    The menu items to be displayed.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MenuService } from '../services/menu.service';\n\n/**\n * Represents the structure of a menu item.\n */\n/**\n * Interface for a menu item.\n */\n interface MenuItem {\n  /**\n   * The id of the menu item.\n   */\n  menu_item_id: number;\n  /**\n   * The name of the menu item.\n   */\n  menu_item_name: string;\n  /**\n   * The type of the menu item.\n   */\n  menu_item_type: string;\n  /**\n   * The price of the menu item.\n   */\n  menu_item_price: string;\n  /**\n   * The ingredients of the menu item.\n   */\n  ingredients: string[];\n  /**\n   * The image of the menu item.\n   */\n  image: string;\n  /**\n   * The toppings of the menu item.\n   */\n  description: string;\n  /**\n   * The toppings of the menu item.\n   */\n  added_toppings: string[];\n}\n\n/**\n * `SmoothieMenuComponent` is responsible for displaying a menu of smoothie items.\n * It uses the `MenuService` to fetch and display a variety of smoothie options, along with other menu categories.\n *\n * @Component Decorator that marks the class as an Angular component, specifying the selector, template, and styles.\n */\n@Component({\n  selector: 'app-smoothie-menu',\n  templateUrl: './smoothie-menu.component.html',\n  styleUrls: ['./smoothie-menu.component.scss']\n})\nexport class SmoothieMenuComponent implements OnInit {\n  /**\n   * The data to be displayed in the table.\n   */\n  FlavoredTeaData = {};\n  /**\n   * The menu items to be displayed.\n   */\n  menuItems: MenuItem[] = [];\n\n  /**\n   * Constructor for `SmoothieMenuComponent`.\n   * \n   * @param menuService Service to fetch and manage menu items.\n   */\n  constructor(private menuService: MenuService) {}\n\n  /**\n   * OnInit lifecycle hook to fetch smoothie menu items.\n   */\n  ngOnInit(): void {\n    this.fetchMenuItemsByType('smoothies');\n  }\n\n  /**\n   * Fetches menu items by a specific type.\n   * \n   * @param type The type of menu items to fetch (e.g., 'smoothies').\n   * @param index The index in the tableData array to populate (if applicable).\n   */\n  fetchMenuItemsByType(type: string): void {\n    this.menuService.getMenuByType(type).subscribe(data => {\n      this.menuItems = [...this.menuItems, ...data];\n      this.FlavoredTeaData = data;\n      console.log(this.FlavoredTeaData);\n      // Additional logic for processing data\n    });\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n        \n          Flavored Tea & Coffee\n        \n        \n          Milk-Tea\n        \n        \n          Signature Milk Tea\n        \n        \n          Slush\n        \n        \n          Smoothies\n        \n        \n          Employee Creations\n        \n        \n          Cart\n        \n      \n    \n  \n\n\n\n\n\n\nSmoothies\n\n    \n      \n        \n        {{ menuItem.menu_item_name | replaceUnderscores | titlecase }}\n        Price: ${{ menuItem.menu_item_price }}\n      \n    \n  \n\n    \n\n    \n                \n                    ./smoothie-menu.component.scss\n                \n                .menu-item {\n    padding: 10px;\n    margin: 10px;\n    width: 400px; /* Fixed width for each item */\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    height: calc(100% - 20px)\n  }\n  \n  .menu-container {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-around;\n  }\n  \n  .menu-item-image {\n    width: 100%;\n    overflow: hidden;\n    height: auto;\n    margin-bottom: 10px;\n    border-radius: 10%;\n    border: solid 4px black;\n  }\n  \n  .menu-item-name {\n    margin: 5px 0;\n  }\n  \n  .menu-item-price {\n    margin-bottom: 10px;\n  }\n  \n  .menu-item-ingredients ul {\n    list-style-type: none;\n    padding: 0;\n  }\n.center {\n    width: 100%;\n    text-align: center;\n}\n\n.spacer {\n    margin-top: 20px;\n}\n\n.horizontal-list {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n    display: flex;\n}\n\n.horizontal-list li {\n    flex: 1;\n    border: 1px solid rgb(138, 139, 136);\n    padding: 10px;\n    display: flex;\n    flex-direction: column;\n    align-items: right;\n    background-color: #c2ebff;\n    border-radius: 30px;\n}\n\n.menu-items {\n    display: flex;\n    flex-direction: column;\n    margin-top: 5px;\n}\n\n.top-row {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.menu-items p.name {\n    font-size: 20px;\n}\n\n.menu-items p.price {\n    font-size: 18px;\n}\n\n.menu-items p.ingredients {\n    font-size: 12px;\n    text-align: left;\n}\n\n.horizontal-list li+li {\n    margin-left: 10px;\n}\n\n.horizontal-list li p strong {\n    font-size: 24px;\n    justify-content: center;\n}\n\n.transparent-ingredients {\n    color: transparent;\n}\n\n\n.TradNav{\n    width: 100vw;\n    background-color: aqua;\n    position: fixed;\n    left: 0;\n    margin-top: 55px;\n}\n\n.Food-Hold{\n    width: 100%;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    position: relative;\n    text-align: center;\n    padding-top: 30px;\n}\n\n.Food-Item{\n    width: 30%;\n    text-align: center;\n}\n\n.food-im{\n    width: 100%;\n}\n\n.flex-im-text{\n    display: flex;\n    flex-direction: column;\n}\n\n\n.title{\n    text-decoration: underline;\n    color: green;\n    display: flex;\n    padding: 0 5%;\n}\ntable {\n    width: 100%;\n    border-collapse: collapse;\n\n    th,\n    td {\n        border: 1px solid #ddd;\n        padding: 8px;\n        text-align: left;\n    }\n\n    th {\n        background-color: #f2f2f2;\n    }\n\n    tr.category-row {\n        background-color: #e6e6e6;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Flavored Tea & Coffee                          Milk-Tea                          Signature Milk Tea                          Slush                          Smoothies                          Employee Creations                          Cart                    Smoothies                          {{ menuItem.menu_item_name | replaceUnderscores | titlecase }}        Price: ${{ menuItem.menu_item_price }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'app-authentication-button'},{'name': 'CartModalComponent', 'selector': 'app-cart-modal'},{'name': 'CashierViewComponent', 'selector': 'app-cashier-view'},{'name': 'CheckoutPopupComponent', 'selector': 'app-checkout-popup'},{'name': 'ConfirmationPopupComponent', 'selector': 'app-confirmation-popup'},{'name': 'ContactUsComponent', 'selector': 'app-contact-us'},{'name': 'CustomerViewComponent', 'selector': 'app-customer-view'},{'name': 'EditItemPopupComponent', 'selector': 'app-edit-item-popup'},{'name': 'EmployeeCreationsMenuComponent', 'selector': 'app-employee-creations-menu'},{'name': 'GetRoleComponent', 'selector': 'app-get-role'},{'name': 'LearnMoreComponent', 'selector': 'app-learn-more'},{'name': 'LoginButtonComponent', 'selector': 'app-login-button'},{'name': 'LogoutButtonComponent', 'selector': 'app-logout-button'},{'name': 'ManagerPopupComponent', 'selector': 'app-manager-popup'},{'name': 'ManagerViewComponent', 'selector': 'app-manager-view'},{'name': 'MenuItemComponent', 'selector': 'app-menu-item'},{'name': 'MenuViewComponent', 'selector': 'app-menu-view'},{'name': 'MilkTeaMenuComponent', 'selector': 'app-milk-tea-menu'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuickAddPopupComponent', 'selector': 'app-quick-add-popup'},{'name': 'RestockReportPopupComponent', 'selector': 'app-restock-report-popup'},{'name': 'SeasonalItemPopupComponent', 'selector': 'app-seasonal-item-popup'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'SignatureMilkTeaMenuComponent', 'selector': 'app-signature-milk-tea-menu'},{'name': 'SignupButtonComponent', 'selector': 'app-signup-button'},{'name': 'SlushMenuComponent', 'selector': 'app-slush-menu'},{'name': 'SmoothieMenuComponent', 'selector': 'app-smoothie-menu'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SmoothieMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TableColumn.html":{"url":"interfaces/TableColumn.html","title":"interface - TableColumn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TableColumn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/cashier-view/cashier-view.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the structure of a single column in the table.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            header\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        header:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header of the column.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key of the column.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MenuService } from '../services/menu.service';\nimport { response } from 'express';\nimport { MenuItem } from '../menu-view/menu-item.model';\nimport { CartService } from '../cart-modal/cart-modal.service';\nimport { ActiveComponentService } from '../services/currentcomp.service';\nimport { Router } from '@angular/router'\nimport { Subscription } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { OrdersService } from '../services/orders.service';\n// Additional interfaces can be documented here\n\n/**\n * Represents a configuration object for table columns in the cashier's view.\n */\ninterface TableConfig {\n  /**\n   * The columns of the table.\n   */\n  columns: TableColumn[];\n}\n\n/**\n * Represents the structure of a single column in the table.\n */\ninterface TableColumn {\n  /**\n   * The key of the column.\n   */\n  key: string;\n  /**\n   * The header of the column.\n   */\n  header: string;\n}\n/**\n * The `CashierViewComponent` serves as the interactive interface for the cashier role.\n * It provides functionalities related to menu item selection, order customization, and order processing.\n * This component works closely with various services to handle the business logic associated with the cashier's operations.\n *\n * @Component Marks the class as an Angular component and provides metadata about the component.\n */\n\n@Component({\n  selector: 'app-cashier-view',\n  templateUrl: './cashier-view.component.html',\n  styleUrls: ['./cashier-view.component.scss']\n})\nexport class CashierViewComponent implements OnInit {\n  //Document Properties here\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  menuItems: MenuItem[] = [];\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  flavoredTeaItems: MenuItem[] = [];\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  milkTeaItems: MenuItem[] = [];\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  signatureMilkTeaItems: MenuItem[] = [];\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  slushItems: MenuItem[] = [];\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  coffeeItems: MenuItem[] = [];\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  smoothiesItems: MenuItem[] = [];\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  employeeCreationsItems: MenuItem[] = [];\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  toppingItems: MenuItem[] = [];\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  selectedToppings: Set = new Set();\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  private cartSub: Subscription | undefined;\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  showPopup: boolean = false;\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  popupTitle: string = '';\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  popupContent: any;\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  cartTotal: string = \"0\";\n/**\n * The configuration for the table, including the columns to display.\n */\n  tableConfig?: TableConfig;\n\n  tableData: any[] = [\n    { name: 'Flavored Tea', items: [] },\n    { name: 'Milk Tea', items: [] },\n    { name: 'Signature Milk Tea', items: [] },\n    { name: 'Slush', items: [] },\n    { name: 'Coffee', items: [] },\n    { name: 'Smoothies', items: [] },\n    { name: 'Employee Creations', items: [] }\n  ];\n    /**\n   * Constructor for the `CashierViewComponent`.\n   * @param activeComponentService Service to manage the current active component.\n   * @param cartService Service to manage the cart operations.\n   * @param menuService Service to fetch menu items.\n   * @param router Angular Router for navigation.\n   * @param http HttpClient to perform HTTP requests.\n   * @param orderService Service to manage order-related operations.\n   */\n  constructor(private activeComponentService: ActiveComponentService,\n    private cartService: CartService, private menuService: MenuService, private router: Router, private http: HttpClient, private orderService: OrdersService) {\n    this.cartSub = this.cartService.cartItems$.subscribe(\n      items => this.menuItems = items\n    );\n  }\n    /**\n   * OnInit lifecycle hook to initialize component properties and fetch menu items.\n   */\n  ngOnInit() {\n    /**\n     * Sets the current active component to `CashierViewComponent`.\n     */\n    this.activeComponentService.setActiveComponent('CashierViewComponent');\n    /**\n     * Fetches menu items by type.\n     */\n    this.fetchMenuItemsByType('flavored_tea');\n    /**\n     * Fetches menu items by type.\n     */\n    this.fetchMenuItemsByType('milk_tea');\n    /**\n     * Fetches menu items by type.\n     */\n    this.fetchMenuItemsByType('toppings');\n    /**\n     * Fetches menu items by type.\n     */\n    this.fetchMenuItemsByType('signature_milk_tea');\n    /**\n     * Fetches menu items by type.\n     */\n    this.fetchMenuItemsByType('slush');\n    /**\n     * Fetches menu items by type.\n     */\n    this.fetchMenuItemsByType('coffee');\n    /**\n     * Fetches menu items by type.\n     */\n    this.fetchMenuItemsByType('smoothies');\n    /**\n     * Fetches menu items by type.\n     */\n    this.fetchMenuItemsByType('employee_creations');\n  }\n  /**\n   * Fetches menu items by a given type.\n   */\n  public menuVisibility: { [key: string]: boolean } = {\n    'flavoredTea': false,\n    'milkTea': false,\n    'signatureMilkTea': false,\n    'slush': false,\n    'coffee': false,\n    'smoothies': false,\n    'employeeCreations': false\n  };\n\n  // Function to toggle the visibility of a menu section\n  toggleMenu(section: string) {\n    this.menuVisibility[section] = !this.menuVisibility[section];\n  }\n    /**\n   * Fetches menu items by a given type.\n   * @param type The type of menu items to fetch, e.g., 'flavored_tea', 'milk_tea'.\n   */\n  fetchMenuItemsByType(type: string) {\n\n    if (type === 'flavored_tea') {\n      this.menuService.getMenuByType(type).subscribe(data => {\n        this.flavoredTeaItems = [...this.flavoredTeaItems, ...data];\n      });\n    } else if (type === 'milk_tea') {\n      this.menuService.getMenuByType(type).subscribe(data => {\n        this.milkTeaItems = [...this.milkTeaItems, ...data];\n      });\n    } else if (type === 'signature_milk_tea') {\n      this.menuService.getMenuByType(type).subscribe(data => {\n        this.signatureMilkTeaItems = [...this.signatureMilkTeaItems, ...data];\n      });\n    } else if (type === 'slush') {\n      this.menuService.getMenuByType(type).subscribe(data => {\n        this.slushItems = [...this.slushItems, ...data];\n      });\n    } else if (type === 'coffee') {\n      this.menuService.getMenuByType(type).subscribe(data => {\n        this.coffeeItems = [...this.coffeeItems, ...data];\n      });\n    } else if (type === 'smoothies') {\n      this.menuService.getMenuByType(type).subscribe(data => {\n        this.smoothiesItems = [...this.smoothiesItems, ...data];\n      });\n    } else if (type === 'employee_creations') {\n      this.menuService.getMenuByType(type).subscribe(data => {\n        this.employeeCreationsItems = [...this.employeeCreationsItems, ...data];\n      });\n    } else if (type === 'toppings') {\n      this.menuService.getMenuByType(type).subscribe(data => {\n        this.toppingItems = [...this.toppingItems, ...data];\n      });\n    }\n\n  }\n\n  /**\n   * Event handler for checkbox changes to toggle the selection of toppings.\n   * Delegates to the `onToppingChange` method to handle the state change.\n   *\n   * @param event The DOM event triggered when a topping checkbox changes.\n   * @param menuItem The menu item to which the topping belongs.\n   * @param topping The topping associated with the checkbox.\n   */\n   onToppingCheckboxChange(event: Event, menuItem: MenuItem, topping: MenuItem): void {\n    const checkbox = event.target as HTMLInputElement;\n    this.onToppingChange(topping.menu_item_id, checkbox.checked, menuItem, topping);\n  }\n\n  /**\n   * Handles the change of topping selection, adding or removing toppings from the menu item.\n   *\n   * @param toppingId The unique identifier of the topping.\n   * @param isChecked The boolean state of the checkbox, true if checked.\n   * @param menuItem The menu item to which the topping is added or removed.\n   * @param topping The topping object that is being added or removed.\n   */\n  onToppingChange(toppingId: number, isChecked: boolean, menuItem: MenuItem, topping: MenuItem): void {\n    if (isChecked) {\n      this.toppingAdd(menuItem, topping);\n      this.selectedToppings.add(toppingId);\n    } else {\n      this.toppingRemove(menuItem, topping);\n      this.selectedToppings.delete(toppingId);\n    }\n  }\n\n  /**\n   * Adds a topping to a menu item and updates the price accordingly.\n   *\n   * @param item The menu item to which the topping is being added.\n   * @param topping The topping that is being added to the menu item.\n   */\n  toppingAdd(item: MenuItem, topping: MenuItem): void {\n    if (!item.added_toppings) {\n      item.added_toppings = [];\n    }\n    item.added_toppings.push(topping.menu_item_name);\n    const toppingPrice = parseFloat(topping.menu_item_price);\n    item.menu_item_price = (parseFloat(item.menu_item_price) + toppingPrice).toFixed(2);\n  }\n\n  /**\n   * Removes the last added topping from a menu item and updates the price accordingly.\n   *\n   * @param item The menu item from which the topping is being removed.\n   * @param topping The topping that is being removed from the menu item.\n   */\n  toppingRemove(item: MenuItem, topping: MenuItem): void {\n    if (!item.added_toppings) {\n      item.added_toppings = [];\n    }\n    item.added_toppings.pop();\n    const toppingPrice = parseFloat(topping.menu_item_price);\n    item.menu_item_price = (parseFloat(item.menu_item_price) - toppingPrice).toFixed(2);\n  }\n\n  /**\n   * Adds an item to the cart through the CartService.\n   *\n   * @param item The menu item being added to the cart.\n   */\n  onAdd(item: MenuItem): void {\n    this.cartService.addItem(item);\n  }\n\n  /**\n   * Prepares the component state for checkout, displaying a popup if necessary.\n   */\n  onContinue(): void {\n    this.showPopup = true;\n    this.popupTitle = 'Checkout';\n    this.popupContent = this.menuItems;\n    this.cartTotal = this.calculateTotal().toString();\n    if (this.menuItems.length > 0) {\n      this.onCheckout();\n    }\n  }\n\n  /**\n   * Finalizes the checkout process, updating the order history and clearing the current cart.\n   */\n  onCheckout(): void {\n    const employeeId = 1; // This should be dynamically determined or passed in.\n    const customerId = 1; // This should be dynamically determined or passed in.\n    this.orderService.updateOrderHistory(this.menuItems, this.calculateTotal(), employeeId, customerId)\n      .subscribe(response => {\n        console.log('Order history updated successfully:', response);\n      }, error => {\n        console.error('Error updating order history:', error);\n      });\n    this.cartService.clearCart();\n    this.menuItems = [];\n  }\n\n  /**\n   * Cancels the current order, clearing the cart and resetting related component state.\n   */\n  onCancel(): void {\n    this.cartService.clearCart();\n    this.menuItems = [];\n  }\n\n  /**\n   * Unsubscribes from any subscriptions to prevent memory leaks when the component is destroyed.\n   */\n  ngOnDestroy(): void {\n    if (this.cartSub) {\n      this.cartSub.unsubscribe();\n    }\n  }\n\n  /**\n   * Calculates the total price of all items in the cart.\n   *\n   * @returns The total price of all items as a number.\n   */\n  calculateTotal(): number {\n    if (this.menuItems) {\n      return this.menuItems.reduce((total, item) => total + parseFloat(item.menu_item_price), 0);\n    } else {\n      return 0;\n    }\n  }\n\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TableColumn-1.html":{"url":"interfaces/TableColumn-1.html","title":"interface - TableColumn-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TableColumn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/manager-view/manager-view.component.ts\n        \n\n\n            \n                Description\n            \n            \n                 This is the model for the table column.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            header\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        header:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The column's header\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The column's key\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MenuService } from '../services/menu.service';\nimport { IngredientsService } from '../services/ingredients.service';\nimport { InventoryService } from '../services/inventory.service';\nimport { OrderHistoryService } from '../services/order-history.service';\nimport { FormsModule } from '@angular/forms';\nimport { forkJoin } from 'rxjs';\n/**\n * This is the model for the table configuration.\n */\ninterface TableConfig {\n  /**\n   * The table's title\n   */\n  columns: TableColumn[];\n}\n/**\n *  This is the model for the table column.\n */\ninterface TableColumn {\n  // The column's key\n  /**\n   * The column's key\n   */\n  key: string;\n  /**\n   * The column's header\n   */\n  // The column's header\n  header: string;\n}\n/**\n * This is the model for the table row.\n */\ninterface InventoryMap {\n  // The row's key\n  /**\n   * The row's key\n   */\n  [key: string]: number;\n}\n/**\n * This is the model for the inventory item.\n */\ninterface InventoryItem {\n  // The item's id\n  /**\n   * The item's id\n   */\n  item_id: number;\n  /**\n   * The item's name\n   */\n  // The item's name\n  item_name: string;\n  /**\n   * The item's quantity\n   */\n  // The item's quantity\n  item_quantity: number;\n}\n/**\n * This is the model for the sales summary.\n */\ninterface SalesSummary {\n  // The row's key\n  /**\n   * The row's key\n   */\n  [key: string]: number; // Adjust the key type if necessary\n}\n\n// Define an interface for the order item\n/**\n * This is the model for the order item.\n */\ninterface OrderItem {\n  /**\n   * The item's id\n   */\n  // The item's id\n  item_name: string;\n  /**\n   * The item's quantity\n   */\n   // or item_id if it's a number\n  quantity: number;\n}\n\n/**\n * `ManagerViewComponent` serves as the main interface for the manager's dashboard.\n * It handles operations related to menu management, ingredients, inventory, and order history,\n * providing functionalities to refresh and manipulate these data sets.\n *\n * @Component Decorator that marks the class as an Angular component and provides metadata about the component.\n */\n @Component({\n  selector: 'app-manager-view',\n  templateUrl: './manager-view.component.html',\n  styleUrls: ['./manager-view.component.scss']\n})\nexport class ManagerViewComponent implements OnInit {\n  // Component properties\n  /**\n   * Boolean to track if the current user is a manager.\n   */\n  showPopup: boolean = false;\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  showRestockReportPopup: boolean = false;\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  popupTitle: string = '';\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  start: string = '';\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  end: string = '';\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  popupContent: any;\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  menu: any[] = [];\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  ingredients: any[] = [];\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  inventory: any[] = [];\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  orderHistory: any[] = [];\n\n  /**\n   * Constructor for `ManagerViewComponent`.\n   * \n   * @param MenuService Service to manage menu items.\n   * @param IngredientsService Service to manage ingredients.\n   * @param InventoryService Service to manage inventory.\n   * @param OrderHistoryService Service to manage order history.\n   */\n  constructor(\n    private MenuService: MenuService, \n    private IngredientsService: IngredientsService, \n    private InventoryService: InventoryService, \n    private OrderHistoryService: OrderHistoryService\n  ) {}\n\n  /**\n   * OnInit lifecycle hook for initial component setup.\n   */\n  ngOnInit(): void {\n    // Initialization logic can go here\n  }\n\n  /**\n   * Refreshes the menu items by fetching the latest data from the `MenuService`.\n   */\n  refreshMenu(): void {\n    this.MenuService.getMenu().subscribe(items => {\n      // Refresh menu logic\n    });\n  }\n  \n  /**\n   * Refreshes the ingredients by fetching the latest data from the `IngredientsService`.\n   */\n  refreshIngredients(): void {\n    this.IngredientsService.getIngredients().subscribe(ingredients => {\n      // Refresh ingredients logic\n    });\n  }\n  \n  /**\n   * Refreshes the inventory by fetching the latest data from the `InventoryService`.\n   */\n  refreshInventory(): void {\n    this.InventoryService.getInventory().subscribe(invItems => {\n      // Refresh inventory logic\n    });\n  }\n\n  /**\n   * Refreshes the order history by fetching the latest data from the `OrderHistoryService`.\n   */\n  lowInventItems: any[] = [];\n  /**\n   * Get all of the elements that have only sold 10 percent of their stock\n   */\n  lowIngredItems: any[] = [];\n  /**\n   * Get all of the elements that have only sold 10 percent of their stock\n   */\n  getLowStock(): void {\n    this.InventoryService.getInventory().subscribe(invItems => {\n      this.inventory = invItems;\n\n      this.lowInventItems = this.inventory.filter(item => item.item_quantity  {\n        item.item_quantity_to_order = 1500 - item.item_quantity;\n      });\n    });\n\n    this.IngredientsService.getIngredients().subscribe(ingredients => {\n      this.ingredients = ingredients;\n      \n      this.lowIngredItems = this.ingredients.filter(item => item.ingredient_quantity  {\n        item.item_quantity_to_order = 1500 - item.ingredient_quantity;\n        item.item_name = item.ingredient_name;\n        item.item_quantity = item.ingredient_quantity;\n      });\n      const temp = [...this.lowInventItems, ...this.lowIngredItems];\n\n      temp.forEach(item => {\n        item.item_name = this.formatCamelCase(item.item_name);\n      });\n      this.popupContent = temp\n    });\n  }  \n\n  /**\n   * gets the sales from that time period\n   * @param start \n   * @param end \n   */\n  refreshSales(start: string, end: string): void {\n    this.OrderHistoryService.getOrderHistory().subscribe(ordItems => {\n      this.orderHistory = ordItems;\n\n      const startDate = new Date(start);\n      startDate.setUTCHours(0, 0, 0, 0);\n\n      const endDate = new Date(end);\n      endDate.setUTCHours(23, 59, 59, 999);\n\n      // console.log(ordItems);\n      // console.log(startDate);\n      // console.log(endDate);\n\n      const ItemsInRange = this.orderHistory.filter(order => {\n        const orderDate = new Date(order.order_timestamp);\n        return orderDate > startDate && orderDate  {\n        item.order_items = this.formatOrderItems(item.order_items);\n      });\n\n      console.log(ItemsInRange)\n\n      this.popupContent = ItemsInRange;\n    });\n  }\n  /**\n   * gets the sales from that time period\n   * @param start \n   * @param end \n   */\n  getExcess(start: string, end: string): void {\n    let inventory_ingrident_map = new Map();\n    // const additionalItems = ['napkins', 'plastic_seals', 'cups', 'straws'];\n    this.OrderHistoryService.getIngridents().subscribe(\n      data => {\n        data.forEach((item: { menu_item_name: string; ingredients: string[]; }) => {\n          let itemIngredients = item.ingredients.slice(); // Create a copy of the ingredients array\n\n          // // Check if the item has more than one ingredient and add additional items if so\n          // if (itemIngredients.length > 1) {\n          //   itemIngredients = itemIngredients.concat(additionalItems);\n          // }\n\n          inventory_ingrident_map.set(item.menu_item_name, itemIngredients);\n        });\n        console.log(inventory_ingrident_map); // This will log the map with the data\n      },\n      error => {\n        console.error('Error:', error); // This will log any error that occurs during the request\n      }\n    );\n\n    let ogIngrdientmap = new Map();\n      this.OrderHistoryService.getIng().subscribe(\n        data => {\n          data.forEach((item: { ingredient_name: string;  ingredient_quantity : number; }) => {\n            ogIngrdientmap.set(item.ingredient_name, item.ingredient_quantity);\n        });\n        console.log(ogIngrdientmap)\n      },\n        error => {\n          console.error('Error:', error); // This will log any error that occurs during the request\n        }\n      );\n    this.OrderHistoryService.getOrderHistory().subscribe(ordItems => {\n      this.orderHistory = ordItems;\n\n      // Initialize initialInventory\n      const initialInventory: InventoryMap = {};\n      this.InventoryService.getInventory().subscribe((inventoryItems: InventoryItem[]) => {\n        inventoryItems.forEach((item: InventoryItem) => {\n          initialInventory[item.item_name] = item.item_quantity;\n        });\n\n        console.log(initialInventory); // Log the map of item counts\n      });\n\n      const startDate = new Date(start);\n      startDate.setUTCHours(0, 0, 0, 0);\n  \n      const endDate = new Date(end);\n      endDate.setUTCHours(23, 59, 59, 999);\n  \n      const itemsInRange = this.orderHistory.filter(order => {\n        const orderDate = new Date(order.order_timestamp);\n        return orderDate >= startDate && orderDate ();\n      itemsInRange.forEach(order => {\n      order.order_items.forEach((item: OrderItem) => {\n        //@ts-ignore\n        const ingredients = inventory_ingrident_map.get(item) || [];\n        ingredients.forEach(ingredient => {\n          const currentCount = ingredientCountMap.get(ingredient) || 0;\n          ingredientCountMap.set(ingredient, currentCount + 1);\n        });\n      });\n    });\n\n    console.log(\"Ingredient Usage Count:\", ingredientCountMap);\n      // console.log(\"passed sales\")\n      let excessIngredients: { excessIngredients: string }[] = [];\n      ingredientCountMap.forEach((count, ingredient) => {\n        //@ts-ignore\n        if(count  {\n      let formattedItem = item.replace(/_/g, ' ');\n  \n      formattedItem = formattedItem.replace(/\\w\\S*/g, (word) => {\n        return word.charAt(0).toUpperCase() + word.substr(1).toLowerCase();\n      });\n  \n      return formattedItem;\n    });\n  \n    return formatted.join(', ');\n  }\n  /**\n   * Takes a string of items formatted with _ for a space and fixes them\n   * @param ordItem \n   * @returns formatted string\n   */\n  //Same as above but for only one string\n  formatSingleUnderscore(ordItem: string): string {\n    let formattedItem = ordItem.replace(/_/g, ' ');\n  \n    formattedItem = formattedItem.replace(/\\w\\S*/g, (word) => {\n      return word.charAt(0).toUpperCase() + word.substr(1).toLowerCase();\n    });\n  \n    return formattedItem;\n  }\n  /**\n   * Takes a string of items formatted with camelCase and fixes them\n   * @param name \n   * @returns formatted string\n   */\n  // Fixes camelCase words (one string)\n  formatCamelCase(name: string): string {\n    return name.replace(/([A-Z])/g, ' $1').replace(/^./, function(str){ return str.toUpperCase(); });\n  }\n  /**\n   * Takes a string of items formatted with camelCase and fixes them\n   * @param names \n   * @returns formatted string\n   */\n  // Same as above but for array of strings\n  formatCamelCaseArray(names: string[]): string[] {\n    return names.map(name => {\n      return name.replace(/([A-Z])/g, ' $1').replace(/^./, function(str){ return str.toUpperCase(); }).split(',').join(', ');\n    });\n  }\n  \n  /**\n   * This function is called when the user clicks on the \"View Inventory\" button\n   */\n  tableConfig?: TableConfig;\n/**\n * This hold all of the possible table configs for the value\n */\n  menuTableConfig: TableConfig = {\n    columns: [\n      { key: 'menu_item_id', header: 'ID' },\n      { key: 'menu_item_name', header: 'Name' },\n      { key: 'menu_item_type', header: 'Type' },\n      { key: 'menu_item_price', header: 'Price' },\n      { key: 'ingredients', header: 'Ingredients' }\n    ]\n  };\n  /**\n   * This hold all of the possible table configs for the value\n   */\n  ingredientsTableConfig: TableConfig = {\n    columns: [\n      { key: 'ingredient_id', header: 'ID' },\n      { key: 'ingredient_name', header: 'Name' },\n      { key: 'ingredient_quantity', header: 'Quantity' }\n    ]\n  };\n/**\n * This hold all of the possible table configs for the value\n */\n  inventoryTableConfig: TableConfig = {\n    columns: [\n      { key: 'item_id', header: 'ID' },\n      { key: 'item_name', header: 'Name' },\n      { key: 'item_quantity', header: 'Quantity' }\n    ]\n  };\n/**\n * This hold all of the possible table configs for the value\n */\n  restockReport: TableConfig = {\n    columns: [\n      { key: 'item_name', header: 'Name' },\n      { key: 'item_quantity', header: 'Current Quantity' },\n      { key: 'item_quantity_to_order', header: 'Amount to Order' }\n    ]\n  };\n/**\n * This hold all of the possible table configs for the value\n */\n  salesReport: TableConfig = {\n    columns: [\n      { key: 'order_timestamp', header: 'Date' },\n      { key: 'order_total', header: 'Price' },\n      { key: 'order_items', header: 'Items Ordered' }\n    ]\n  };\n/**\n * This hold all of the possible table configs for the value\n */\n  excessReport: TableConfig = {\n    columns: [\n      { key: 'excessIngredients',  header: 'Excess Item' }\n    ]\n  };\n  /**\n   * This hold all of the possible table configs for the value\n   * @param type \n   */\n  openPopup(type: string) {\n    this.showPopup = true;\n    switch (type) {\n      case 'menu':\n        this.popupTitle = 'Edit Menu';\n        this.tableConfig = this.menuTableConfig;\n        this.refreshMenu();\n        break;\n      case 'ingredients':\n        this.popupTitle = 'Edit Ingredients';\n        this.tableConfig = this.ingredientsTableConfig;\n        this.refreshIngredients();\n        break;\n      case 'inventory':\n        this.popupTitle = 'Edit Inventory';\n        this.tableConfig = this.inventoryTableConfig;\n        this.refreshInventory();\n        break;\n      }\n  }\n\n  // ACTION BUTTONS\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  showEditPopup: boolean = false;\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  selectedItem: any = null;\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  currentAction: 'edit' | 'delete' | 'add' | null = null;\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   * @param item \n   */\n  editRow(item: any): void {\n    console.log('Editing item, opening edit popup', item);\n    this.currentAction = 'edit';\n    this.selectedItem = item;\n    if (this.popupTitle === 'Edit Menu') {\n      this.editType = 'menu';\n    } else if (this.popupTitle === 'Edit Ingredients') {\n      this.editType = 'ingredients';\n    } else if (this.popupTitle === 'Edit Inventory') {\n      this.editType = 'inventory';\n    }\n    if (this.editType === 'menu') {\n      this.popupTitle = 'Edit Menu';\n    } else if (this.editType === 'ingredients') {\n      this.popupTitle = 'Edit Ingredients';\n    } else if (this.editType === 'inventory') {\n      this.popupTitle = 'Edit Inventory';\n    }\n    this.showPopup = false;\n    this.showEditPopup = true;\n  }  \n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   * @param item \n   */\n  deleteRow(item: any): void {\n    console.log('Deleting item:', item);\n    if (this.editType === 'menu') {\n      this.popupTitle = 'Edit Menu';\n    } else if (this.editType === 'ingredients') {\n      this.popupTitle = 'Edit Ingredients';\n    } else if (this.editType === 'inventory') {\n      this.popupTitle = 'Edit Inventory';\n    }\n    this.currentAction = 'delete';\n    this.selectedItem = item;\n    this.showConfirmationPopup = true;\n    this.showPopup = false;\n  }\n\n  // EDIT CONFIRMATIONS\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  onEditCancel(): void {\n    this.selectedItem = null;\n    this.showEditPopup = false;\n    this.showPopup = true; // Reopen the main popup if needed\n  }\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   * @param editedItem \n   */\n  onItemSave(editedItem: any): void {\n    // Process the edited item\n    if (this.popupTitle === 'Edit Menu') {\n      this.refreshMenu();\n    } else if (this.popupTitle === 'Edit Ingredients') {\n      this.refreshIngredients();\n    } else if (this.popupTitle === 'Edit Inventory') {\n      this.refreshInventory();\n    }\n    this.selectedItem = editedItem;\n    this.showEditPopup = false;\n    this.showConfirmationPopup = true;\n  }  \n\n  // CONFIRMATION POPUP\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  showConfirmationPopup: boolean = false;\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  editType: 'menu' | 'ingredients' | 'inventory' | null = null;\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   * @param item \n   */\n  onItemConfirm(item: any): void {\n    this.selectedItem = item;\n    this.showConfirmationPopup = false;\n    if (this.popupTitle === 'Edit Menu') {\n      if (this.currentAction === 'edit') {\n        this.MenuService.editMenuItem(item.menu_item_id, item).subscribe(() => {\n          this.refreshMenu();\n        });\n      } else if (this.currentAction === 'delete') {\n        console.log('Deleting menu item', item);\n        this.MenuService.deleteMenuItem(item.menu_item_id).subscribe(() => {\n          this.refreshMenu();\n        });\n      }\n    } else if (this.popupTitle === 'Edit Ingredients') {\n      if (this.currentAction === 'edit') {\n        this.IngredientsService.editIngredient(item.ingredient_id, item).subscribe(() => {\n          this.refreshIngredients();\n        });\n      } else if (this.currentAction === 'delete') {\n        this.IngredientsService.deleteIngredient(item.ingredient_id).subscribe(() => {\n          this.refreshIngredients();\n        });\n      }\n    } else if (this.popupTitle === 'Edit Inventory') {\n      if (this.currentAction === 'edit') {\n        this.InventoryService.editInventoryItem(item.item_id, item).subscribe(() => {\n          this.refreshInventory();\n        });\n      } else if (this.currentAction === 'delete') {\n        this.InventoryService.deleteInventoryItem(item.item_id).subscribe(() => {\n          this.refreshInventory();\n        });\n      }\n    } else if (this.popupTitle === 'Quick Add') {\n      if (this.editType === 'menu') {\n        this.MenuService.addMenuItem(item).subscribe(() => {\n          this.refreshMenu();\n        });\n        console.log('Adding menu item', item.menu_item_name);\n      } else if (this.editType === 'ingredients') {\n        this.IngredientsService.addIngredient(item).subscribe(() => {\n          this.refreshIngredients();\n        });\n      } else if (this.editType === 'inventory') {\n        this.InventoryService.addInventoryItem(item).subscribe(() => {\n          this.refreshInventory();\n        });\n      }\n    }\n    this.showPopup = true;\n    if (this.popupTitle === 'Add Seasonal Item') {\n      this.MenuService.addMenuItem(item).subscribe(() => {\n        this.refreshMenu();\n      });\n      this.showPopup = false;\n    }\n  }\n/**\n * This function is called when the user clicks on the \"Add\" button\n */\n  onItemDecline(): void {\n    this.showConfirmationPopup = false;\n    if (this.popupTitle === 'Edit Menu') {\n      this.showPopup = true;\n    } else if (this.popupTitle === 'Edit Ingredients') {\n      this.showPopup = true;\n    } else if (this.popupTitle === 'Edit Inventory') {\n      this.showPopup = true;\n    } else if (this.popupTitle === 'Quick Add') {\n      this.showQuickAddPopup = true;\n    } else if (this.popupTitle === 'Add Seasonal Item') {\n      this.showSeasonalItemPopup = true;\n    }\n  }\n\n  // QUICK ADD POPUP\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  showQuickAddPopup: boolean = false;\n/**\n *  This function is called when the user clicks on the \"Add\" button\n * @param type \n */\n  quickAdd(type: string): void {\n    if (this.popupTitle === 'Edit Menu') {\n      this.editType = 'menu';\n    } else if (this.popupTitle === 'Edit Ingredients') {\n      this.editType = 'ingredients';\n    } else if (this.popupTitle === 'Edit Inventory') {\n      this.editType = 'inventory';\n    }\n    this.popupTitle = 'Quick Add';\n    console.log('Quick add');\n    this.showPopup = false;\n    this.showQuickAddPopup = true;\n  }\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  onQuickAddCancel(): void {\n    this.showQuickAddPopup = false;\n    this.showPopup = true;\n  }\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   * @param newItem \n   */\n  onItemAdd(newItem: any): void {\n    // Process the new item\n    this.currentAction = 'add';\n    if (this.popupTitle === 'Edit Menu') {\n      this.refreshMenu();\n    } else if (this.popupTitle === 'Edit Ingredients') {\n      this.refreshIngredients();\n    } else if (this.popupTitle === 'Edit Inventory') {\n      this.refreshInventory();\n    }\n    this.selectedItem = newItem;\n    this.showQuickAddPopup = false;\n    this.showConfirmationPopup = true;\n  }\n\n  // SEAOSONAL ITEM POPUP\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  showSeasonalItemPopup: boolean = false;\n/**\n * This function is called when the user clicks on the \"Add\" button\n * @param type \n */\n  seasonalItem(type: string): void {\n    this.popupTitle = 'Add Seasonal Item';\n    this.currentAction = 'add';\n    console.log('Seasonal item');\n    this.showSeasonalItemPopup = true;\n  }\n/**\n * This function is called when the user clicks on the \"Add\" button\n */\n  onSeasonalItemCancel(): void {\n    this.showSeasonalItemPopup = false;\n  }\n/**\n * This function is called when the user clicks on the \"Add\" button\n * @param newItem \n */\n  seasonalItemAdd(newItem: any): void {\n    this.selectedItem = newItem;\n    this.showSeasonalItemPopup = false;\n    this.showConfirmationPopup = true;\n  }\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   * @param type \n   * @param start \n   * @param end \n   */\n  // OTHER\n  reportPopup(type: string, start?: string, end?: string) {\n    this.showRestockReportPopup = true;\n    switch (type) {\n      case 'restock': \n        this.popupTitle = 'Restock Report';\n        this.tableConfig = this.restockReport;\n        this.getLowStock();\n        break;\n      case 'sales': \n        if (!start) {\n          start = \"2023-01-01\";\n        }\n        if (!end) {\n          end = \"2023-03-01\";\n        }\n        this.popupTitle = 'Sales Report';\n        this.tableConfig = this.salesReport;\n        this.refreshSales(start, end);\n        break;\n      case 'excess':\n        this.popupTitle = 'Excess Report';\n        this.tableConfig = this.excessReport;\n        if (!start) {\n          start = \"2023-01-01\";\n        }\n        if (!end) {\n          end = \"2023-03-01\";\n        }\n        this.getExcess(start, end);\n        break;\n      }\n  }\n\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  clickSalesReport() {\n    // Do something cool\n    console.log('clickSalesReport()');\n  }\n  /**\n   *  This function is called when the user clicks on the \"Add\" button\n   */\n  clickExcessReport() {\n    // Do something cool\n    console.log('clickExcessReport()');\n  }\n  /**\n   *  This function is called when the user clicks on the \"Add\" button\n   */\n  clickRestockReport() {\n    // Do something cool\n    console.log('clickStockReport()');\n  }\n  /**\n   *  This function is called when the user clicks on the \"Add\" button\n   */\n  clickPPReport() {\n    // Do something cool\n    console.log('clickPPReport()');\n  }\n  /**\n   *  This function is called when the user clicks on the \"Add\" button\n   */\n  clickIPReport() {\n    // Do something cool\n    console.log('clickIPReport()');\n  }\n}\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TableColumn-2.html":{"url":"interfaces/TableColumn-2.html","title":"interface - TableColumn-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TableColumn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shopping-cart/shopping-cart.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the structure of a table column.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            header\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        header:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header of the column.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key of the column.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { MenuItem } from '../menu-view/menu-item.model';\nimport { CartService } from '../cart-modal/cart-modal.service';\nimport { Subscription } from 'rxjs';\nimport { OrdersService } from '../services/orders.service';\nimport { HttpClient } from '@angular/common/http';\n\n/**\n * Represents the structure of a table column.\n */\ninterface TableColumn {\n  /**\n   * The key of the column.\n   */\n  key: string;\n  /**\n   * The header of the column.\n   */\n  header: string;\n}\n\n/**\n * Represents the configuration object for table columns in the shopping cart.\n */\ninterface TableConfig {\n  /**\n   * The columns of the table.\n   */\n  columns: TableColumn[];\n}\n\n/**\n * `ShoppingCartComponent` manages the display and interactions within the shopping cart.\n * It allows users to view, modify, and proceed with their order. This component handles item removal, \n * continuation to checkout, and order submission.\n *\n * @Component Decorator that marks the class as an Angular component, specifying the selector, template, and styles.\n */\n@Component({\n  selector: 'app-shopping-cart',\n  templateUrl: './shopping-cart.component.html',\n  styleUrls: ['./shopping-cart.component.scss']\n})\nexport class ShoppingCartComponent {\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  @Input() menuItems: MenuItem[] | undefined;\n  /**\n   * Event emitter to notify the parent component to close the popup.\n   */\n  @Output() continueClicked: EventEmitter = new EventEmitter();\n  /**\n   * Event emitter to notify the parent component to close the popup.\n   */\n  @Output() cancelClicked: EventEmitter = new EventEmitter();\n  /**\n   * The subscription to the cart items.\n   */\n  private cartSubscription: Subscription | undefined;\n  /**\n   * The subscription to the cart total.\n   */\n  showPopup: boolean = false;\n  /**\n   * The title of the popup, typically describing the content or purpose of the table.\n   */\n  popupTitle: string = '';\n  /**\n   *  The content to be displayed within the table.\n   */\n  popupContent: any;\n  /**\n   * The total price of the items in the cart.\n   */\n  cartTotal: string = \"0\";\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n\n  tableConfig?: TableConfig;\n  /**\n   * The content to be displayed within the table.\n   * @param cartService \n   * @param http \n   * @param orderService \n   */\n\n  constructor(private cartService: CartService, private http: HttpClient,  private orderService: OrdersService) { }\n\n  popupConfig: TableConfig = {\n    columns: [\n      { key: 'menu_item_name', header: 'Name' },\n      { key: 'menu_item_price', header: 'Price' }\n    ]\n  };\n  /**\n   * OnInit lifecycle hook to subscribe to the cart items.\n   */\n  ngOnInit() {\n    // Subscribe to changes in the cartItems$\n    this.cartSubscription = this.cartService.cartItems$.subscribe(items => {\n      this.menuItems = items;\n    });\n  }\n  /**\n   * Removes an item from the cart.\n   *\n   * @param index The index of the item to be removed.\n   */\n  removeItem(index: number) {\n    this.cartService.removeItem(index);\n  }\n  /**\n   * Handles the continue action, triggers the checkout process.\n   */\n  onContinueClick() {\n    this.continueClicked.emit();\n    // const orderDetails = {\n    //   order_timestamp: new Date(),\n    //   order_items: this.menuItems?.map(item => item.menu_item_name),\n    //   order_total: this.calculateTotal(),\n    //   // Add other necessary details like employee_id, customer_id, etc.\n    // };\n\n    // do the popup\n    /**\n     * Shows the popup with the order details.\n     */\n    this.showPopup = true;\n    /**\n     * The title of the popup.\n     */\n    this.popupTitle = 'Checkout';\n    /**\n     * The content of the popup.\n     */\n    this.popupContent = this.menuItems;\n    /**\n     * The total price of the order.\n     */\n    this.cartTotal = this.calculateTotal().toString();\n\n    // // Make an HTTP POST request to your backend endpoint\n    // this.http.post('/api/create-order', orderDetails)\n    //   .subscribe((response) => {\n    //     console.log('Order created successfully:', response);\n    //     this.cartService.clearCart();\n    //     this.continueClicked.emit();\n    //   }, (error) => {\n    //     console.error('Error creating order:', error);\n    //   });\n    \n    if (this.menuItems && this.menuItems.length > 0) {\n      this.onCheckout();\n      this.cartService.clearCart();\n      this.menuItems = [];\n    }\n  }\n  /**\n   * Performs the checkout operation and updates the order history.\n   */\n  onCheckout() {\n    const employeeId = 1; // Replace with actual employeeId\n    const customerId = 1; // Replace with actual customerId\n\n    // Update order history\n    //@ts-ignore\n    this.orderService.updateOrderHistory(this.menuItems, this.calculateTotal(), employeeId, customerId)\n      .subscribe(response => {\n        console.log('Order history updated successfully:', response);\n      }, error => {\n        console.error('Error updating order history:', error);\n      });\n  }\n  /**\n   * OnDestroy lifecycle hook to clean up subscriptions.\n   */\n  ngOnDestroy() {\n    // Unsubscribe to prevent memory leak\n    if (this.cartSubscription) {\n      this.cartSubscription.unsubscribe();\n    }\n  }\n  /**\n   * Emits an event to cancel the cart operation and clears the cart.\n   */\n  onCancelClick() {\n    this.cancelClicked.emit();\n    this.cartService.clearCart();\n  }\n  /**\n   * Calculates the total price of items in the cart.\n   *\n   * @returns The total price of all items in the cart.\n   */\n  calculateTotal(): number {\n    if (this.menuItems) {\n      return this.menuItems.reduce((total, item) => total + parseFloat(item.menu_item_price), 0);\n    } else {\n      return 0;\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TableColumn-3.html":{"url":"interfaces/TableColumn-3.html","title":"interface - TableColumn-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TableColumn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/manager-view/manager-popup/manager-popup.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the structure of a table column.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            header\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        header:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header of the column.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key of the column.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n/**\n * Represents the structure of a table column.\n */\ninterface TableColumn {\n  /**\n   * The key of the column.\n   */\n  key: string;\n  /**\n   * The header of the column.\n   */\n  header: string;\n}\n\n/**\n * Represents the configuration object for table columns in the manager's popup.\n */\ninterface TableConfig {\n  /**\n   * The columns of the table.\n   */\n  columns: TableColumn[];\n}\n\n/**\n * `ManagerPopupComponent` is a reusable UI component designed for displaying and managing tabular data in a popup modal.\n * It provides functionalities like edit, delete, and quick add operations for each row in the table.\n *\n * @Component Decorator that marks the class as an Angular component and provides metadata about the component.\n */\n@Component({\n  selector: 'app-manager-popup',\n  templateUrl: './manager-popup.component.html',\n  styleUrls: ['./manager-popup.component.scss']\n})\nexport class ManagerPopupComponent {\n  /**\n   * The title of the popup, typically describing the table content or action.\n   */\n  @Input() title: string = '';\n\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  @Input() tableConfig?: TableConfig;\n\n  /**\n   * The content to be displayed within the table.\n   */\n  @Input() content: any[] = [];\n\n  /**\n   * Event emitter to notify the parent component to close the popup.\n   */\n  @Output() close = new EventEmitter();\n\n  /**\n   * Event emitters for table row actions.\n   */\n  @Output() edit = new EventEmitter();\n  @Output() delete = new EventEmitter();\n  @Output() quick = new EventEmitter();\n\n  /**\n   * Handles the edit action for a row in the table.\n   *\n   * @param row The data row to be edited.\n   */\n  editRow(row: any): void {\n    console.log('Editing row:', row);\n    this.edit.emit(row);\n  }\n\n  /**\n   * Handles the delete action for a row in the table.\n   *\n   * @param row The data row to be deleted.\n   */\n  deleteRow(row: any): void {\n    console.log('Deleting row:', row);\n    this.delete.emit(row);\n  }\n\n  /**\n   * Emits an event for a quick add action.\n   */\n  quickAdd(): void {\n    this.quick.emit();\n  }\n\n  /**\n   * Emits an event to close the popup.\n   */\n  closePopup(): void {\n    this.close.emit();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TableColumn-4.html":{"url":"interfaces/TableColumn-4.html","title":"interface - TableColumn-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TableColumn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shopping-cart/checkout-popup/checkout-popup.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the structure of a table column.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            header\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        header:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header of the column.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key of the column.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n/**\n * Represents the structure of a table column.\n */\ninterface TableColumn {\n  /**\n   * The key of the column.\n   */\n  key: string;\n  /**\n   * The header of the column.\n   */\n  header: string;\n}\n\n/**\n * Represents the configuration object for table columns in the checkout popup.\n */\ninterface TableConfig {\n  /**\n   * The columns of the table.\n   */\n  columns: TableColumn[];\n}\n\n/**\n * `CheckoutPopupComponent` is designed to display a checkout interface.\n * It presents a summary of items, their details, and the total cost in a tabular format.\n *\n * @Component Decorator that marks the class as an Angular component, specifying the selector, template, and styles.\n */\n@Component({\n  selector: 'app-checkout-popup',\n  templateUrl: './checkout-popup.component.html',\n  styleUrls: ['./checkout-popup.component.scss']\n})\nexport class CheckoutPopupComponent {\n  /**\n   * The title of the popup, typically describing the content or purpose.\n   */\n  @Input() title: string = '';\n\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  @Input() tableConfig?: TableConfig;\n\n  /**\n   * The content to be displayed within the table.\n   */\n  @Input() content: any[] = [];\n\n  /**\n   * The total cost of items in the checkout.\n   */\n  @Input() total: string = \"0\";\n\n  /**\n   * Event emitter to notify the parent component to close the popup.\n   */\n  @Output() close = new EventEmitter();\n\n  /**\n   * Emits an event to close the checkout popup.\n   */\n  closePopup(): void {\n    this.close.emit();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TableColumn-5.html":{"url":"interfaces/TableColumn-5.html","title":"interface - TableColumn-5","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TableColumn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/manager-view/restock-report-popup/restock-report-popup.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the structure of a table column in the restock report.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            header\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        header:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The header of the column.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The key of the column.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n/**\n * Represents the structure of a table column in the restock report.\n */\ninterface TableColumn {\n  /**\n   * The key of the column.\n   */\n  key: string;\n  /**\n   * The header of the column.\n   */\n  header: string;\n}\n\n/**\n * Represents the configuration object for table columns in the restock report popup.\n */\ninterface TableConfig {\n  /**\n   * The columns of the table.\n   */\n  columns: TableColumn[];\n}\n\n/**\n * `RestockReportPopupComponent` is designed to provide a popup modal for displaying restock reports.\n * It presents tabular data such as inventory levels and restock requirements, allowing for a quick overview of stock status.\n *\n * @Component Decorator that marks the class as an Angular component, specifying the selector, template, and styles.\n */\n@Component({\n  selector: 'app-restock-report-popup',\n  templateUrl: './restock-report-popup.component.html',\n  styleUrls: ['./restock-report-popup.component.scss']\n})\nexport class RestockReportPopupComponent {\n  /**\n   * The title of the popup, typically describing the content or purpose of the table.\n   */\n  @Input() title: string = '';\n\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  @Input() tableConfig?: TableConfig;\n\n  /**\n   * The content to be displayed within the table.\n   */\n  @Input() content: any[] = [];\n\n  /**\n   * Event emitter to notify the parent component to close the popup.\n   */\n  @Output() close = new EventEmitter();\n\n  /**\n   * Emits an event to close the restock report popup.\n   */\n  closeRestockPopup(): void {\n    this.close.emit();\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TableConfig.html":{"url":"interfaces/TableConfig.html","title":"interface - TableConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TableConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/cashier-view/cashier-view.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a configuration object for table columns in the cashier's view.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            columns\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        columns\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        columns:     TableColumn[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TableColumn[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The columns of the table.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MenuService } from '../services/menu.service';\nimport { response } from 'express';\nimport { MenuItem } from '../menu-view/menu-item.model';\nimport { CartService } from '../cart-modal/cart-modal.service';\nimport { ActiveComponentService } from '../services/currentcomp.service';\nimport { Router } from '@angular/router'\nimport { Subscription } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { OrdersService } from '../services/orders.service';\n// Additional interfaces can be documented here\n\n/**\n * Represents a configuration object for table columns in the cashier's view.\n */\ninterface TableConfig {\n  /**\n   * The columns of the table.\n   */\n  columns: TableColumn[];\n}\n\n/**\n * Represents the structure of a single column in the table.\n */\ninterface TableColumn {\n  /**\n   * The key of the column.\n   */\n  key: string;\n  /**\n   * The header of the column.\n   */\n  header: string;\n}\n/**\n * The `CashierViewComponent` serves as the interactive interface for the cashier role.\n * It provides functionalities related to menu item selection, order customization, and order processing.\n * This component works closely with various services to handle the business logic associated with the cashier's operations.\n *\n * @Component Marks the class as an Angular component and provides metadata about the component.\n */\n\n@Component({\n  selector: 'app-cashier-view',\n  templateUrl: './cashier-view.component.html',\n  styleUrls: ['./cashier-view.component.scss']\n})\nexport class CashierViewComponent implements OnInit {\n  //Document Properties here\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  menuItems: MenuItem[] = [];\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  flavoredTeaItems: MenuItem[] = [];\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  milkTeaItems: MenuItem[] = [];\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  signatureMilkTeaItems: MenuItem[] = [];\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  slushItems: MenuItem[] = [];\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  coffeeItems: MenuItem[] = [];\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  smoothiesItems: MenuItem[] = [];\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  employeeCreationsItems: MenuItem[] = [];\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  toppingItems: MenuItem[] = [];\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  selectedToppings: Set = new Set();\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  private cartSub: Subscription | undefined;\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  showPopup: boolean = false;\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  popupTitle: string = '';\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  popupContent: any;\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  cartTotal: string = \"0\";\n/**\n * The configuration for the table, including the columns to display.\n */\n  tableConfig?: TableConfig;\n\n  tableData: any[] = [\n    { name: 'Flavored Tea', items: [] },\n    { name: 'Milk Tea', items: [] },\n    { name: 'Signature Milk Tea', items: [] },\n    { name: 'Slush', items: [] },\n    { name: 'Coffee', items: [] },\n    { name: 'Smoothies', items: [] },\n    { name: 'Employee Creations', items: [] }\n  ];\n    /**\n   * Constructor for the `CashierViewComponent`.\n   * @param activeComponentService Service to manage the current active component.\n   * @param cartService Service to manage the cart operations.\n   * @param menuService Service to fetch menu items.\n   * @param router Angular Router for navigation.\n   * @param http HttpClient to perform HTTP requests.\n   * @param orderService Service to manage order-related operations.\n   */\n  constructor(private activeComponentService: ActiveComponentService,\n    private cartService: CartService, private menuService: MenuService, private router: Router, private http: HttpClient, private orderService: OrdersService) {\n    this.cartSub = this.cartService.cartItems$.subscribe(\n      items => this.menuItems = items\n    );\n  }\n    /**\n   * OnInit lifecycle hook to initialize component properties and fetch menu items.\n   */\n  ngOnInit() {\n    /**\n     * Sets the current active component to `CashierViewComponent`.\n     */\n    this.activeComponentService.setActiveComponent('CashierViewComponent');\n    /**\n     * Fetches menu items by type.\n     */\n    this.fetchMenuItemsByType('flavored_tea');\n    /**\n     * Fetches menu items by type.\n     */\n    this.fetchMenuItemsByType('milk_tea');\n    /**\n     * Fetches menu items by type.\n     */\n    this.fetchMenuItemsByType('toppings');\n    /**\n     * Fetches menu items by type.\n     */\n    this.fetchMenuItemsByType('signature_milk_tea');\n    /**\n     * Fetches menu items by type.\n     */\n    this.fetchMenuItemsByType('slush');\n    /**\n     * Fetches menu items by type.\n     */\n    this.fetchMenuItemsByType('coffee');\n    /**\n     * Fetches menu items by type.\n     */\n    this.fetchMenuItemsByType('smoothies');\n    /**\n     * Fetches menu items by type.\n     */\n    this.fetchMenuItemsByType('employee_creations');\n  }\n  /**\n   * Fetches menu items by a given type.\n   */\n  public menuVisibility: { [key: string]: boolean } = {\n    'flavoredTea': false,\n    'milkTea': false,\n    'signatureMilkTea': false,\n    'slush': false,\n    'coffee': false,\n    'smoothies': false,\n    'employeeCreations': false\n  };\n\n  // Function to toggle the visibility of a menu section\n  toggleMenu(section: string) {\n    this.menuVisibility[section] = !this.menuVisibility[section];\n  }\n    /**\n   * Fetches menu items by a given type.\n   * @param type The type of menu items to fetch, e.g., 'flavored_tea', 'milk_tea'.\n   */\n  fetchMenuItemsByType(type: string) {\n\n    if (type === 'flavored_tea') {\n      this.menuService.getMenuByType(type).subscribe(data => {\n        this.flavoredTeaItems = [...this.flavoredTeaItems, ...data];\n      });\n    } else if (type === 'milk_tea') {\n      this.menuService.getMenuByType(type).subscribe(data => {\n        this.milkTeaItems = [...this.milkTeaItems, ...data];\n      });\n    } else if (type === 'signature_milk_tea') {\n      this.menuService.getMenuByType(type).subscribe(data => {\n        this.signatureMilkTeaItems = [...this.signatureMilkTeaItems, ...data];\n      });\n    } else if (type === 'slush') {\n      this.menuService.getMenuByType(type).subscribe(data => {\n        this.slushItems = [...this.slushItems, ...data];\n      });\n    } else if (type === 'coffee') {\n      this.menuService.getMenuByType(type).subscribe(data => {\n        this.coffeeItems = [...this.coffeeItems, ...data];\n      });\n    } else if (type === 'smoothies') {\n      this.menuService.getMenuByType(type).subscribe(data => {\n        this.smoothiesItems = [...this.smoothiesItems, ...data];\n      });\n    } else if (type === 'employee_creations') {\n      this.menuService.getMenuByType(type).subscribe(data => {\n        this.employeeCreationsItems = [...this.employeeCreationsItems, ...data];\n      });\n    } else if (type === 'toppings') {\n      this.menuService.getMenuByType(type).subscribe(data => {\n        this.toppingItems = [...this.toppingItems, ...data];\n      });\n    }\n\n  }\n\n  /**\n   * Event handler for checkbox changes to toggle the selection of toppings.\n   * Delegates to the `onToppingChange` method to handle the state change.\n   *\n   * @param event The DOM event triggered when a topping checkbox changes.\n   * @param menuItem The menu item to which the topping belongs.\n   * @param topping The topping associated with the checkbox.\n   */\n   onToppingCheckboxChange(event: Event, menuItem: MenuItem, topping: MenuItem): void {\n    const checkbox = event.target as HTMLInputElement;\n    this.onToppingChange(topping.menu_item_id, checkbox.checked, menuItem, topping);\n  }\n\n  /**\n   * Handles the change of topping selection, adding or removing toppings from the menu item.\n   *\n   * @param toppingId The unique identifier of the topping.\n   * @param isChecked The boolean state of the checkbox, true if checked.\n   * @param menuItem The menu item to which the topping is added or removed.\n   * @param topping The topping object that is being added or removed.\n   */\n  onToppingChange(toppingId: number, isChecked: boolean, menuItem: MenuItem, topping: MenuItem): void {\n    if (isChecked) {\n      this.toppingAdd(menuItem, topping);\n      this.selectedToppings.add(toppingId);\n    } else {\n      this.toppingRemove(menuItem, topping);\n      this.selectedToppings.delete(toppingId);\n    }\n  }\n\n  /**\n   * Adds a topping to a menu item and updates the price accordingly.\n   *\n   * @param item The menu item to which the topping is being added.\n   * @param topping The topping that is being added to the menu item.\n   */\n  toppingAdd(item: MenuItem, topping: MenuItem): void {\n    if (!item.added_toppings) {\n      item.added_toppings = [];\n    }\n    item.added_toppings.push(topping.menu_item_name);\n    const toppingPrice = parseFloat(topping.menu_item_price);\n    item.menu_item_price = (parseFloat(item.menu_item_price) + toppingPrice).toFixed(2);\n  }\n\n  /**\n   * Removes the last added topping from a menu item and updates the price accordingly.\n   *\n   * @param item The menu item from which the topping is being removed.\n   * @param topping The topping that is being removed from the menu item.\n   */\n  toppingRemove(item: MenuItem, topping: MenuItem): void {\n    if (!item.added_toppings) {\n      item.added_toppings = [];\n    }\n    item.added_toppings.pop();\n    const toppingPrice = parseFloat(topping.menu_item_price);\n    item.menu_item_price = (parseFloat(item.menu_item_price) - toppingPrice).toFixed(2);\n  }\n\n  /**\n   * Adds an item to the cart through the CartService.\n   *\n   * @param item The menu item being added to the cart.\n   */\n  onAdd(item: MenuItem): void {\n    this.cartService.addItem(item);\n  }\n\n  /**\n   * Prepares the component state for checkout, displaying a popup if necessary.\n   */\n  onContinue(): void {\n    this.showPopup = true;\n    this.popupTitle = 'Checkout';\n    this.popupContent = this.menuItems;\n    this.cartTotal = this.calculateTotal().toString();\n    if (this.menuItems.length > 0) {\n      this.onCheckout();\n    }\n  }\n\n  /**\n   * Finalizes the checkout process, updating the order history and clearing the current cart.\n   */\n  onCheckout(): void {\n    const employeeId = 1; // This should be dynamically determined or passed in.\n    const customerId = 1; // This should be dynamically determined or passed in.\n    this.orderService.updateOrderHistory(this.menuItems, this.calculateTotal(), employeeId, customerId)\n      .subscribe(response => {\n        console.log('Order history updated successfully:', response);\n      }, error => {\n        console.error('Error updating order history:', error);\n      });\n    this.cartService.clearCart();\n    this.menuItems = [];\n  }\n\n  /**\n   * Cancels the current order, clearing the cart and resetting related component state.\n   */\n  onCancel(): void {\n    this.cartService.clearCart();\n    this.menuItems = [];\n  }\n\n  /**\n   * Unsubscribes from any subscriptions to prevent memory leaks when the component is destroyed.\n   */\n  ngOnDestroy(): void {\n    if (this.cartSub) {\n      this.cartSub.unsubscribe();\n    }\n  }\n\n  /**\n   * Calculates the total price of all items in the cart.\n   *\n   * @returns The total price of all items as a number.\n   */\n  calculateTotal(): number {\n    if (this.menuItems) {\n      return this.menuItems.reduce((total, item) => total + parseFloat(item.menu_item_price), 0);\n    } else {\n      return 0;\n    }\n  }\n\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TableConfig-1.html":{"url":"interfaces/TableConfig-1.html","title":"interface - TableConfig-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TableConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/manager-view/manager-view.component.ts\n        \n\n\n            \n                Description\n            \n            \n                This is the model for the table configuration.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            columns\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        columns\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        columns:     TableColumn[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TableColumn[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The table's title\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MenuService } from '../services/menu.service';\nimport { IngredientsService } from '../services/ingredients.service';\nimport { InventoryService } from '../services/inventory.service';\nimport { OrderHistoryService } from '../services/order-history.service';\nimport { FormsModule } from '@angular/forms';\nimport { forkJoin } from 'rxjs';\n/**\n * This is the model for the table configuration.\n */\ninterface TableConfig {\n  /**\n   * The table's title\n   */\n  columns: TableColumn[];\n}\n/**\n *  This is the model for the table column.\n */\ninterface TableColumn {\n  // The column's key\n  /**\n   * The column's key\n   */\n  key: string;\n  /**\n   * The column's header\n   */\n  // The column's header\n  header: string;\n}\n/**\n * This is the model for the table row.\n */\ninterface InventoryMap {\n  // The row's key\n  /**\n   * The row's key\n   */\n  [key: string]: number;\n}\n/**\n * This is the model for the inventory item.\n */\ninterface InventoryItem {\n  // The item's id\n  /**\n   * The item's id\n   */\n  item_id: number;\n  /**\n   * The item's name\n   */\n  // The item's name\n  item_name: string;\n  /**\n   * The item's quantity\n   */\n  // The item's quantity\n  item_quantity: number;\n}\n/**\n * This is the model for the sales summary.\n */\ninterface SalesSummary {\n  // The row's key\n  /**\n   * The row's key\n   */\n  [key: string]: number; // Adjust the key type if necessary\n}\n\n// Define an interface for the order item\n/**\n * This is the model for the order item.\n */\ninterface OrderItem {\n  /**\n   * The item's id\n   */\n  // The item's id\n  item_name: string;\n  /**\n   * The item's quantity\n   */\n   // or item_id if it's a number\n  quantity: number;\n}\n\n/**\n * `ManagerViewComponent` serves as the main interface for the manager's dashboard.\n * It handles operations related to menu management, ingredients, inventory, and order history,\n * providing functionalities to refresh and manipulate these data sets.\n *\n * @Component Decorator that marks the class as an Angular component and provides metadata about the component.\n */\n @Component({\n  selector: 'app-manager-view',\n  templateUrl: './manager-view.component.html',\n  styleUrls: ['./manager-view.component.scss']\n})\nexport class ManagerViewComponent implements OnInit {\n  // Component properties\n  /**\n   * Boolean to track if the current user is a manager.\n   */\n  showPopup: boolean = false;\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  showRestockReportPopup: boolean = false;\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  popupTitle: string = '';\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  start: string = '';\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  end: string = '';\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  popupContent: any;\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  menu: any[] = [];\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  ingredients: any[] = [];\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  inventory: any[] = [];\n  /**\n   * Boolean to track if the current user is a cashier.\n   */\n  orderHistory: any[] = [];\n\n  /**\n   * Constructor for `ManagerViewComponent`.\n   * \n   * @param MenuService Service to manage menu items.\n   * @param IngredientsService Service to manage ingredients.\n   * @param InventoryService Service to manage inventory.\n   * @param OrderHistoryService Service to manage order history.\n   */\n  constructor(\n    private MenuService: MenuService, \n    private IngredientsService: IngredientsService, \n    private InventoryService: InventoryService, \n    private OrderHistoryService: OrderHistoryService\n  ) {}\n\n  /**\n   * OnInit lifecycle hook for initial component setup.\n   */\n  ngOnInit(): void {\n    // Initialization logic can go here\n  }\n\n  /**\n   * Refreshes the menu items by fetching the latest data from the `MenuService`.\n   */\n  refreshMenu(): void {\n    this.MenuService.getMenu().subscribe(items => {\n      // Refresh menu logic\n    });\n  }\n  \n  /**\n   * Refreshes the ingredients by fetching the latest data from the `IngredientsService`.\n   */\n  refreshIngredients(): void {\n    this.IngredientsService.getIngredients().subscribe(ingredients => {\n      // Refresh ingredients logic\n    });\n  }\n  \n  /**\n   * Refreshes the inventory by fetching the latest data from the `InventoryService`.\n   */\n  refreshInventory(): void {\n    this.InventoryService.getInventory().subscribe(invItems => {\n      // Refresh inventory logic\n    });\n  }\n\n  /**\n   * Refreshes the order history by fetching the latest data from the `OrderHistoryService`.\n   */\n  lowInventItems: any[] = [];\n  /**\n   * Get all of the elements that have only sold 10 percent of their stock\n   */\n  lowIngredItems: any[] = [];\n  /**\n   * Get all of the elements that have only sold 10 percent of their stock\n   */\n  getLowStock(): void {\n    this.InventoryService.getInventory().subscribe(invItems => {\n      this.inventory = invItems;\n\n      this.lowInventItems = this.inventory.filter(item => item.item_quantity  {\n        item.item_quantity_to_order = 1500 - item.item_quantity;\n      });\n    });\n\n    this.IngredientsService.getIngredients().subscribe(ingredients => {\n      this.ingredients = ingredients;\n      \n      this.lowIngredItems = this.ingredients.filter(item => item.ingredient_quantity  {\n        item.item_quantity_to_order = 1500 - item.ingredient_quantity;\n        item.item_name = item.ingredient_name;\n        item.item_quantity = item.ingredient_quantity;\n      });\n      const temp = [...this.lowInventItems, ...this.lowIngredItems];\n\n      temp.forEach(item => {\n        item.item_name = this.formatCamelCase(item.item_name);\n      });\n      this.popupContent = temp\n    });\n  }  \n\n  /**\n   * gets the sales from that time period\n   * @param start \n   * @param end \n   */\n  refreshSales(start: string, end: string): void {\n    this.OrderHistoryService.getOrderHistory().subscribe(ordItems => {\n      this.orderHistory = ordItems;\n\n      const startDate = new Date(start);\n      startDate.setUTCHours(0, 0, 0, 0);\n\n      const endDate = new Date(end);\n      endDate.setUTCHours(23, 59, 59, 999);\n\n      // console.log(ordItems);\n      // console.log(startDate);\n      // console.log(endDate);\n\n      const ItemsInRange = this.orderHistory.filter(order => {\n        const orderDate = new Date(order.order_timestamp);\n        return orderDate > startDate && orderDate  {\n        item.order_items = this.formatOrderItems(item.order_items);\n      });\n\n      console.log(ItemsInRange)\n\n      this.popupContent = ItemsInRange;\n    });\n  }\n  /**\n   * gets the sales from that time period\n   * @param start \n   * @param end \n   */\n  getExcess(start: string, end: string): void {\n    let inventory_ingrident_map = new Map();\n    // const additionalItems = ['napkins', 'plastic_seals', 'cups', 'straws'];\n    this.OrderHistoryService.getIngridents().subscribe(\n      data => {\n        data.forEach((item: { menu_item_name: string; ingredients: string[]; }) => {\n          let itemIngredients = item.ingredients.slice(); // Create a copy of the ingredients array\n\n          // // Check if the item has more than one ingredient and add additional items if so\n          // if (itemIngredients.length > 1) {\n          //   itemIngredients = itemIngredients.concat(additionalItems);\n          // }\n\n          inventory_ingrident_map.set(item.menu_item_name, itemIngredients);\n        });\n        console.log(inventory_ingrident_map); // This will log the map with the data\n      },\n      error => {\n        console.error('Error:', error); // This will log any error that occurs during the request\n      }\n    );\n\n    let ogIngrdientmap = new Map();\n      this.OrderHistoryService.getIng().subscribe(\n        data => {\n          data.forEach((item: { ingredient_name: string;  ingredient_quantity : number; }) => {\n            ogIngrdientmap.set(item.ingredient_name, item.ingredient_quantity);\n        });\n        console.log(ogIngrdientmap)\n      },\n        error => {\n          console.error('Error:', error); // This will log any error that occurs during the request\n        }\n      );\n    this.OrderHistoryService.getOrderHistory().subscribe(ordItems => {\n      this.orderHistory = ordItems;\n\n      // Initialize initialInventory\n      const initialInventory: InventoryMap = {};\n      this.InventoryService.getInventory().subscribe((inventoryItems: InventoryItem[]) => {\n        inventoryItems.forEach((item: InventoryItem) => {\n          initialInventory[item.item_name] = item.item_quantity;\n        });\n\n        console.log(initialInventory); // Log the map of item counts\n      });\n\n      const startDate = new Date(start);\n      startDate.setUTCHours(0, 0, 0, 0);\n  \n      const endDate = new Date(end);\n      endDate.setUTCHours(23, 59, 59, 999);\n  \n      const itemsInRange = this.orderHistory.filter(order => {\n        const orderDate = new Date(order.order_timestamp);\n        return orderDate >= startDate && orderDate ();\n      itemsInRange.forEach(order => {\n      order.order_items.forEach((item: OrderItem) => {\n        //@ts-ignore\n        const ingredients = inventory_ingrident_map.get(item) || [];\n        ingredients.forEach(ingredient => {\n          const currentCount = ingredientCountMap.get(ingredient) || 0;\n          ingredientCountMap.set(ingredient, currentCount + 1);\n        });\n      });\n    });\n\n    console.log(\"Ingredient Usage Count:\", ingredientCountMap);\n      // console.log(\"passed sales\")\n      let excessIngredients: { excessIngredients: string }[] = [];\n      ingredientCountMap.forEach((count, ingredient) => {\n        //@ts-ignore\n        if(count  {\n      let formattedItem = item.replace(/_/g, ' ');\n  \n      formattedItem = formattedItem.replace(/\\w\\S*/g, (word) => {\n        return word.charAt(0).toUpperCase() + word.substr(1).toLowerCase();\n      });\n  \n      return formattedItem;\n    });\n  \n    return formatted.join(', ');\n  }\n  /**\n   * Takes a string of items formatted with _ for a space and fixes them\n   * @param ordItem \n   * @returns formatted string\n   */\n  //Same as above but for only one string\n  formatSingleUnderscore(ordItem: string): string {\n    let formattedItem = ordItem.replace(/_/g, ' ');\n  \n    formattedItem = formattedItem.replace(/\\w\\S*/g, (word) => {\n      return word.charAt(0).toUpperCase() + word.substr(1).toLowerCase();\n    });\n  \n    return formattedItem;\n  }\n  /**\n   * Takes a string of items formatted with camelCase and fixes them\n   * @param name \n   * @returns formatted string\n   */\n  // Fixes camelCase words (one string)\n  formatCamelCase(name: string): string {\n    return name.replace(/([A-Z])/g, ' $1').replace(/^./, function(str){ return str.toUpperCase(); });\n  }\n  /**\n   * Takes a string of items formatted with camelCase and fixes them\n   * @param names \n   * @returns formatted string\n   */\n  // Same as above but for array of strings\n  formatCamelCaseArray(names: string[]): string[] {\n    return names.map(name => {\n      return name.replace(/([A-Z])/g, ' $1').replace(/^./, function(str){ return str.toUpperCase(); }).split(',').join(', ');\n    });\n  }\n  \n  /**\n   * This function is called when the user clicks on the \"View Inventory\" button\n   */\n  tableConfig?: TableConfig;\n/**\n * This hold all of the possible table configs for the value\n */\n  menuTableConfig: TableConfig = {\n    columns: [\n      { key: 'menu_item_id', header: 'ID' },\n      { key: 'menu_item_name', header: 'Name' },\n      { key: 'menu_item_type', header: 'Type' },\n      { key: 'menu_item_price', header: 'Price' },\n      { key: 'ingredients', header: 'Ingredients' }\n    ]\n  };\n  /**\n   * This hold all of the possible table configs for the value\n   */\n  ingredientsTableConfig: TableConfig = {\n    columns: [\n      { key: 'ingredient_id', header: 'ID' },\n      { key: 'ingredient_name', header: 'Name' },\n      { key: 'ingredient_quantity', header: 'Quantity' }\n    ]\n  };\n/**\n * This hold all of the possible table configs for the value\n */\n  inventoryTableConfig: TableConfig = {\n    columns: [\n      { key: 'item_id', header: 'ID' },\n      { key: 'item_name', header: 'Name' },\n      { key: 'item_quantity', header: 'Quantity' }\n    ]\n  };\n/**\n * This hold all of the possible table configs for the value\n */\n  restockReport: TableConfig = {\n    columns: [\n      { key: 'item_name', header: 'Name' },\n      { key: 'item_quantity', header: 'Current Quantity' },\n      { key: 'item_quantity_to_order', header: 'Amount to Order' }\n    ]\n  };\n/**\n * This hold all of the possible table configs for the value\n */\n  salesReport: TableConfig = {\n    columns: [\n      { key: 'order_timestamp', header: 'Date' },\n      { key: 'order_total', header: 'Price' },\n      { key: 'order_items', header: 'Items Ordered' }\n    ]\n  };\n/**\n * This hold all of the possible table configs for the value\n */\n  excessReport: TableConfig = {\n    columns: [\n      { key: 'excessIngredients',  header: 'Excess Item' }\n    ]\n  };\n  /**\n   * This hold all of the possible table configs for the value\n   * @param type \n   */\n  openPopup(type: string) {\n    this.showPopup = true;\n    switch (type) {\n      case 'menu':\n        this.popupTitle = 'Edit Menu';\n        this.tableConfig = this.menuTableConfig;\n        this.refreshMenu();\n        break;\n      case 'ingredients':\n        this.popupTitle = 'Edit Ingredients';\n        this.tableConfig = this.ingredientsTableConfig;\n        this.refreshIngredients();\n        break;\n      case 'inventory':\n        this.popupTitle = 'Edit Inventory';\n        this.tableConfig = this.inventoryTableConfig;\n        this.refreshInventory();\n        break;\n      }\n  }\n\n  // ACTION BUTTONS\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  showEditPopup: boolean = false;\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  selectedItem: any = null;\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  currentAction: 'edit' | 'delete' | 'add' | null = null;\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   * @param item \n   */\n  editRow(item: any): void {\n    console.log('Editing item, opening edit popup', item);\n    this.currentAction = 'edit';\n    this.selectedItem = item;\n    if (this.popupTitle === 'Edit Menu') {\n      this.editType = 'menu';\n    } else if (this.popupTitle === 'Edit Ingredients') {\n      this.editType = 'ingredients';\n    } else if (this.popupTitle === 'Edit Inventory') {\n      this.editType = 'inventory';\n    }\n    if (this.editType === 'menu') {\n      this.popupTitle = 'Edit Menu';\n    } else if (this.editType === 'ingredients') {\n      this.popupTitle = 'Edit Ingredients';\n    } else if (this.editType === 'inventory') {\n      this.popupTitle = 'Edit Inventory';\n    }\n    this.showPopup = false;\n    this.showEditPopup = true;\n  }  \n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   * @param item \n   */\n  deleteRow(item: any): void {\n    console.log('Deleting item:', item);\n    if (this.editType === 'menu') {\n      this.popupTitle = 'Edit Menu';\n    } else if (this.editType === 'ingredients') {\n      this.popupTitle = 'Edit Ingredients';\n    } else if (this.editType === 'inventory') {\n      this.popupTitle = 'Edit Inventory';\n    }\n    this.currentAction = 'delete';\n    this.selectedItem = item;\n    this.showConfirmationPopup = true;\n    this.showPopup = false;\n  }\n\n  // EDIT CONFIRMATIONS\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  onEditCancel(): void {\n    this.selectedItem = null;\n    this.showEditPopup = false;\n    this.showPopup = true; // Reopen the main popup if needed\n  }\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   * @param editedItem \n   */\n  onItemSave(editedItem: any): void {\n    // Process the edited item\n    if (this.popupTitle === 'Edit Menu') {\n      this.refreshMenu();\n    } else if (this.popupTitle === 'Edit Ingredients') {\n      this.refreshIngredients();\n    } else if (this.popupTitle === 'Edit Inventory') {\n      this.refreshInventory();\n    }\n    this.selectedItem = editedItem;\n    this.showEditPopup = false;\n    this.showConfirmationPopup = true;\n  }  \n\n  // CONFIRMATION POPUP\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  showConfirmationPopup: boolean = false;\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  editType: 'menu' | 'ingredients' | 'inventory' | null = null;\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   * @param item \n   */\n  onItemConfirm(item: any): void {\n    this.selectedItem = item;\n    this.showConfirmationPopup = false;\n    if (this.popupTitle === 'Edit Menu') {\n      if (this.currentAction === 'edit') {\n        this.MenuService.editMenuItem(item.menu_item_id, item).subscribe(() => {\n          this.refreshMenu();\n        });\n      } else if (this.currentAction === 'delete') {\n        console.log('Deleting menu item', item);\n        this.MenuService.deleteMenuItem(item.menu_item_id).subscribe(() => {\n          this.refreshMenu();\n        });\n      }\n    } else if (this.popupTitle === 'Edit Ingredients') {\n      if (this.currentAction === 'edit') {\n        this.IngredientsService.editIngredient(item.ingredient_id, item).subscribe(() => {\n          this.refreshIngredients();\n        });\n      } else if (this.currentAction === 'delete') {\n        this.IngredientsService.deleteIngredient(item.ingredient_id).subscribe(() => {\n          this.refreshIngredients();\n        });\n      }\n    } else if (this.popupTitle === 'Edit Inventory') {\n      if (this.currentAction === 'edit') {\n        this.InventoryService.editInventoryItem(item.item_id, item).subscribe(() => {\n          this.refreshInventory();\n        });\n      } else if (this.currentAction === 'delete') {\n        this.InventoryService.deleteInventoryItem(item.item_id).subscribe(() => {\n          this.refreshInventory();\n        });\n      }\n    } else if (this.popupTitle === 'Quick Add') {\n      if (this.editType === 'menu') {\n        this.MenuService.addMenuItem(item).subscribe(() => {\n          this.refreshMenu();\n        });\n        console.log('Adding menu item', item.menu_item_name);\n      } else if (this.editType === 'ingredients') {\n        this.IngredientsService.addIngredient(item).subscribe(() => {\n          this.refreshIngredients();\n        });\n      } else if (this.editType === 'inventory') {\n        this.InventoryService.addInventoryItem(item).subscribe(() => {\n          this.refreshInventory();\n        });\n      }\n    }\n    this.showPopup = true;\n    if (this.popupTitle === 'Add Seasonal Item') {\n      this.MenuService.addMenuItem(item).subscribe(() => {\n        this.refreshMenu();\n      });\n      this.showPopup = false;\n    }\n  }\n/**\n * This function is called when the user clicks on the \"Add\" button\n */\n  onItemDecline(): void {\n    this.showConfirmationPopup = false;\n    if (this.popupTitle === 'Edit Menu') {\n      this.showPopup = true;\n    } else if (this.popupTitle === 'Edit Ingredients') {\n      this.showPopup = true;\n    } else if (this.popupTitle === 'Edit Inventory') {\n      this.showPopup = true;\n    } else if (this.popupTitle === 'Quick Add') {\n      this.showQuickAddPopup = true;\n    } else if (this.popupTitle === 'Add Seasonal Item') {\n      this.showSeasonalItemPopup = true;\n    }\n  }\n\n  // QUICK ADD POPUP\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  showQuickAddPopup: boolean = false;\n/**\n *  This function is called when the user clicks on the \"Add\" button\n * @param type \n */\n  quickAdd(type: string): void {\n    if (this.popupTitle === 'Edit Menu') {\n      this.editType = 'menu';\n    } else if (this.popupTitle === 'Edit Ingredients') {\n      this.editType = 'ingredients';\n    } else if (this.popupTitle === 'Edit Inventory') {\n      this.editType = 'inventory';\n    }\n    this.popupTitle = 'Quick Add';\n    console.log('Quick add');\n    this.showPopup = false;\n    this.showQuickAddPopup = true;\n  }\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  onQuickAddCancel(): void {\n    this.showQuickAddPopup = false;\n    this.showPopup = true;\n  }\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   * @param newItem \n   */\n  onItemAdd(newItem: any): void {\n    // Process the new item\n    this.currentAction = 'add';\n    if (this.popupTitle === 'Edit Menu') {\n      this.refreshMenu();\n    } else if (this.popupTitle === 'Edit Ingredients') {\n      this.refreshIngredients();\n    } else if (this.popupTitle === 'Edit Inventory') {\n      this.refreshInventory();\n    }\n    this.selectedItem = newItem;\n    this.showQuickAddPopup = false;\n    this.showConfirmationPopup = true;\n  }\n\n  // SEAOSONAL ITEM POPUP\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  showSeasonalItemPopup: boolean = false;\n/**\n * This function is called when the user clicks on the \"Add\" button\n * @param type \n */\n  seasonalItem(type: string): void {\n    this.popupTitle = 'Add Seasonal Item';\n    this.currentAction = 'add';\n    console.log('Seasonal item');\n    this.showSeasonalItemPopup = true;\n  }\n/**\n * This function is called when the user clicks on the \"Add\" button\n */\n  onSeasonalItemCancel(): void {\n    this.showSeasonalItemPopup = false;\n  }\n/**\n * This function is called when the user clicks on the \"Add\" button\n * @param newItem \n */\n  seasonalItemAdd(newItem: any): void {\n    this.selectedItem = newItem;\n    this.showSeasonalItemPopup = false;\n    this.showConfirmationPopup = true;\n  }\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   * @param type \n   * @param start \n   * @param end \n   */\n  // OTHER\n  reportPopup(type: string, start?: string, end?: string) {\n    this.showRestockReportPopup = true;\n    switch (type) {\n      case 'restock': \n        this.popupTitle = 'Restock Report';\n        this.tableConfig = this.restockReport;\n        this.getLowStock();\n        break;\n      case 'sales': \n        if (!start) {\n          start = \"2023-01-01\";\n        }\n        if (!end) {\n          end = \"2023-03-01\";\n        }\n        this.popupTitle = 'Sales Report';\n        this.tableConfig = this.salesReport;\n        this.refreshSales(start, end);\n        break;\n      case 'excess':\n        this.popupTitle = 'Excess Report';\n        this.tableConfig = this.excessReport;\n        if (!start) {\n          start = \"2023-01-01\";\n        }\n        if (!end) {\n          end = \"2023-03-01\";\n        }\n        this.getExcess(start, end);\n        break;\n      }\n  }\n\n  /**\n   * This function is called when the user clicks on the \"Add\" button\n   */\n  clickSalesReport() {\n    // Do something cool\n    console.log('clickSalesReport()');\n  }\n  /**\n   *  This function is called when the user clicks on the \"Add\" button\n   */\n  clickExcessReport() {\n    // Do something cool\n    console.log('clickExcessReport()');\n  }\n  /**\n   *  This function is called when the user clicks on the \"Add\" button\n   */\n  clickRestockReport() {\n    // Do something cool\n    console.log('clickStockReport()');\n  }\n  /**\n   *  This function is called when the user clicks on the \"Add\" button\n   */\n  clickPPReport() {\n    // Do something cool\n    console.log('clickPPReport()');\n  }\n  /**\n   *  This function is called when the user clicks on the \"Add\" button\n   */\n  clickIPReport() {\n    // Do something cool\n    console.log('clickIPReport()');\n  }\n}\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TableConfig-2.html":{"url":"interfaces/TableConfig-2.html","title":"interface - TableConfig-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TableConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shopping-cart/shopping-cart.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the configuration object for table columns in the shopping cart.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            columns\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        columns\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        columns:     TableColumn[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TableColumn[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The columns of the table.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { MenuItem } from '../menu-view/menu-item.model';\nimport { CartService } from '../cart-modal/cart-modal.service';\nimport { Subscription } from 'rxjs';\nimport { OrdersService } from '../services/orders.service';\nimport { HttpClient } from '@angular/common/http';\n\n/**\n * Represents the structure of a table column.\n */\ninterface TableColumn {\n  /**\n   * The key of the column.\n   */\n  key: string;\n  /**\n   * The header of the column.\n   */\n  header: string;\n}\n\n/**\n * Represents the configuration object for table columns in the shopping cart.\n */\ninterface TableConfig {\n  /**\n   * The columns of the table.\n   */\n  columns: TableColumn[];\n}\n\n/**\n * `ShoppingCartComponent` manages the display and interactions within the shopping cart.\n * It allows users to view, modify, and proceed with their order. This component handles item removal, \n * continuation to checkout, and order submission.\n *\n * @Component Decorator that marks the class as an Angular component, specifying the selector, template, and styles.\n */\n@Component({\n  selector: 'app-shopping-cart',\n  templateUrl: './shopping-cart.component.html',\n  styleUrls: ['./shopping-cart.component.scss']\n})\nexport class ShoppingCartComponent {\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  @Input() menuItems: MenuItem[] | undefined;\n  /**\n   * Event emitter to notify the parent component to close the popup.\n   */\n  @Output() continueClicked: EventEmitter = new EventEmitter();\n  /**\n   * Event emitter to notify the parent component to close the popup.\n   */\n  @Output() cancelClicked: EventEmitter = new EventEmitter();\n  /**\n   * The subscription to the cart items.\n   */\n  private cartSubscription: Subscription | undefined;\n  /**\n   * The subscription to the cart total.\n   */\n  showPopup: boolean = false;\n  /**\n   * The title of the popup, typically describing the content or purpose of the table.\n   */\n  popupTitle: string = '';\n  /**\n   *  The content to be displayed within the table.\n   */\n  popupContent: any;\n  /**\n   * The total price of the items in the cart.\n   */\n  cartTotal: string = \"0\";\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n\n  tableConfig?: TableConfig;\n  /**\n   * The content to be displayed within the table.\n   * @param cartService \n   * @param http \n   * @param orderService \n   */\n\n  constructor(private cartService: CartService, private http: HttpClient,  private orderService: OrdersService) { }\n\n  popupConfig: TableConfig = {\n    columns: [\n      { key: 'menu_item_name', header: 'Name' },\n      { key: 'menu_item_price', header: 'Price' }\n    ]\n  };\n  /**\n   * OnInit lifecycle hook to subscribe to the cart items.\n   */\n  ngOnInit() {\n    // Subscribe to changes in the cartItems$\n    this.cartSubscription = this.cartService.cartItems$.subscribe(items => {\n      this.menuItems = items;\n    });\n  }\n  /**\n   * Removes an item from the cart.\n   *\n   * @param index The index of the item to be removed.\n   */\n  removeItem(index: number) {\n    this.cartService.removeItem(index);\n  }\n  /**\n   * Handles the continue action, triggers the checkout process.\n   */\n  onContinueClick() {\n    this.continueClicked.emit();\n    // const orderDetails = {\n    //   order_timestamp: new Date(),\n    //   order_items: this.menuItems?.map(item => item.menu_item_name),\n    //   order_total: this.calculateTotal(),\n    //   // Add other necessary details like employee_id, customer_id, etc.\n    // };\n\n    // do the popup\n    /**\n     * Shows the popup with the order details.\n     */\n    this.showPopup = true;\n    /**\n     * The title of the popup.\n     */\n    this.popupTitle = 'Checkout';\n    /**\n     * The content of the popup.\n     */\n    this.popupContent = this.menuItems;\n    /**\n     * The total price of the order.\n     */\n    this.cartTotal = this.calculateTotal().toString();\n\n    // // Make an HTTP POST request to your backend endpoint\n    // this.http.post('/api/create-order', orderDetails)\n    //   .subscribe((response) => {\n    //     console.log('Order created successfully:', response);\n    //     this.cartService.clearCart();\n    //     this.continueClicked.emit();\n    //   }, (error) => {\n    //     console.error('Error creating order:', error);\n    //   });\n    \n    if (this.menuItems && this.menuItems.length > 0) {\n      this.onCheckout();\n      this.cartService.clearCart();\n      this.menuItems = [];\n    }\n  }\n  /**\n   * Performs the checkout operation and updates the order history.\n   */\n  onCheckout() {\n    const employeeId = 1; // Replace with actual employeeId\n    const customerId = 1; // Replace with actual customerId\n\n    // Update order history\n    //@ts-ignore\n    this.orderService.updateOrderHistory(this.menuItems, this.calculateTotal(), employeeId, customerId)\n      .subscribe(response => {\n        console.log('Order history updated successfully:', response);\n      }, error => {\n        console.error('Error updating order history:', error);\n      });\n  }\n  /**\n   * OnDestroy lifecycle hook to clean up subscriptions.\n   */\n  ngOnDestroy() {\n    // Unsubscribe to prevent memory leak\n    if (this.cartSubscription) {\n      this.cartSubscription.unsubscribe();\n    }\n  }\n  /**\n   * Emits an event to cancel the cart operation and clears the cart.\n   */\n  onCancelClick() {\n    this.cancelClicked.emit();\n    this.cartService.clearCart();\n  }\n  /**\n   * Calculates the total price of items in the cart.\n   *\n   * @returns The total price of all items in the cart.\n   */\n  calculateTotal(): number {\n    if (this.menuItems) {\n      return this.menuItems.reduce((total, item) => total + parseFloat(item.menu_item_price), 0);\n    } else {\n      return 0;\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TableConfig-3.html":{"url":"interfaces/TableConfig-3.html","title":"interface - TableConfig-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TableConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/manager-view/manager-popup/manager-popup.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the configuration object for table columns in the manager's popup.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            columns\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        columns\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        columns:     TableColumn[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TableColumn[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The columns of the table.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n/**\n * Represents the structure of a table column.\n */\ninterface TableColumn {\n  /**\n   * The key of the column.\n   */\n  key: string;\n  /**\n   * The header of the column.\n   */\n  header: string;\n}\n\n/**\n * Represents the configuration object for table columns in the manager's popup.\n */\ninterface TableConfig {\n  /**\n   * The columns of the table.\n   */\n  columns: TableColumn[];\n}\n\n/**\n * `ManagerPopupComponent` is a reusable UI component designed for displaying and managing tabular data in a popup modal.\n * It provides functionalities like edit, delete, and quick add operations for each row in the table.\n *\n * @Component Decorator that marks the class as an Angular component and provides metadata about the component.\n */\n@Component({\n  selector: 'app-manager-popup',\n  templateUrl: './manager-popup.component.html',\n  styleUrls: ['./manager-popup.component.scss']\n})\nexport class ManagerPopupComponent {\n  /**\n   * The title of the popup, typically describing the table content or action.\n   */\n  @Input() title: string = '';\n\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  @Input() tableConfig?: TableConfig;\n\n  /**\n   * The content to be displayed within the table.\n   */\n  @Input() content: any[] = [];\n\n  /**\n   * Event emitter to notify the parent component to close the popup.\n   */\n  @Output() close = new EventEmitter();\n\n  /**\n   * Event emitters for table row actions.\n   */\n  @Output() edit = new EventEmitter();\n  @Output() delete = new EventEmitter();\n  @Output() quick = new EventEmitter();\n\n  /**\n   * Handles the edit action for a row in the table.\n   *\n   * @param row The data row to be edited.\n   */\n  editRow(row: any): void {\n    console.log('Editing row:', row);\n    this.edit.emit(row);\n  }\n\n  /**\n   * Handles the delete action for a row in the table.\n   *\n   * @param row The data row to be deleted.\n   */\n  deleteRow(row: any): void {\n    console.log('Deleting row:', row);\n    this.delete.emit(row);\n  }\n\n  /**\n   * Emits an event for a quick add action.\n   */\n  quickAdd(): void {\n    this.quick.emit();\n  }\n\n  /**\n   * Emits an event to close the popup.\n   */\n  closePopup(): void {\n    this.close.emit();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TableConfig-4.html":{"url":"interfaces/TableConfig-4.html","title":"interface - TableConfig-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TableConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shopping-cart/checkout-popup/checkout-popup.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the configuration object for table columns in the checkout popup.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            columns\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        columns\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        columns:     TableColumn[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TableColumn[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The columns of the table.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n/**\n * Represents the structure of a table column.\n */\ninterface TableColumn {\n  /**\n   * The key of the column.\n   */\n  key: string;\n  /**\n   * The header of the column.\n   */\n  header: string;\n}\n\n/**\n * Represents the configuration object for table columns in the checkout popup.\n */\ninterface TableConfig {\n  /**\n   * The columns of the table.\n   */\n  columns: TableColumn[];\n}\n\n/**\n * `CheckoutPopupComponent` is designed to display a checkout interface.\n * It presents a summary of items, their details, and the total cost in a tabular format.\n *\n * @Component Decorator that marks the class as an Angular component, specifying the selector, template, and styles.\n */\n@Component({\n  selector: 'app-checkout-popup',\n  templateUrl: './checkout-popup.component.html',\n  styleUrls: ['./checkout-popup.component.scss']\n})\nexport class CheckoutPopupComponent {\n  /**\n   * The title of the popup, typically describing the content or purpose.\n   */\n  @Input() title: string = '';\n\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  @Input() tableConfig?: TableConfig;\n\n  /**\n   * The content to be displayed within the table.\n   */\n  @Input() content: any[] = [];\n\n  /**\n   * The total cost of items in the checkout.\n   */\n  @Input() total: string = \"0\";\n\n  /**\n   * Event emitter to notify the parent component to close the popup.\n   */\n  @Output() close = new EventEmitter();\n\n  /**\n   * Emits an event to close the checkout popup.\n   */\n  closePopup(): void {\n    this.close.emit();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TableConfig-5.html":{"url":"interfaces/TableConfig-5.html","title":"interface - TableConfig-5","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TableConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/manager-view/restock-report-popup/restock-report-popup.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the configuration object for table columns in the restock report popup.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            columns\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        columns\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        columns:     TableColumn[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TableColumn[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The columns of the table.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n/**\n * Represents the structure of a table column in the restock report.\n */\ninterface TableColumn {\n  /**\n   * The key of the column.\n   */\n  key: string;\n  /**\n   * The header of the column.\n   */\n  header: string;\n}\n\n/**\n * Represents the configuration object for table columns in the restock report popup.\n */\ninterface TableConfig {\n  /**\n   * The columns of the table.\n   */\n  columns: TableColumn[];\n}\n\n/**\n * `RestockReportPopupComponent` is designed to provide a popup modal for displaying restock reports.\n * It presents tabular data such as inventory levels and restock requirements, allowing for a quick overview of stock status.\n *\n * @Component Decorator that marks the class as an Angular component, specifying the selector, template, and styles.\n */\n@Component({\n  selector: 'app-restock-report-popup',\n  templateUrl: './restock-report-popup.component.html',\n  styleUrls: ['./restock-report-popup.component.scss']\n})\nexport class RestockReportPopupComponent {\n  /**\n   * The title of the popup, typically describing the content or purpose of the table.\n   */\n  @Input() title: string = '';\n\n  /**\n   * The configuration for the table, including the columns to display.\n   */\n  @Input() tableConfig?: TableConfig;\n\n  /**\n   * The content to be displayed within the table.\n   */\n  @Input() content: any[] = [];\n\n  /**\n   * Event emitter to notify the parent component to close the popup.\n   */\n  @Output() close = new EventEmitter();\n\n  /**\n   * Emits an event to close the restock report popup.\n   */\n  closeRestockPopup(): void {\n    this.close.emit();\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeamMember.html":{"url":"classes/TeamMember.html","title":"class - TeamMember","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeamMember\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/teammember.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents a team member with properties like name, section they work in, and their favorite movie.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                favorite_movie\n                            \n                            \n                                    Optional\n                                section\n                            \n                            \n                                    Optional\n                                team_member\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        favorite_movie\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/teammember.ts:16\n                        \n                    \n\n            \n                \n                    The favorite movie of the team member.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        section\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/teammember.ts:12\n                        \n                    \n\n            \n                \n                    The name of the team member.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        team_member\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/teammember.ts:8\n                        \n                    \n\n            \n                \n                    The id of the team member.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TeamMember {\n    /**\n     * The id of the team member.\n     */\n    team_member?: string;\n    /**\n     * The name of the team member.\n     */\n    section?: number;\n    /**\n     * The favorite movie of the team member.\n     */\n    favorite_movie?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TeamMemberService.html":{"url":"injectables/TeamMemberService.html","title":"injectable - TeamMemberService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TeamMemberService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/teammember.service.ts\n        \n\n\n            \n                Description\n            \n            \n                TeamMemberService provides methods to fetch and manage team member data.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTeamMembers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/teammember.service.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor for TeamMemberService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The HttpClient module to make HTTP requests.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getTeamMembers\n                        \n                    \n                \n            \n            \n                \ngetTeamMembers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/teammember.service.ts:25\n                        \n                    \n\n\n            \n                \n                        Retrieves a list of team members from the API.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable containing team member data.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.apiUrl}/teammembers`\n                    \n                \n                    \n                        \n                                Defined in src/app/services/teammember.service.ts:14\n                        \n                    \n\n            \n                \n                    The base URL for the team member API.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n/**\n * `TeamMemberService` provides methods to fetch and manage team member data.\n */\n@Injectable({ providedIn: 'root' })\nexport class TeamMemberService {\n  /**\n   * The base URL for the team member API.\n   */\n  private baseUrl = `${environment.apiUrl}/teammembers`;\n  /**\n   * Constructor for `TeamMemberService`.\n   * @param http The HttpClient module to make HTTP requests.\n   */\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Retrieves a list of team members from the API.\n   * @returns An Observable containing team member data.\n   */\n  getTeamMembers(): Observable {\n    return this.http.get(this.baseUrl);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherComponent.html":{"url":"components/WeatherComponent.html","title":"component - WeatherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WeatherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather.component.ts\n\n\n\n    \n        Description\n    \n    \n        WeatherComponent is responsible for fetching and displaying weather data.\nIt retrieves geographical coordinates based on a location query and then fetches the weather data for that location.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather\n            \n\n\n\n            \n                styleUrls\n                ./weather.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                weatherLoaded\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather.component.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor for WeatherComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HttpClient for making HTTP requests.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        weatherLoaded\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather.component.ts:20\n                            \n                        \n                \n                    \n                        The data to be displayed in the table.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/weather/weather.component.ts:34\n                        \n                    \n\n\n            \n                \n                        OnInit lifecycle hook to initiate fetching of weather data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'api-weather'\n                    \n                \n                    \n                        \n                                Defined in src/app/weather/weather.component.ts:30\n                        \n                    \n\n            \n                \n                    The title of the component.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { switchMap } from 'rxjs/operators';\n\n/**\n * `WeatherComponent` is responsible for fetching and displaying weather data.\n * It retrieves geographical coordinates based on a location query and then fetches the weather data for that location.\n *\n * @Component Decorator that marks the class as an Angular component, specifying the selector, template, and styles.\n */\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.scss']\n})\nexport class WeatherComponent implements OnInit {\n  /**\n   * The data to be displayed in the table.\n   */\n  @Output() weatherLoaded = new EventEmitter();  // Add this line\n  /**\n   * Constructor for `WeatherComponent`.\n   * \n   * @param http HttpClient for making HTTP requests.\n   */\n  constructor(private http: HttpClient) {}\n  /**\n   * The title of the component.\n   */\n  title = 'api-weather';\n  /**\n   * OnInit lifecycle hook to initiate fetching of weather data.\n   */\n  ngOnInit(): void {\n    this.http\n      .get(`https://api.openweathermap.org/geo/1.0/direct?q=college%20station&appid=a4a7ae9e4278c9df8a149e4138ab3c0c`)\n      .pipe(\n        switchMap(data => {\n          const lat = data[0].lat;\n          const lon = data[0].lon;\n          return this.http.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=a4a7ae9e4278c9df8a149e4138ab3c0c`);\n        })\n      )\n      .subscribe(\n        data => {\n          this.weatherLoaded.emit(data);  // Emit the data here\n        },\n        error => {\n          console.error(error);\n        }\n      );\n  }\n}\n    \n\n    \n        \n    \n\n    \n                \n                    ./weather.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthenticationButtonComponent', 'selector': 'app-authentication-button'},{'name': 'CartModalComponent', 'selector': 'app-cart-modal'},{'name': 'CashierViewComponent', 'selector': 'app-cashier-view'},{'name': 'CheckoutPopupComponent', 'selector': 'app-checkout-popup'},{'name': 'ConfirmationPopupComponent', 'selector': 'app-confirmation-popup'},{'name': 'ContactUsComponent', 'selector': 'app-contact-us'},{'name': 'CustomerViewComponent', 'selector': 'app-customer-view'},{'name': 'EditItemPopupComponent', 'selector': 'app-edit-item-popup'},{'name': 'EmployeeCreationsMenuComponent', 'selector': 'app-employee-creations-menu'},{'name': 'GetRoleComponent', 'selector': 'app-get-role'},{'name': 'LearnMoreComponent', 'selector': 'app-learn-more'},{'name': 'LoginButtonComponent', 'selector': 'app-login-button'},{'name': 'LogoutButtonComponent', 'selector': 'app-logout-button'},{'name': 'ManagerPopupComponent', 'selector': 'app-manager-popup'},{'name': 'ManagerViewComponent', 'selector': 'app-manager-view'},{'name': 'MenuItemComponent', 'selector': 'app-menu-item'},{'name': 'MenuViewComponent', 'selector': 'app-menu-view'},{'name': 'MilkTeaMenuComponent', 'selector': 'app-milk-tea-menu'},{'name': 'NavMenuComponent', 'selector': 'app-nav-menu'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'QuickAddPopupComponent', 'selector': 'app-quick-add-popup'},{'name': 'RestockReportPopupComponent', 'selector': 'app-restock-report-popup'},{'name': 'SeasonalItemPopupComponent', 'selector': 'app-seasonal-item-popup'},{'name': 'ShoppingCartComponent', 'selector': 'app-shopping-cart'},{'name': 'SignatureMilkTeaMenuComponent', 'selector': 'app-signature-milk-tea-menu'},{'name': 'SignupButtonComponent', 'selector': 'app-signup-button'},{'name': 'SlushMenuComponent', 'selector': 'app-slush-menu'},{'name': 'SmoothieMenuComponent', 'selector': 'app-smoothie-menu'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                95 %\n                (23/24)\n            \n        \n        \n            \n                \n                src/app/cart-modal/cart-modal.component.ts\n            \n            component\n            CartModalComponent\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/cart-modal/cart-modal.service.ts\n            \n            injectable\n            CartService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/cashier-view/cashier-view.component.ts\n            \n            component\n            CashierViewComponent\n            \n                93 %\n                (31/33)\n            \n        \n        \n            \n                \n                src/app/cashier-view/cashier-view.component.ts\n            \n            interface\n            TableColumn\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/cashier-view/cashier-view.component.ts\n            \n            interface\n            TableConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/components/authentication-button/authentication-button.component.ts\n            \n            component\n            AuthenticationButtonComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/get-role/data-type.ts\n            \n            interface\n            DataType\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/components/get-role/get-role.component.ts\n            \n            component\n            GetRoleComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/components/get-role/get-role.service.ts\n            \n            injectable\n            DataService\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/components/login-button/login-button.component.ts\n            \n            component\n            LoginButtonComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/components/logout-button/logout-button.component.ts\n            \n            component\n            LogoutButtonComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/components/signup-button/signup-button.component.ts\n            \n            component\n            SignupButtonComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/contact-us/contact-us.component.ts\n            \n            component\n            ContactUsComponent\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/customer-view/customer-view.component.ts\n            \n            component\n            CustomerViewComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/employee-creations-menu/employee-creations-menu.component.ts\n            \n            component\n            EmployeeCreationsMenuComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/employee-creations-menu/employee-creations-menu.component.ts\n            \n            interface\n            MenuItem\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/learn-more/learn-more.component.ts\n            \n            component\n            LearnMoreComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/manager-view/confirmation-popup/confirmation-popup.component.ts\n            \n            component\n            ConfirmationPopupComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/manager-view/edit-item-popup/edit-item-popup.component.ts\n            \n            component\n            EditItemPopupComponent\n            \n                100 %\n                (20/20)\n            \n        \n        \n            \n                \n                src/app/manager-view/manager-popup/manager-popup.component.ts\n            \n            component\n            ManagerPopupComponent\n            \n                83 %\n                (10/12)\n            \n        \n        \n            \n                \n                src/app/manager-view/manager-popup/manager-popup.component.ts\n            \n            interface\n            TableColumn\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/manager-view/manager-popup/manager-popup.component.ts\n            \n            interface\n            TableConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/manager-view/manager-view.component.ts\n            \n            component\n            ManagerViewComponent\n            \n                100 %\n                (58/58)\n            \n        \n        \n            \n                \n                src/app/manager-view/manager-view.component.ts\n            \n            interface\n            InventoryItem\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/manager-view/manager-view.component.ts\n            \n            interface\n            InventoryMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/manager-view/manager-view.component.ts\n            \n            interface\n            OrderItem\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/manager-view/manager-view.component.ts\n            \n            interface\n            SalesSummary\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/manager-view/manager-view.component.ts\n            \n            interface\n            TableColumn\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/manager-view/manager-view.component.ts\n            \n            interface\n            TableConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/manager-view/quick-add-popup/quick-add-popup.component.ts\n            \n            component\n            QuickAddPopupComponent\n            \n                100 %\n                (21/21)\n            \n        \n        \n            \n                \n                src/app/manager-view/restock-report-popup/restock-report-popup.component.ts\n            \n            component\n            RestockReportPopupComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/manager-view/restock-report-popup/restock-report-popup.component.ts\n            \n            interface\n            TableColumn\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/manager-view/restock-report-popup/restock-report-popup.component.ts\n            \n            interface\n            TableConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/manager-view/seasonal-item-popup/seasonal-item-popup.component.ts\n            \n            component\n            SeasonalItemPopupComponent\n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                src/app/menu-item/menu-item.component.ts\n            \n            component\n            MenuItemComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/menu-item/menu-item.component.ts\n            \n            interface\n            MenuItem\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/menu-view/menu-item.model.ts\n            \n            interface\n            CustomerMenuItem\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/menu-view/menu-item.model.ts\n            \n            interface\n            MenuItem\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/menu-view/menu-view.component.ts\n            \n            component\n            MenuViewComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/menu-view/menu-view.component.ts\n            \n            interface\n            MenuItem\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/milk-tea-menu/milk-tea-menu.component.ts\n            \n            component\n            MilkTeaMenuComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/milk-tea-menu/milk-tea-menu.component.ts\n            \n            interface\n            MenuItem\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/models/customers.ts\n            \n            class\n            Customers\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/models/employees.ts\n            \n            class\n            Employees\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/models/ingredients.ts\n            \n            class\n            Ingredients\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/inventory.ts\n            \n            class\n            Inventory\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/menu.ts\n            \n            class\n            Menu\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/models/order-history.ts\n            \n            class\n            OrderHistory\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/models/orders.ts\n            \n            class\n            Orders\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/models/teammember.ts\n            \n            class\n            TeamMember\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/nav-menu/nav-menu.component.ts\n            \n            component\n            NavMenuComponent\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/pages/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/pipes/UnderlineRemovat.pipe.service.ts\n            \n            pipe\n            ReplaceUnderscoresPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/pipes/capitalize-and-replace.pipe.ts\n            \n            pipe\n            CapitalizeAndReplacePipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/pipes/capitalize.pipe.ts\n            \n            pipe\n            CapitalizePipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/pipes/format-camel-case.pipe.ts\n            \n            pipe\n            FormatCamelCasePipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/pipes/replace.pipe.ts\n            \n            pipe\n            ReplacePipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/Magnifier.service.ts\n            \n            injectable\n            MagnifierService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/currentcomp.service.ts\n            \n            injectable\n            ActiveComponentService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/customers.service.ts\n            \n            injectable\n            CustomersService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/employees.service.ts\n            \n            injectable\n            EmployeesService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/ingredients.service.ts\n            \n            injectable\n            IngredientsService\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/services/inventory.service.ts\n            \n            injectable\n            InventoryService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/services/menu.service.ts\n            \n            injectable\n            MenuService\n            \n                81 %\n                (9/11)\n            \n        \n        \n            \n                \n                src/app/services/order-history.service.ts\n            \n            injectable\n            OrderHistoryService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/services/orders.service.ts\n            \n            injectable\n            OrdersService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/services/teammember.service.ts\n            \n            injectable\n            TeamMemberService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/shopping-cart/checkout-popup/checkout-popup.component.ts\n            \n            component\n            CheckoutPopupComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/shopping-cart/checkout-popup/checkout-popup.component.ts\n            \n            interface\n            TableColumn\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shopping-cart/checkout-popup/checkout-popup.component.ts\n            \n            interface\n            TableConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/shopping-cart/shopping-cart.component.ts\n            \n            component\n            ShoppingCartComponent\n            \n                94 %\n                (18/19)\n            \n        \n        \n            \n                \n                src/app/shopping-cart/shopping-cart.component.ts\n            \n            interface\n            TableColumn\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/shopping-cart/shopping-cart.component.ts\n            \n            interface\n            TableConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/signature-milk-tea-menu/signature-milk-tea-menu.component.ts\n            \n            component\n            SignatureMilkTeaMenuComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/signature-milk-tea-menu/signature-milk-tea-menu.component.ts\n            \n            interface\n            MenuItem\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/slush-menu/slush-menu.component.ts\n            \n            component\n            SlushMenuComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/slush-menu/slush-menu.component.ts\n            \n            interface\n            MenuItem\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/smoothie-menu/smoothie-menu.component.ts\n            \n            component\n            SmoothieMenuComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/smoothie-menu/smoothie-menu.component.ts\n            \n            interface\n            MenuItem\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/weather/weather.component.ts\n            \n            component\n            WeatherComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^16.2.0\n        \n            @angular/common : ^16.2.0\n        \n            @angular/compiler : ^16.2.0\n        \n            @angular/core : ^16.2.0\n        \n            @angular/fire : ^16.0.0\n        \n            @angular/forms : ^16.2.0\n        \n            @angular/platform-browser : ^16.2.0\n        \n            @angular/platform-browser-dynamic : ^16.2.0\n        \n            @angular/router : ^16.2.0\n        \n            @auth0/auth0-angular : ^1.11.1\n        \n            @ngx-translate/core : ^15.0.0\n        \n            @ngx-translate/http-loader : ^8.0.0\n        \n            bootstrap : ^5.3.2\n        \n            bootstrap-icons : ^1.11.1\n        \n            crypto-browserify : ^3.12.0\n        \n            dotenv : ^16.3.1\n        \n            express : ^4.18.2\n        \n            firebase : ^10.6.0\n        \n            html2canvas : ^1.4.1\n        \n            html2canvas-proxy : ^1.0.1\n        \n            jquery : ^3.7.1\n        \n            pg : ^8.11.3\n        \n            puppeteer : ^21.5.2\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.13.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMyNewApp\nThis project was generated with Angular CLI version 16.2.8.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAuthenticationButtonComponent\n\nAuthenticationButtonComponent\n\nAppModule -->\n\nAuthenticationButtonComponent->AppModule\n\n\n\n\n\nCapitalizeAndReplacePipe\n\nCapitalizeAndReplacePipe\n\nAppModule -->\n\nCapitalizeAndReplacePipe->AppModule\n\n\n\n\n\nCapitalizePipe\n\nCapitalizePipe\n\nAppModule -->\n\nCapitalizePipe->AppModule\n\n\n\n\n\nCartModalComponent\n\nCartModalComponent\n\nAppModule -->\n\nCartModalComponent->AppModule\n\n\n\n\n\nCashierViewComponent\n\nCashierViewComponent\n\nAppModule -->\n\nCashierViewComponent->AppModule\n\n\n\n\n\nCheckoutPopupComponent\n\nCheckoutPopupComponent\n\nAppModule -->\n\nCheckoutPopupComponent->AppModule\n\n\n\n\n\nConfirmationPopupComponent\n\nConfirmationPopupComponent\n\nAppModule -->\n\nConfirmationPopupComponent->AppModule\n\n\n\n\n\nContactUsComponent\n\nContactUsComponent\n\nAppModule -->\n\nContactUsComponent->AppModule\n\n\n\n\n\nCustomerViewComponent\n\nCustomerViewComponent\n\nAppModule -->\n\nCustomerViewComponent->AppModule\n\n\n\n\n\nEditItemPopupComponent\n\nEditItemPopupComponent\n\nAppModule -->\n\nEditItemPopupComponent->AppModule\n\n\n\n\n\nEmployeeCreationsMenuComponent\n\nEmployeeCreationsMenuComponent\n\nAppModule -->\n\nEmployeeCreationsMenuComponent->AppModule\n\n\n\n\n\nFormatCamelCasePipe\n\nFormatCamelCasePipe\n\nAppModule -->\n\nFormatCamelCasePipe->AppModule\n\n\n\n\n\nGetRoleComponent\n\nGetRoleComponent\n\nAppModule -->\n\nGetRoleComponent->AppModule\n\n\n\n\n\nLoginButtonComponent\n\nLoginButtonComponent\n\nAppModule -->\n\nLoginButtonComponent->AppModule\n\n\n\n\n\nLogoutButtonComponent\n\nLogoutButtonComponent\n\nAppModule -->\n\nLogoutButtonComponent->AppModule\n\n\n\n\n\nManagerPopupComponent\n\nManagerPopupComponent\n\nAppModule -->\n\nManagerPopupComponent->AppModule\n\n\n\n\n\nManagerViewComponent\n\nManagerViewComponent\n\nAppModule -->\n\nManagerViewComponent->AppModule\n\n\n\n\n\nMenuItemComponent\n\nMenuItemComponent\n\nAppModule -->\n\nMenuItemComponent->AppModule\n\n\n\n\n\nMenuViewComponent\n\nMenuViewComponent\n\nAppModule -->\n\nMenuViewComponent->AppModule\n\n\n\n\n\nMilkTeaMenuComponent\n\nMilkTeaMenuComponent\n\nAppModule -->\n\nMilkTeaMenuComponent->AppModule\n\n\n\n\n\nNavMenuComponent\n\nNavMenuComponent\n\nAppModule -->\n\nNavMenuComponent->AppModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nAppModule -->\n\nProfileComponent->AppModule\n\n\n\n\n\nQuickAddPopupComponent\n\nQuickAddPopupComponent\n\nAppModule -->\n\nQuickAddPopupComponent->AppModule\n\n\n\n\n\nReplacePipe\n\nReplacePipe\n\nAppModule -->\n\nReplacePipe->AppModule\n\n\n\n\n\nReplaceUnderscoresPipe\n\nReplaceUnderscoresPipe\n\nAppModule -->\n\nReplaceUnderscoresPipe->AppModule\n\n\n\n\n\nRestockReportPopupComponent\n\nRestockReportPopupComponent\n\nAppModule -->\n\nRestockReportPopupComponent->AppModule\n\n\n\n\n\nSeasonalItemPopupComponent\n\nSeasonalItemPopupComponent\n\nAppModule -->\n\nSeasonalItemPopupComponent->AppModule\n\n\n\n\n\nShoppingCartComponent\n\nShoppingCartComponent\n\nAppModule -->\n\nShoppingCartComponent->AppModule\n\n\n\n\n\nSignatureMilkTeaMenuComponent\n\nSignatureMilkTeaMenuComponent\n\nAppModule -->\n\nSignatureMilkTeaMenuComponent->AppModule\n\n\n\n\n\nSignupButtonComponent\n\nSignupButtonComponent\n\nAppModule -->\n\nSignupButtonComponent->AppModule\n\n\n\n\n\nSlushMenuComponent\n\nSlushMenuComponent\n\nAppModule -->\n\nSlushMenuComponent->AppModule\n\n\n\n\n\nSmoothieMenuComponent\n\nSmoothieMenuComponent\n\nAppModule -->\n\nSmoothieMenuComponent->AppModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nAppModule -->\n\nWeatherComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    30 Components\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    26 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        4 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    production: true,\n    apiUrl: '/api'\n}\n                    \n                \n\n            \n                \n                    This is how we keep track of our current environment url\n\n                \n            \n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  auth: {\n    domain: auth.domain,\n    clientId: auth.clientId,\n    redirectUri: window.location.origin,\n  },\n  apiUrl: 'http://localhost:3000/api',\n}\n                    \n                \n\n            \n                \n                    This decides between using the local host or the current url as teh wya to get the database commands\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
